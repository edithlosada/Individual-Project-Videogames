{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './MultiSelectGenre.css'; //import genresopt from '../Genres/Genres';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiSelectGenre() {\n  _s();\n\n  let [genresopt, setGenresopt] = useState([]);\n\n  const buildGenObjArr = async function () {\n    const genres = [];\n    let genresA = fetch(\"http://localhost:3001/genres\").then(response => response.json()) //aplica json y retorna\n    //.then(json => console.log(json))\n    .then(arr => {\n      for (let i = 0; i < arr.length; i++) {\n        let obj = {\n          value: arr[i].name,\n          label: arr[i].name\n        };\n        genres.push(obj);\n      } //console.log(genres); \n\n\n      return genres;\n    }).catch(error => console.log(error));\n    console.log;\n  };\n\n  buildGenObjArr(); //console.log(genresopt);\n  // Estado de géneros seleccionados\n\n  let [sgenres, setSgenres] = useState([]); // selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {}, [sgenres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selgenfom\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"genres\",\n      placeholder: \"Plataformas...\",\n      className: \"multselectgen\",\n      value: '',\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        defaultValue: true,\n        children: \"G\\xE9neros:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), genresopt.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.value,\n        children: item.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gencont\",\n      children: sgenres.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"selgenbtn\",\n        value: item,\n        onClick: handleClick,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n} //import Select from 'react-select';\n// export default function MultiSelectGenre() {\n//   const options = [\n//     { value: 'chocolate', label: 'Chocolate' },\n//     { value: 'strawberry', label: 'Strawberry' },\n//     { value: 'vanilla', label: 'Vanilla' }\n//   ]\n//   return (\n//     <div>\n//       <Select\n//         defaultValue={[options[0]]}\n//         isMulti\n//         name=\"colors\"\n//         placeholder=\"Plataformas...\"\n//         options={options}\n//         className=\"basic-multi-select\"\n//         // classNamePrefix=\"select\"\n//       />\n//     </div>\n//   )\n// }\n\n_s(MultiSelectGenre, \"H+8dVJTfdxD6VD3IQdGz02cCGiE=\");\n\n_c = MultiSelectGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectGenre\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx"],"names":["React","useState","useEffect","MultiSelectGenre","genresopt","setGenresopt","buildGenObjArr","genres","genresA","fetch","then","response","json","arr","i","length","obj","value","name","label","push","catch","error","console","log","sgenres","setSgenres","removeItem","item","newItems","filter","e","handleChange","itemP","target","hasItem","includes","handleClick","itm","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MultiSelectGenre.css';\n//import genresopt from '../Genres/Genres';\n\n\n\n\nexport default function MultiSelectGenre() {\n\n  let [genresopt, setGenresopt] = useState([]);\n\n\n  const buildGenObjArr = async function () {\n    const genres = [];\n\n    let genresA = fetch(\"http://localhost:3001/genres\")\n      .then(response => response.json()) //aplica json y retorna\n      //.then(json => console.log(json))\n      .then(arr => {\n        for (let i = 0; i < arr.length; i++) {\n          let obj = { value: arr[i].name, label: arr[i].name };\n          genres.push(obj);\n        }\n        //console.log(genres); \n        return genres;\n      })\n      .catch(error => console.log(error))\n    \n    console.log\n  }\n\n  buildGenObjArr();\n  //console.log(genresopt);\n\n  // Estado de géneros seleccionados\n  let [sgenres, setSgenres] = useState([]);// selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {\n  }, [sgenres]);\n\n  return (\n    <div className=\"selgenfom\">\n      <select\n        name=\"genres\"\n        placeholder=\"Plataformas...\"\n        className=\"multselectgen\"\n        value={''}\n        onChange={handleChange}\n      >\n        <option defaultValue>Géneros:</option>\n        {genresopt.map((item, index) => (\n          <option key={index} value={item.value}>{item.label}</option>\n        ))}\n      </select>\n      <div className=\"gencont\">\n        {sgenres.map((item, index) => (\n          <button className=\"selgenbtn\" value={item}\n            onClick={handleClick} key={index}>\n            {item}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n\n//import Select from 'react-select';\n\n// export default function MultiSelectGenre() {\n//   const options = [\n//     { value: 'chocolate', label: 'Chocolate' },\n//     { value: 'strawberry', label: 'Strawberry' },\n//     { value: 'vanilla', label: 'Vanilla' }\n//   ]\n\n//   return (\n//     <div>\n//       <Select\n//         defaultValue={[options[0]]}\n//         isMulti\n//         name=\"colors\"\n//         placeholder=\"Plataformas...\"\n//         options={options}\n//         className=\"basic-multi-select\"\n//         // classNamePrefix=\"select\"\n//       />\n//     </div>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}