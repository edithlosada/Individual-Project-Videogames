{"ast":null,"code":"import _slicedToArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{useSelector,useDispatch}from'react-redux';import'./GenreSelect.css';import{dbGenOpSearch,apiGenOpSearch,searchGenre}from'../../actions/actions';//used on SearchMenu\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function GenreSelect(){var dispatch=useDispatch();var origin=useSelector(function(state){return state.searchOrig;});// <--Busca el origen del store.\nvar apigenres=useSelector(function(state){return state.apigenopts;});var apigenRef=useRef(apigenres);//<--para evitar missing dependency en useEffect\nvar dbgenres=useSelector(function(state){return state.dbgenopts;});var dbgenRef=useRef(dbgenres);var cleans=useSelector(function(state){return state.cleansearch;});var _useState=useState(''),_useState2=_slicedToArray(_useState,2),genreopts=_useState2[0],setGenreopts=_useState2[1];// opciones de géneros\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),sgenre=_useState4[0],setSgenre=_useState4[1];// género seleccionado\n// Cada vez que cambie el origen guarda el estado en el store\n// y setea genreopts con los valores correspondientes\nuseEffect(function(){var sendgenopsearch=function sendgenopsearch(orig,apig,dbg){if(orig==='base de datos'){//console.log(orig);\n//dispatch(dbGenOpSearch()); // <-- Hacer...\nsetGenreopts(dbg);// <-- Cambiar en store...\n}if(orig==='API'){//console.log(orig);\ndispatch(apiGenOpSearch());// setGenreopts(apig);\n//console.log(apig);\n}};sendgenopsearch(origin,apigenRef.current,dbgenRef.current);// <-- referencia a apigenres\n},[origin,dispatch]);//Cada vez que cambie el origen guarda el estado en el store\nuseEffect(function(){setGenreopts(apigenres);},[apigenres]);useEffect(function(){setGenreopts(dbgenres);},[dbgenres]);// Manda al store el género a buscar\nfunction handleChange(e){dispatch(searchGenre(e.target.value));setSgenre(e.target.value);}// Cuando cambie el género seleccionado lo manda al store.\nuseEffect(function(){dispatch(searchGenre(sgenre));},[sgenre,dispatch]);useEffect(function(){if(cleans){dispatch(searchGenre(''));setSgenre('');}},[cleans,dispatch]);return/*#__PURE__*/_jsx(\"div\",{className:\"gcont\",children:/*#__PURE__*/_jsxs(\"select\",{name:\"genres\",className:\"gselect\",value:sgenre,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{defaultValue:true,children:\"G\\xE9nero:\"}),genreopts&&genreopts.map(function(option,index){return/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},index);})]})});}","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GenreSelect/GenreSelect.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","dbGenOpSearch","apiGenOpSearch","searchGenre","GenreSelect","dispatch","origin","state","searchOrig","apigenres","apigenopts","apigenRef","dbgenres","dbgenopts","dbgenRef","cleans","cleansearch","genreopts","setGenreopts","sgenre","setSgenre","sendgenopsearch","orig","apig","dbg","current","handleChange","e","target","value","map","option","index","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './GenreSelect.css';\nimport { dbGenOpSearch, apiGenOpSearch, searchGenre } from '../../actions/actions';\n\n//used on SearchMenu\n\nexport default function GenreSelect() {\n\n  let dispatch = useDispatch();\n  let origin = useSelector(state => state.searchOrig);// <--Busca el origen del store.\n  let apigenres = useSelector(state => state.apigenopts);\n  let apigenRef = useRef(apigenres);//<--para evitar missing dependency en useEffect\n  let dbgenres = useSelector(state => state.dbgenopts);\n  let dbgenRef = useRef(dbgenres);\n  let cleans = useSelector(state => state.cleansearch);\n\n  let [genreopts, setGenreopts] = useState(''); // opciones de géneros\n  let [sgenre, setSgenre] = useState(''); // género seleccionado\n\n  // Cada vez que cambie el origen guarda el estado en el store\n  // y setea genreopts con los valores correspondientes\n  useEffect(() => {\n    let sendgenopsearch = (orig, apig, dbg) => {\n      if (orig === 'base de datos') {\n        //console.log(orig);\n        //dispatch(dbGenOpSearch()); // <-- Hacer...\n        setGenreopts(dbg); // <-- Cambiar en store...\n      }\n      if (orig === 'API') {\n        //console.log(orig);\n        dispatch(apiGenOpSearch());\n        // setGenreopts(apig);\n        //console.log(apig);\n      }\n    }\n    sendgenopsearch(origin, apigenRef.current, dbgenRef.current);// <-- referencia a apigenres\n  }, [origin, dispatch]);\n\n  //Cada vez que cambie el origen guarda el estado en el store\n  useEffect(() => {\n    setGenreopts(apigenres);\n  }, [apigenres]);\n\n  useEffect(() => {\n    setGenreopts(dbgenres);\n  }, [dbgenres]);\n\n  // Manda al store el género a buscar\n  function handleChange(e) {\n    dispatch(searchGenre(e.target.value));\n    setSgenre(e.target.value);\n  }\n\n  // Cuando cambie el género seleccionado lo manda al store.\n  useEffect(() => {\n    dispatch(searchGenre(sgenre));\n  }, [sgenre,dispatch]);\n\n  useEffect(() => {\n    if (cleans) {\n      dispatch(searchGenre(''));\n      setSgenre('');\n    }\n  }, [cleans,dispatch]);\n\n  return (\n    <div className=\"gcont\">\n      <select\n        name=\"genres\"\n        className=\"gselect\"\n        value={sgenre}\n        onChange={handleChange}\n      >\n        <option defaultValue  >Género:</option>\n        {genreopts && genreopts.map((option, index) => (\n          <option key={index} value={option.value}>{option.label}</option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}