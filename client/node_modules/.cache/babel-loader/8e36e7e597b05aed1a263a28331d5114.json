{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/CreateForm/CreateForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './CreateForm.css';\nimport MultiSelectPlatform from '../MultiSelectPlatform/MultiSelectPlatform';\nimport MultiSelectGenre from '../MultiSelectGenre/MultiSelectGenre';\nimport AddNewPlatform from '../AddNewPlatform/AddNewPlatform';\nimport AddNewGenre from '../AddNewGenre/AddNewGenre';\nimport { connect } from \"react-redux\";\nimport { getDbGenres } from '../../actions/actions';\nimport axios from 'axios';\nimport store from '../../store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateForm(props) {\n  _s();\n\n  // console.log(props);\n  // props.findgenres();\n  // console.log(props.loading);\n  console.log(store.getState());\n  store.dispatch(getDbGenres); //   useEffect(() => {\n  //   dispatch(getDbGenres)\n  // },[])\n\n  let [title, setTitle] = useState('');\n  let [released, setReleased] = useState('');\n  let [description, setDescription] = useState('');\n  let [rating, setRating] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault(); //sirve para evitar que refresque la pagina cada vez que apreto una tecla (comportamiento por default)\n\n    axios.post('http://localhost:3001/newgame', gametoadd).then(resp => {\n      console.log(resp.data);\n    }); // props.onSearch(city);\n    //setGame(\"\"); //para limpiar el input\n\n    alert('juego agregado');\n    setTitle('');\n    setReleased('');\n    setDescription('');\n    setRating('');\n  };\n\n  function handleInputChange(e) {\n    let nombre = e.target.name;\n\n    switch (nombre) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n\n      case 'released':\n        setReleased(e.target.value);\n        break;\n\n      case 'description':\n        setDescription(e.target.value);\n        break;\n\n      case 'rating':\n        setRating(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  console.log(rating);\n  let state = {\n    title,\n    released,\n    description,\n    rating\n  };\n  let gametoadd = {}; //ojo!!!\n\n  let loading = true; //ojo!!!\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ng_page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ng_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"ng_title\",\n        children: \"Nuevo juego: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        action: \"http://localhost:3001/newgame\",\n        className: \"ng_formArea\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input_name\",\n          type: \"text\",\n          className: \"ng_forminput\",\n          value: title,\n          name: \"title\",\n          placeholder: \"Ingrese el nombre del juego...\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input_released\",\n          type: \"text\",\n          className: \"ng_forminput\",\n          value: released,\n          name: \"released\",\n          placeholder: \"Fecha de lanzamiento...\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input_resume\",\n          className: \"ng_textinput\",\n          value: description,\n          name: \"description\",\n          placeholder: \"Breve res\\xFAmen ...\",\n          type: \"text\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input_rating\",\n          type: \"text\",\n          className: \"ng_forminput\",\n          value: rating,\n          name: \"rating\",\n          placeholder: \"Puntaje...\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ng_selectArea\",\n          children: [/*#__PURE__*/_jsxDEV(MultiSelectPlatform, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddNewPlatform, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ng_loading\",\n            children: \"...cargando g\\xE9neros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(MultiSelectGenre, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 78\n          }, this), /*#__PURE__*/_jsxDEV(AddNewGenre, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ng_button-area\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ng_button\",\n            type: \"submit\",\n            children: \"Guardar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateForm, \"6NQsxgX6XeKKPAD+94uJGOjup3s=\");\n\n_c = CreateForm;\n;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findgenres: () => dispatch(getDbGenres())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/CreateForm/CreateForm.jsx"],"names":["React","useEffect","useState","MultiSelectPlatform","MultiSelectGenre","AddNewPlatform","AddNewGenre","connect","getDbGenres","axios","store","CreateForm","props","console","log","getState","dispatch","title","setTitle","released","setReleased","description","setDescription","rating","setRating","handleSubmit","event","preventDefault","post","gametoadd","then","resp","data","alert","handleInputChange","e","nombre","target","name","value","state","loading","mapStateToProps","mapDispatchToProps","findgenres"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './CreateForm.css';\nimport MultiSelectPlatform from '../MultiSelectPlatform/MultiSelectPlatform';\nimport MultiSelectGenre from '../MultiSelectGenre/MultiSelectGenre';\nimport AddNewPlatform from '../AddNewPlatform/AddNewPlatform';\nimport AddNewGenre from '../AddNewGenre/AddNewGenre';\nimport { connect } from \"react-redux\";\nimport {getDbGenres} from '../../actions/actions';\nimport axios from 'axios';\nimport store from '../../store/index';\n\n\nexport function CreateForm(props) {\n  // console.log(props);\n  // props.findgenres();\n  // console.log(props.loading);\n  console.log(store.getState())\n  store.dispatch(getDbGenres)\n\n//   useEffect(() => {\n//   dispatch(getDbGenres)\n// },[])\n\n  let [title, setTitle] = useState('');\n  let [released, setReleased] = useState('');\n  let [description, setDescription] = useState('');\n  let [rating, setRating] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); //sirve para evitar que refresque la pagina cada vez que apreto una tecla (comportamiento por default)\n    axios.post('http://localhost:3001/newgame', gametoadd)\n    .then(resp => {\n      console.log(resp.data);\n    })\n    // props.onSearch(city);\n    //setGame(\"\"); //para limpiar el input\n    alert('juego agregado');\n    setTitle('');\n    setReleased('');\n    setDescription('');\n    setRating('');\n  }\n\n  function handleInputChange(e) {\n    let nombre = e.target.name;\n    switch (nombre) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n      case 'released':\n            setReleased(e.target.value);\n        break;\n      case 'description':\n        setDescription(e.target.value);\n        break;\n      case 'rating':\n        setRating(e.target.value);\n        break;\n      default:\n        break;\n    }\n  }\n\n  console.log(rating);\n  let state = {title, released,description,rating};\n  let gametoadd = {}; //ojo!!!\n  let loading = true; //ojo!!!\n\n  return (\n    <div className=\"ng_page\">\n      <div className=\"ng_container\">\n        <h1 className=\"ng_title\"  >Nuevo juego: </h1>\n        {/* <form method=\"post\" action=\"http://localhost:3001/newrecipe\" encType = \"multipart / form-data\" className=\"ng_formArea\" onSubmit={handleSubmit}> */}\n        <form method=\"post\" action=\"http://localhost:3001/newgame\" className=\"ng_formArea\" onSubmit={handleSubmit}>\n          <input\n            id=\"input_name\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={title}\n            name='title'\n            placeholder=\"Ingrese el nombre del juego...\"\n            onChange={handleInputChange}>\n          </input>\n          <input\n            id=\"input_released\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={released}\n            name='released'\n            placeholder=\"Fecha de lanzamiento...\"\n            onChange={handleInputChange}>\n          </input>\n          <textarea\n            id=\"input_resume\"\n            className=\"ng_textinput\"\n            value={description}\n            name='description'\n            placeholder=\"Breve resúmen ...\"\n            type=\"text\"\n            onChange={handleInputChange}>\n          </textarea>\n          <input\n            id=\"input_rating\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={rating}\n            name='rating'\n            placeholder=\"Puntaje...\"\n            onChange={handleInputChange}>\n          </input>\n          <div className=\"ng_selectArea\">\n            <MultiSelectPlatform />\n            <AddNewPlatform />\n            {loading ? <h3 className=\"ng_loading\">...cargando géneros</h3> : <MultiSelectGenre/>}\n            <AddNewGenre />\n          </div>\n          <div className=\"ng_button-area\">\n            <button className=\"ng_button\" type=\"submit\">Guardar</button>\n            {/* <input type=\"submit\" value=\"Guardar\" /> */}\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => {\n\treturn { loading: state.loading }\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn { findgenres: () => dispatch(getDbGenres()) }\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(CreateForm) ;"]},"metadata":{},"sourceType":"module"}