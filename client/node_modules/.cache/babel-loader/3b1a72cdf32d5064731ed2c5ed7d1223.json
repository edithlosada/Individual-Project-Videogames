{"ast":null,"code":"// const genres = [];\n// function getPlatforms() {\n//   fetch(\"https://api.rawg.io/api/genres\") //url de api con plataformas\n//     .then(response => response.json()) //aplica json y retorna\n//     .then(json => {\n//       let data = json.results;\n//       for (let i = 0; i < data.length; i++) {\n//         //plataformas.push(data[i].name)\n//         let obj = { value: data[i].name, label: data[i].name };\n//         genres.push(obj);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//   return genres;\n// }\n// let genresopt = getPlatforms();\n// console.log(genresopt);\n// export default genresopt;\nexport const genresopt = [{\n  value: \"Action\",\n  label: \"Action\"\n}, {\n  value: \"Indie\",\n  label: \"Indie\"\n}, {\n  value: \"Adventure\",\n  label: \"Adventure\"\n}, {\n  value: \"RPG\",\n  label: \"RPG\"\n}, {\n  value: \"Strategy\",\n  label: \"Strategy\"\n}, {\n  value: \"Shooter\",\n  label: \"Shooter\"\n}, {\n  value: \"Casual\",\n  label: \"Casual\"\n}, {\n  value: \"Simulation\",\n  label: \"Simulation\"\n}, {\n  value: \"Puzzle\",\n  label: \"Puzzle\"\n}, {\n  value: \"Arcade\",\n  label: \"Arcade\"\n}, {\n  value: \"Platformer\",\n  label: \"Platformer\"\n}, {\n  value: \"Racing\",\n  label: \"Racing\"\n}, {\n  value: \"Sports\",\n  label: \"Sports\"\n}, {\n  value: \"Massively Multiplayer\",\n  label: \"Massively Multiplayer\"\n}, {\n  value: \"Fighting\",\n  label: \"Fighting\"\n}, {\n  value: \"Family\",\n  label: \"Family\"\n}, {\n  value: \"Board Games\",\n  label: \"Board Games\"\n}, {\n  value: \"Educational\",\n  label: \"Educational\"\n}, {\n  value: \"Card\",\n  label: \"Card\"\n}];\nexport default genresopt;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Genres/Genres.js"],"names":["genresopt","value","label"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,OAAO,MAAMA,SAAS,GAAG,CACzB;AAACC,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADyB,EAEzB;AAACD,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAFyB,EAGzB;AAACD,EAAAA,KAAK,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAHyB,EAIzB;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAJyB,EAKzB;AAACD,EAAAA,KAAK,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CALyB,EAMzB;AAACD,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CANyB,EAOzB;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAPyB,EAQzB;AAACD,EAAAA,KAAK,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CARyB,EASzB;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CATyB,EAUzB;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAVyB,EAWzB;AAACD,EAAAA,KAAK,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAXyB,EAYzB;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAZyB,EAazB;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAbyB,EAczB;AAACD,EAAAA,KAAK,EAAE,uBAAR;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAdyB,EAezB;AAACD,EAAAA,KAAK,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAfyB,EAgBzB;AAACD,EAAAA,KAAK,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAhByB,EAiBzB;AAACD,EAAAA,KAAK,EAAE,aAAR;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAjByB,EAkBzB;AAACD,EAAAA,KAAK,EAAE,aAAR;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAlByB,EAmBzB;AAACD,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAnByB,CAAlB;AAsBP,eAAeF,SAAf","sourcesContent":["// const genres = [];\n\n// function getPlatforms() {\n//   fetch(\"https://api.rawg.io/api/genres\") //url de api con plataformas\n//     .then(response => response.json()) //aplica json y retorna\n//     .then(json => {\n//       let data = json.results;\n//       for (let i = 0; i < data.length; i++) {\n//         //plataformas.push(data[i].name)\n//         let obj = { value: data[i].name, label: data[i].name };\n//         genres.push(obj);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//   return genres;\n// }\n\n// let genresopt = getPlatforms();\n// console.log(genresopt);\n\n// export default genresopt;\n\nexport const genresopt = [\n{value: \"Action\", label: \"Action\"},\n{value: \"Indie\", label: \"Indie\"},\n{value: \"Adventure\", label: \"Adventure\"},\n{value: \"RPG\", label: \"RPG\"},\n{value: \"Strategy\", label: \"Strategy\"},\n{value: \"Shooter\", label: \"Shooter\"},\n{value: \"Casual\", label: \"Casual\"},\n{value: \"Simulation\", label: \"Simulation\"},\n{value: \"Puzzle\", label: \"Puzzle\"},\n{value: \"Arcade\", label: \"Arcade\"},\n{value: \"Platformer\", label: \"Platformer\"},\n{value: \"Racing\", label: \"Racing\"},\n{value: \"Sports\", label: \"Sports\"},\n{value: \"Massively Multiplayer\", label: \"Massively Multiplayer\"},\n{value: \"Fighting\", label: \"Fighting\"},\n{value: \"Family\", label: \"Family\"},\n{value: \"Board Games\", label: \"Board Games\"},\n{value: \"Educational\", label: \"Educational\"},\n{value: \"Card\", label: \"Card\"}\n]\n\nexport default genresopt;\n"]},"metadata":{},"sourceType":"module"}