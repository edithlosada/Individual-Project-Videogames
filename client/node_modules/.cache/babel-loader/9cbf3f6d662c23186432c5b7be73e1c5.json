{"ast":null,"code":"import _slicedToArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{useSelector,useDispatch}from'react-redux';import'./GamesGetter.css';import GamesToShow from'../GamesToShow/GamesToShow.jsx';// import GameCard from '../GameCard/GameCard.jsx';\nimport{getApiGames,getdbGames,initsearch,setShowmsg,setGamesToShow}from'../../actions/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function GamesGetter(){var dispatch=useDispatch();var inits=useSelector(function(state){return state.initsearch;});var cleans=useSelector(function(state){return state.cleansearch;});var orig=useSelector(function(state){return state.searchOrig;});var show=useSelector(function(state){return state.showmsg;});var apig=useSelector(function(state){return state.apigames;});var apigRef=useRef(apig);//---\nvar dbg=useSelector(function(state){return state.dbgames;});var dbgRef=useRef(dbg);//---\nvar sgenre=useSelector(function(state){return state.searchgenre;});var st=useSelector(function(state){return state.stitle;});var stRef=useRef(st);//---\nvar gamests=useSelector(function(state){return state.gamestoshow;});// juegos para mostrar\n//let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),gettingG=_useState2[0],setGettingG=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),games=_useState4[0],setGames=_useState4[1];var gRef=useRef(games);//---\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),genFiltGames=_useState6[0],setGenFiltGames=_useState6[1];var gfgRef=useRef(genFiltGames);//---\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),titFiltGames=_useState8[0],setTitFiltGames=_useState8[1];var tfgRef=useRef(titFiltGames);//---\n// Según el origen manda a buscar el arreglo de juegos \n// donde corresponda y admninistra mjes.\nuseEffect(function(){setGames([]);if(orig==='API'){//console.log('cargaste API');\n// dispatch(getApiGames());  // <<-- Sacar!!\ndispatch(setShowmsg(false));setGettingG(true);}if(orig==='base de datos'){// dispatch(getdbGames());  // <<-- Sacar!!\ndispatch(setShowmsg(false));setGettingG(true);}},[orig,dispatch]);// Cuando obtiene el arreglo de juegos lo guarda localmente.\n// y administra mje-\nuseEffect(function(){if(orig==='API'){setGettingG(false);console.log(apigRef.current);setGames(apigRef.current);}if(orig==='base de datos'){setGettingG(false);console.log(dbgRef.current);setGames(dbgRef.current);}},[gettingG,orig]);//sacar gettingG y dejar apiG / dbg\n// Si se filtra por género reduce la búsqueda y guarda lo obtenido\n// en el estado genFiltGames.\nuseEffect(function(){var newarr=games.filter(function(e){return e.genres.includes(sgenre);});setGenFiltGames(newarr);setTitFiltGames(null);// Si cambio el género que quite cualquier selección previa guardada por título.\ndispatch(initsearch(false));// Cancela cualquier búsqueda anterior para poder escribir.\n// console.log('cleans,'+cleans+', inits,' +inits)\n},[sgenre,games,dispatch]);// useEffect(() => {\n//   console.log(genFiltGames); //........\n// }, [genFiltGames])\n// Cuando presiona \"buscar\" filtra lo que ya tenía según el título\nuseEffect(function(){//console.log(genFiltGames); //........\nif(inits){// Si presionó/está en buscar\nvar arr=games;// arreglo obtenido según orígen\nif(!sgenre){console.log('no había género de búsqueda');}else{// si filtró x género usa el arreglo ya filtrado\nconsole.log(genFiltGames);arr=genFiltGames;}if(!st){// si no ingreso texto trae todo\nconsole.log('no había texto de búsqueda');console.log(genFiltGames);//........\nsetTitFiltGames(arr);}else{console.log('search title is'+st);var newarr=arr.filter(function(e){return e.name.toLowerCase().includes(st.toLowerCase());});setTitFiltGames(newarr);}}},[inits,genFiltGames,st]);useEffect(function(){if(cleans){setTitFiltGames([]);}},[cleans]);useEffect(function(){console.log(titFiltGames);dispatch(setGamesToShow(titFiltGames));// console.log('(1)');\n},[titFiltGames,dispatch]);// useEffect(() => {// borrar x qe es del store\n// }, [gamests])\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"p_cards_area\",children:[show&&/*#__PURE__*/_jsx(\"h3\",{children:\" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"}),gettingG&&/*#__PURE__*/_jsxs(\"h3\",{children:[\" ...Obteniendo juegos de la \",orig,\".\"]}),/*#__PURE__*/_jsx(GamesToShow,{})]});}","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GamesGetter/GamesGetter.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GamesToShow","getApiGames","getdbGames","initsearch","setShowmsg","setGamesToShow","GamesGetter","dispatch","inits","state","cleans","cleansearch","orig","searchOrig","show","showmsg","apig","apigames","apigRef","dbg","dbgames","dbgRef","sgenre","searchgenre","st","stitle","stRef","gamests","gamestoshow","gettingG","setGettingG","games","setGames","gRef","genFiltGames","setGenFiltGames","gfgRef","titFiltGames","setTitFiltGames","tfgRef","console","log","current","newarr","filter","e","genres","includes","arr","name","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './GamesGetter.css';\nimport GamesToShow from '../GamesToShow/GamesToShow.jsx';\n// import GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch, setShowmsg, setGamesToShow } from '../../actions/actions';\n\nexport default function GamesGetter() {\n\n  let dispatch = useDispatch();\n\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  let show = useSelector(state => state.showmsg);\n  let apig = useSelector(state => state.apigames);\n  let apigRef = useRef(apig); //---\n  let dbg = useSelector(state => state.dbgames);\n  let dbgRef = useRef(dbg); //---\n  let sgenre = useSelector(state => state.searchgenre);\n  let st = useSelector(state => state.stitle);\n  let stRef = useRef(st); //---\n  let gamests = useSelector(state => state.gamestoshow); // juegos para mostrar\n\n  //let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  let gRef = useRef(games); //---\n  let [genFiltGames, setGenFiltGames] = useState(null);\n  let gfgRef = useRef(genFiltGames); //---\n  let [titFiltGames, setTitFiltGames] = useState(null);\n  let tfgRef = useRef(titFiltGames); //---\n\n  // Según el origen manda a buscar el arreglo de juegos \n  // donde corresponda y admninistra mjes.\n  useEffect(() => {\n    setGames([]);\n    if (orig === 'API') {\n      //console.log('cargaste API');\n      // dispatch(getApiGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n    if (orig === 'base de datos') {\n      // dispatch(getdbGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n  }, [orig, dispatch]);\n\n  // Cuando obtiene el arreglo de juegos lo guarda localmente.\n  // y administra mje-\n  useEffect(() => {\n    if (orig === 'API') {\n      setGettingG(false);\n      console.log(apigRef.current);\n      setGames(apigRef.current);\n    }\n    if (orig === 'base de datos') {\n      setGettingG(false);\n      console.log(dbgRef.current);\n      setGames(dbgRef.current);\n    }\n  }, [gettingG, orig]); //sacar gettingG y dejar apiG / dbg\n\n  // Si se filtra por género reduce la búsqueda y guarda lo obtenido\n  // en el estado genFiltGames.\n  useEffect(() => {\n    let newarr = games.filter(e => e.genres.includes(sgenre));\n    setGenFiltGames(newarr);\n    setTitFiltGames(null); // Si cambio el género que quite cualquier selección previa guardada por título.\n    dispatch(initsearch(false)); // Cancela cualquier búsqueda anterior para poder escribir.\n    // console.log('cleans,'+cleans+', inits,' +inits)\n  }, [sgenre, games, dispatch])\n\n  // useEffect(() => {\n  //   console.log(genFiltGames); //........\n  // }, [genFiltGames])\n\n  // Cuando presiona \"buscar\" filtra lo que ya tenía según el título\n  useEffect(() => {\n    //console.log(genFiltGames); //........\n    if (inits) { // Si presionó/está en buscar\n      let arr = games; // arreglo obtenido según orígen\n      if (!sgenre) {\n        console.log('no había género de búsqueda');\n      } else {// si filtró x género usa el arreglo ya filtrado\n        console.log(genFiltGames);\n        arr = genFiltGames;\n      }\n      if (!st) {// si no ingreso texto trae todo\n        console.log('no había texto de búsqueda');\n        console.log(genFiltGames); //........\n        setTitFiltGames(arr);\n      } else {\n        console.log('search title is' + st);\n        let newarr = arr.filter(e => e.name.toLowerCase().includes(st.toLowerCase()));\n        setTitFiltGames(newarr);\n      }\n    }\n  }, [inits, genFiltGames, st])\n\n  useEffect(() => {\n    if (cleans) {\n      setTitFiltGames([]);\n    }\n  }, [cleans])\n\n  useEffect(() => {\n    console.log(titFiltGames);\n    dispatch(setGamesToShow(titFiltGames));\n    // console.log('(1)');\n  }, [titFiltGames, dispatch])\n\n  // useEffect(() => {// borrar x qe es del store\n  // }, [gamests])\n  \n  return (\n    <div className=\"p_cards_area\">\n      {show && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {gettingG && <h3> ...Obteniendo juegos de la {orig}.</h3>}\n      <GamesToShow/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}