{"ast":null,"code":"import _toConsumableArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector}from'react-redux';import'./GamesToShow.css';import GameCard from'../GameCard/GameCard.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function GamesToShow(){var inits=useSelector(function(state){return state.initsearch;});var gamests=useSelector(function(state){return state.gamestoshow;});// juegos para mostrar\n// let [n, setN] = useState(gamests.length); // n es el número de juegos en el arreglo\n// let [g, setG] = useState([gamests]);\nuseEffect(function(){console.log(gamests);},[gamests]);// let arr = gamests;\n// console.log(arr);\n// let n = arr.length;\n// let PER_PAGE = 6;\n// let pageCount = Math.ceil(n / PER_PAGE);\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];//inicialmente la primer página\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),currentPageArr=_useState4[0],setCurrentPArr=_useState4[1];// Función que obtiene el subarreglo de juegos a mostrar según la pagina\n// en la que se encuentre.\nfunction inpageshow(currentPage,perpage){var offset=currentPage*perpage;var currentPageArr=gamests.slice(offset,offset+PER_PAGE);console.log(currentPageArr);setCurrentPArr(_toConsumableArray(currentPageArr));}function handlePrev(){if(currentPage){setCurrentPage(currentPage-1);}}function handleNext(){if(currentPage<pageCount-1){setCurrentPage(currentPage+1);}}function handlePage(e){setCurrentPage(e.target.value-1);console.log('current page is'+currentPage);}// function pagesNumArr(pageCount) {\n//   let arr = [];\n//   for (let i = 1; i <= pageCount; i++) {\n//     arr.push(i);\n//   }\n//   return arr;\n// }\n// let pages = pagesNumArr(pageCount);\nuseEffect(function(){},[currentPageArr,currentPage]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"cardcont\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Games to show\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p_btn_area\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"p_button\",onClick:handlePrev,children:\"Anterior\"}),/*#__PURE__*/_jsx(\"button\",{className:\"p_button\",onClick:handleNext,children:\"Siguiente\"})]})]});}","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GamesToShow/GamesToShow.jsx"],"names":["React","useState","useEffect","useSelector","GameCard","GamesToShow","inits","state","initsearch","gamests","gamestoshow","console","log","currentPage","setCurrentPage","currentPageArr","setCurrentPArr","inpageshow","perpage","offset","slice","PER_PAGE","handlePrev","handleNext","pageCount","handlePage","e","target","value"],"mappings":"sVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CAEpC,GAAIC,CAAAA,KAAK,CAAGH,WAAW,CAAC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACC,UAAV,EAAN,CAAvB,CAEA,GAAIC,CAAAA,OAAO,CAAGN,WAAW,CAAC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACG,WAAV,EAAN,CAAzB,CAAuD;AAEvD;AACA;AAEAR,SAAS,CAAC,UAAM,CACdS,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACD,CAFQ,CAEP,CAACA,OAAD,CAFO,CAAT,CAIA;AACA;AACA;AACA;AACA;AAjBoC,cAmBAR,QAAQ,CAAC,CAAD,CAnBR,wCAmB/BY,WAnB+B,eAmBlBC,cAnBkB,eAmBa;AAnBb,eAoBGb,QAAQ,CAAC,EAAD,CApBX,yCAoB/Bc,cApB+B,eAoBfC,cApBe,eAsBpC;AACA;AACA,QAASC,CAAAA,UAAT,CAAoBJ,WAApB,CAAiCK,OAAjC,CAA0C,CACxC,GAAIC,CAAAA,MAAM,CAAGN,WAAW,CAAGK,OAA3B,CACA,GAAIH,CAAAA,cAAc,CAAGN,OAAO,CAACW,KAAR,CAAcD,MAAd,CAAsBA,MAAM,CAAGE,QAA/B,CAArB,CACAV,OAAO,CAACC,GAAR,CAAYG,cAAZ,EACAC,cAAc,oBAAKD,cAAL,EAAd,CACD,CAED,QAASO,CAAAA,UAAT,EAAsB,CACpB,GAAIT,WAAJ,CAAiB,CACfC,cAAc,CAACD,WAAW,CAAG,CAAf,CAAd,CACD,CACF,CAED,QAASU,CAAAA,UAAT,EAAsB,CACpB,GAAIV,WAAW,CAAGW,SAAS,CAAG,CAA9B,CAAiC,CAC/BV,cAAc,CAACD,WAAW,CAAG,CAAf,CAAd,CACD,CACF,CAED,QAASY,CAAAA,UAAT,CAAoBC,CAApB,CAAuB,CACrBZ,cAAc,CAACY,CAAC,CAACC,MAAF,CAASC,KAAT,CAAiB,CAAlB,CAAd,CACAjB,OAAO,CAACC,GAAR,CAAY,kBAAoBC,WAAhC,EACD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,SAAS,CAAC,UAAM,CACf,CADQ,CACN,CAACa,cAAD,CAAgBF,WAAhB,CADM,CAAT,CAGA,mBACE,oCACE,YAAK,SAAS,CAAC,UAAf,uBACE,qCADF,EADF,cAOE,aAAK,SAAS,CAAC,YAAf,wBACE,eAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAES,UAAtC,sBADF,cAKE,eAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAEC,UAAtC,uBALF,GAPF,GADF,CAiBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './GamesToShow.css';\nimport GameCard from '../GameCard/GameCard.jsx';\n\nexport default function GamesToShow() {\n\n  let inits = useSelector(state => state.initsearch);\n\n  let gamests = useSelector(state => state.gamestoshow); // juegos para mostrar\n\n  // let [n, setN] = useState(gamests.length); // n es el número de juegos en el arreglo\n  // let [g, setG] = useState([gamests]);\n\n  useEffect(() => {\n    console.log(gamests);\n  },[gamests])\n\n  // let arr = gamests;\n  // console.log(arr);\n  // let n = arr.length;\n  // let PER_PAGE = 6;\n  // let pageCount = Math.ceil(n / PER_PAGE);\n  \n  let [currentPage, setCurrentPage] = useState(0); //inicialmente la primer página\n  let [currentPageArr, setCurrentPArr] = useState([]);\n  \n  // Función que obtiene el subarreglo de juegos a mostrar según la pagina\n  // en la que se encuentre.\n  function inpageshow(currentPage, perpage) {\n    let offset = currentPage * perpage;\n    let currentPageArr = gamests.slice(offset, offset + PER_PAGE)\n    console.log(currentPageArr);\n    setCurrentPArr([...currentPageArr]);\n  }\n\n  function handlePrev() {\n    if (currentPage) {\n      setCurrentPage(currentPage - 1);\n    }\n  }\n\n  function handleNext() {\n    if (currentPage < pageCount - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  }\n\n  function handlePage(e) {\n    setCurrentPage(e.target.value - 1);\n    console.log('current page is' + currentPage);\n  }\n\n  // function pagesNumArr(pageCount) {\n  //   let arr = [];\n  //   for (let i = 1; i <= pageCount; i++) {\n  //     arr.push(i);\n  //   }\n  //   return arr;\n  // }\n  // let pages = pagesNumArr(pageCount);\n  useEffect(() => {\n  }, [currentPageArr,currentPage])\n\n  return (\n    <div>\n      <div className=\"cardcont\" >\n        <h1>Games to show</h1>\n        {/* {currentPageArr && currentPageArr.map((g, i) => (\n          <GameCard key={i} id={g.apId} name={g.name} img={g.img_url} genres={g.genres} />\n        ))} */}\n      </div>\n      <div className=\"p_btn_area\">\n        <button className=\"p_button\" onClick={handlePrev}>Anterior</button>\n        {/* {pages && pages.map((p, i) => (\n          <button key={i} className=\"p_button\" onClick={handlePage} value={p}> {p} </button>\n        ))} */}\n        <button className=\"p_button\" onClick={handleNext}>Siguiente</button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}