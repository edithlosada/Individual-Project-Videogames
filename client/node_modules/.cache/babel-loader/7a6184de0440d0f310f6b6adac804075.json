{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GamesToShow/GamesToShow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './GamesToShow.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamesToShow() {\n  _s();\n\n  let gamests = useSelector(state => state.gamestoshow); // juegos para mostrar\n\n  let [n, setN] = useState(); //let []\n  // let [currentPage, setCurrentPage] = useState(0); //inicialmente la primer página\n  // let [currentPageArr, setCurrentPArr] = useState([]);\n\n  let PER_PAGE = 6; //let numofgames = gamests.length;\n  // let pageCount = Math.ceil(gamests.length / PER_PAGE);\n  // // Función que obtiene el subarreglo de juegos a mostrar según la pagina\n  // // en la que se encuentre.\n  // function inpageshow(currentPage, perpage) {\n  //   let offset = currentPage * perpage;\n  //   let currentPageArr = gamests.slice(offset, offset + PER_PAGE)\n  //   console.log(currentPageArr);\n  //   setCurrentPArr([...currentPageArr]);\n  // }\n  // useEffect(() => {\n  //   inpageshow(currentPage, PER_PAGE);\n  // }, []);\n  // //let [cambioP, setCambioP] = useState(false);\n\n  useEffect(() => {\n    console.log(gamests);\n  }, []); // function handlePrev() {\n  //   if (currentPage) {\n  //     setCurrentPage(currentPage - 1);\n  //   }\n  // }\n  // function handleNext() {\n  //   if (currentPage < pageCount - 1) {\n  //     setCurrentPage(currentPage + 1);\n  //   }\n  // }\n  // function handlePage(e) {\n  //   setCurrentPage(e.target.value - 1);\n  //   console.log('current page is' + currentPage);\n  // }\n  // function pagesNumArr(pageCount) {\n  //   let arr = [];\n  //   for (let i = 1; i <= pageCount; i++) {\n  //     arr.push(i);\n  //   }\n  //   return arr;\n  // }\n  // let pages = pagesNumArr(pageCount);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardcont\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p_btn_area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GamesToShow, \"ln0yxYYFiEus7jzPiXqGNhrUOkw=\", false, function () {\n  return [useSelector];\n});\n\n_c = GamesToShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamesToShow\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GamesToShow/GamesToShow.jsx"],"names":["React","useState","useEffect","useSelector","GameCard","GamesToShow","gamests","state","gamestoshow","n","setN","PER_PAGE","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAEpC,MAAIC,OAAO,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAzB,CAFoC,CAEmB;;AAEvD,MAAI,CAACC,CAAD,EAAIC,IAAJ,IAAYT,QAAQ,EAAxB,CAJoC,CAMpC;AACA;AACA;;AAEA,MAAIU,QAAQ,GAAG,CAAf,CAVoC,CAWpC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACD,GAFQ,EAEN,EAFM,CAAT,CA5BoC,CAiCpC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3EuBD,W;UAERF,W;;;KAFQE,W","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './GamesToShow.css';\nimport GameCard from '../GameCard/GameCard.jsx';\n\nexport default function GamesToShow() {\n\n  let gamests = useSelector(state => state.gamestoshow); // juegos para mostrar\n\n  let [n, setN] = useState()\n\n  //let []\n  // let [currentPage, setCurrentPage] = useState(0); //inicialmente la primer página\n  // let [currentPageArr, setCurrentPArr] = useState([]);\n\n  let PER_PAGE = 6;\n  //let numofgames = gamests.length;\n  // let pageCount = Math.ceil(gamests.length / PER_PAGE);\n\n  // // Función que obtiene el subarreglo de juegos a mostrar según la pagina\n  // // en la que se encuentre.\n  // function inpageshow(currentPage, perpage) {\n  //   let offset = currentPage * perpage;\n  //   let currentPageArr = gamests.slice(offset, offset + PER_PAGE)\n  //   console.log(currentPageArr);\n  //   setCurrentPArr([...currentPageArr]);\n  // }\n\n  // useEffect(() => {\n  //   inpageshow(currentPage, PER_PAGE);\n  // }, []);\n  // //let [cambioP, setCambioP] = useState(false);\n\n  useEffect(() => {\n    console.log(gamests)\n  }, [])\n\n\n  // function handlePrev() {\n  //   if (currentPage) {\n  //     setCurrentPage(currentPage - 1);\n  //   }\n  // }\n\n  // function handleNext() {\n  //   if (currentPage < pageCount - 1) {\n  //     setCurrentPage(currentPage + 1);\n  //   }\n  // }\n\n  // function handlePage(e) {\n  //   setCurrentPage(e.target.value - 1);\n  //   console.log('current page is' + currentPage);\n  // }\n\n  // function pagesNumArr(pageCount) {\n  //   let arr = [];\n  //   for (let i = 1; i <= pageCount; i++) {\n  //     arr.push(i);\n  //   }\n  //   return arr;\n  // }\n  // let pages = pagesNumArr(pageCount);\n\n  return (\n    <div>\n      <div className=\"cardcont\" >\n        {/* {currentPageArr && currentPageArr.map((g, i) => (\n          <GameCard key={i} id={g.apId} name={g.name} img={g.img_url} genres={g.genres} />\n        ))} */}\n      </div>\n      <div className=\"p_btn_area\">\n        {/* <button className=\"p_button\" onClick={handlePrev}>Anterior</button> */}\n        {/* {pages && pages.map((p, i) => (\n          <button key={i} className=\"p_button\" onClick={handlePage} value={p}> {p} </button>\n        ))} */}\n        {/* <button className=\"p_button\" onClick={handleNext}>Siguiente</button> */}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}