{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  const dispatch = useDispatch();\n  const inits = useSelector(state => state.initsearch);\n  const cleans = useSelector(state => state.cleansearch);\n  const origin = useSelector(state => state.searchOrig);\n  const apig = useSelector(state => state.apigames);\n  const dbg = useSelector(state => state.dbgames);\n  let [showMsg, setShowMsg] = useState(true);\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  useEffect(() => {\n    // Según el origen busca el arreglo de juegos\n    if (origin === 'API') {\n      console.log('cargaste API'); // dispatch(getApiGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n\n    if (origin === 'base de datos') {\n      console.log('falta cargar videojuegos en la base de datos'); // dispatch(getdbGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n  }, [origin]); //, dispatch])\n\n  useEffect(() => {\n    if (apig.length !== 0) {}\n\n    console.log(`showMsg: ${showMsg}`);\n  }, [apig]); // simulo obtencion de juegos....Borrar luego...\n  // useEffect(() => {\n  //   console.log(`showMsg: ${showMsg}`);\n  // }, [showMsg])\n  // useEffect(() => {\n  //   if(cleans){\n  //     setGname('');\n  //     // console.log(`buscaste ${gname}`);\n  //     dispatch(titleSearch(''));\n  //     dispatch(cleansearch(false));\n  //   }\n  // },[cleans,gname,dispatch]);\n\n  console.log(`origin:${origin}, gettingG: ${gettingG}, games: ${games}`); //showMsg: ${showMsg},, cleans: ${cleans}`)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showMsg && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), gettingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" ...Obteniendo juegos de la \", origin, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this), inits && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_btn_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"9swCsRMgQtE39bgQn4w8WG9xh7I=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GameCard","getApiGames","getdbGames","initsearch","Pagination","dispatch","inits","state","cleans","cleansearch","origin","searchOrig","apig","apigames","dbg","dbgames","showMsg","setShowMsg","gettingG","setGettingG","games","setGames","console","log","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch } from '../../actions/actions';\n\nexport default function Pagination() {\n\n  const dispatch = useDispatch();\n\n  const inits = useSelector(state => state.initsearch);\n  const cleans = useSelector(state => state.cleansearch);\n  const origin = useSelector(state => state.searchOrig);\n  const apig = useSelector(state => state.apigames);\n  const dbg = useSelector(state => state.dbgames);\n\n  let [showMsg, setShowMsg] = useState(true);\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n\n  useEffect(() => {\n    // Según el origen busca el arreglo de juegos\n    if (origin === 'API') {\n      console.log('cargaste API');\n      // dispatch(getApiGames());\n      setShowMsg(false);\n      setGettingG(true);\n    }\n    if (origin === 'base de datos') {\n      console.log('falta cargar videojuegos en la base de datos');\n      // dispatch(getdbGames());\n      setShowMsg(false);\n      setGettingG(true);\n    }\n  }, [origin])//, dispatch])\n\n  useEffect(() => {\n    if(apig.length !== 0){}\n\n    console.log(`showMsg: ${showMsg}`);\n  }, [apig])\n\n  // simulo obtencion de juegos....Borrar luego...\n  // useEffect(() => {\n  //   console.log(`showMsg: ${showMsg}`);\n  // }, [showMsg])\n\n  // useEffect(() => {\n  //   if(cleans){\n  //     setGname('');\n  //     // console.log(`buscaste ${gname}`);\n  //     dispatch(titleSearch(''));\n  //     dispatch(cleansearch(false));\n  //   }\n  // },[cleans,gname,dispatch]);\n\n\n  console.log(`origin:${origin}, gettingG: ${gettingG}, games: ${games}`)//showMsg: ${showMsg},, cleans: ${cleans}`)\n\n  return (\n    <div>\n      {showMsg && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {gettingG && <h3> ...Obteniendo juegos de la {origin}.</h3>}\n      {inits && <>\n        <div className=\"p_cards_area\">\n          <GameCard />\n          <GameCard />\n        </div>\n        <div className=\"p_btn_area\">\n          <button className=\"p_button\">Anterior</button>\n          <button className=\"p_button\">Siguiente</button>\n        </div>\n      </>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}