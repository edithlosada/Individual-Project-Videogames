{"ast":null,"code":"import { SET_NG_GEN_SEL, SET_NG_PTF_SEL, ADD_NG_GEN, ADD_NG_PTF } from '../actions/actions';\nconst initialState = {\n  nggensel: [],\n  ngplatfsel: [],\n  newgen // moviesLoaded: [], // peliculas que nos trae la busqueda\n  // movieDetail: {} // info de una sola película\n\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_NG_GEN_SEL:\n      return { ...state,\n        nggensel: action.payload\n      };\n\n    case SET_NG_PTF_SEL:\n      return { ...state,\n        ngplatfsel: action.payload\n      };\n\n    case SET_NG_PTF_SEL:\n      return { ...state,\n        nggensel: action.payload\n      };\n\n    case SET_NG_PTF_SEL:\n      return { ...state,\n        nggensel: action.payload\n      };\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default reducer;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/reducers/reducers.js"],"names":["SET_NG_GEN_SEL","SET_NG_PTF_SEL","ADD_NG_GEN","ADD_NG_PTF","initialState","nggensel","ngplatfsel","newgen","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,EAAyCC,UAAzC,EAAqDC,UAArD,QAAuE,oBAAvE;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,MAHmB,CAInB;AACA;;AALmB,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,MAAvC,EAA+C;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAFZ,OAAP;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOH,KAAP;AAzCJ;AA2CD;;AAAA;AAED,eAAeD,OAAf","sourcesContent":["import { SET_NG_GEN_SEL, SET_NG_PTF_SEL, ADD_NG_GEN, ADD_NG_PTF } from '../actions/actions';\n\nconst initialState = {\n  nggensel: [],\n  ngplatfsel: [],\n  newgen\n  // moviesLoaded: [], // peliculas que nos trae la busqueda\n  // movieDetail: {} // info de una sola película\n};\n\nfunction reducer(state = initialState, action) {\n\n  switch (action.type) {\n    case SET_NG_GEN_SEL:\n      return {\n        ...state,\n        nggensel: action.payload\n      }\n    case SET_NG_PTF_SEL:\n      return {\n        ...state,\n        ngplatfsel: action.payload\n      }\n    case SET_NG_PTF_SEL:\n      return {\n        ...state,\n        nggensel: action.payload\n      }\n    case SET_NG_PTF_SEL:\n      return {\n        ...state,\n        nggensel: action.payload\n      }\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}