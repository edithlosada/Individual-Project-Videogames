{"ast":null,"code":"import _objectSpread from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SET_NG_GEN_SEL,SET_NG_PTF_SEL,SEND_FORM,INIT_SEARCH,SET_ORIG,SET_SEARCH_GEN,SET_ORDER_OPT,DB_GEN_OP_SEARCH,API_GEN_OP_SEARCH,TITLE_SEARCH,GET_API_GAMES,GET_DB_GAMES,CLEAN_CARDS}from'../actions/actions';var initialState={//------New game------\nnggensel:[],ngplatfsel:[],sended:false,//-----Search game----\ninitsearch:false,// Opciones de búsqueda de juegos\nsearchOrig:'',searchgenre:'',ordering:'',// dbgenopts: [],\ndbgenopts:[{label:'acción',value:'acción'},{label:'aventura',value:'aventura'}],apigenopts:[],stitle:'',apigames:[],dbgames:[],cleancards:false};function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){//------New game------\ncase SET_NG_GEN_SEL:return _objectSpread(_objectSpread({},state),{},{nggensel:action.payload});case SET_NG_PTF_SEL:return _objectSpread(_objectSpread({},state),{},{ngplatfsel:action.payload});case SEND_FORM:return _objectSpread(_objectSpread({},state),{},{sended:action.payload});//-----Search game----\ncase INIT_SEARCH:return _objectSpread(_objectSpread({},state),{},{initsearch:action.payload});case SET_ORIG:return _objectSpread(_objectSpread({},state),{},{searchOrig:action.payload});case SET_SEARCH_GEN:return _objectSpread(_objectSpread({},state),{},{searchgenre:action.payload});case SET_ORDER_OPT:return _objectSpread(_objectSpread({},state),{},{ordering:action.payload});case DB_GEN_OP_SEARCH:return _objectSpread(_objectSpread({},state),{},{dbgenopts:action.payload});case API_GEN_OP_SEARCH:return _objectSpread(_objectSpread({},state),{},{apigenopts:action.payload});case TITLE_SEARCH:return _objectSpread(_objectSpread({},state),{},{stitle:action.payload});case GET_API_GAMES:return _objectSpread(_objectSpread({},state),{},{apigames:action.payload});case GET_DB_GAMES:return _objectSpread(_objectSpread({},state),{},{dbgames:action.payload});case CLEAN_CARDS:return _objectSpread(_objectSpread({},state),{},{cleancards:action.payload});// case GET_MOVIE_DETAIL:\n//   return {\n//     ...state,\n//     movieDetail: action.payload\n//   }\n// case ADD_MOVIE_FAVORITE:\n//   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n//   return {\n//     ...state,\n//     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n//     moviesFavorite: [...state.moviesFavorite,foundMovie]\n//   }\n// case REMOVE_MOVIE_FAVORITE:\n//   return {\n//     ...state,\n//     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n//     //crea un nuevo array con todos los elementos que cumplan la condición\n//     //cada peli es un objeto que en particular tiene una prop id\n//   }\ndefault:return state;}};export default reducer;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/reducers/reducers.js"],"names":["SET_NG_GEN_SEL","SET_NG_PTF_SEL","SEND_FORM","INIT_SEARCH","SET_ORIG","SET_SEARCH_GEN","SET_ORDER_OPT","DB_GEN_OP_SEARCH","API_GEN_OP_SEARCH","TITLE_SEARCH","GET_API_GAMES","GET_DB_GAMES","CLEAN_CARDS","initialState","nggensel","ngplatfsel","sended","initsearch","searchOrig","searchgenre","ordering","dbgenopts","label","value","apigenopts","stitle","apigames","dbgames","cleancards","reducer","state","action","type","payload"],"mappings":"sKAAA,OACEA,cADF,CACkBC,cADlB,CACkCC,SADlC,CAEEC,WAFF,CAEeC,QAFf,CAEyBC,cAFzB,CAEyCC,aAFzC,CAGEC,gBAHF,CAGoBC,iBAHpB,CAGuCC,YAHvC,CAGqDC,aAHrD,CAIEC,YAJF,CAIiBC,WAJjB,KAKO,oBALP,CAOA,GAAMC,CAAAA,YAAY,CAAG,CACnB;AACAC,QAAQ,CAAE,EAFS,CAGnBC,UAAU,CAAE,EAHO,CAInBC,MAAM,CAAE,KAJW,CAKnB;AACAC,UAAU,CAAE,KANO,CAMD;AAClBC,UAAU,CAAE,EAPO,CAQnBC,WAAW,CAAE,EARM,CASnBC,QAAQ,CAAE,EATS,CAUnB;AACAC,SAAS,CAAE,CACT,CAAEC,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CADS,CAET,CAAED,KAAK,CAAE,UAAT,CAAqBC,KAAK,CAAE,UAA5B,CAFS,CAXQ,CAenBC,UAAU,CAAE,EAfO,CAgBnBC,MAAM,CAAE,EAhBW,CAiBnBC,QAAQ,CAAE,EAjBS,CAkBnBC,OAAO,CAAE,EAlBU,CAmBnBC,UAAU,CAAE,KAnBO,CAArB,CAsBA,QAASC,CAAAA,OAAT,EAA+C,IAA9BC,CAAAA,KAA8B,2DAAtBjB,YAAsB,IAARkB,CAAAA,MAAQ,2CAE7C,OAAQA,MAAM,CAACC,IAAf,EACE;AACA,IAAKhC,CAAAA,cAAL,CACE,sCACK8B,KADL,MAEEhB,QAAQ,CAAEiB,MAAM,CAACE,OAFnB,GAIF,IAAKhC,CAAAA,cAAL,CACE,sCACK6B,KADL,MAEEf,UAAU,CAAEgB,MAAM,CAACE,OAFrB,GAIF,IAAK/B,CAAAA,SAAL,CACE,sCACK4B,KADL,MAEEd,MAAM,CAAEe,MAAM,CAACE,OAFjB,GAIF;AACA,IAAK9B,CAAAA,WAAL,CACE,sCACK2B,KADL,MAEEb,UAAU,CAAEc,MAAM,CAACE,OAFrB,GAIF,IAAK7B,CAAAA,QAAL,CACE,sCACK0B,KADL,MAEEZ,UAAU,CAAEa,MAAM,CAACE,OAFrB,GAIF,IAAK5B,CAAAA,cAAL,CACE,sCACKyB,KADL,MAEEX,WAAW,CAAEY,MAAM,CAACE,OAFtB,GAIF,IAAK3B,CAAAA,aAAL,CACE,sCACKwB,KADL,MAEEV,QAAQ,CAAEW,MAAM,CAACE,OAFnB,GAIF,IAAK1B,CAAAA,gBAAL,CACE,sCACKuB,KADL,MAEET,SAAS,CAAEU,MAAM,CAACE,OAFpB,GAIF,IAAKzB,CAAAA,iBAAL,CACE,sCACKsB,KADL,MAEEN,UAAU,CAAEO,MAAM,CAACE,OAFrB,GAIF,IAAKxB,CAAAA,YAAL,CACE,sCACKqB,KADL,MAEEL,MAAM,CAAEM,MAAM,CAACE,OAFjB,GAIF,IAAKvB,CAAAA,aAAL,CACE,sCACKoB,KADL,MAEEJ,QAAQ,CAAEK,MAAM,CAACE,OAFnB,GAIF,IAAKtB,CAAAA,YAAL,CACE,sCACKmB,KADL,MAEEH,OAAO,CAAEI,MAAM,CAACE,OAFlB,GAIF,IAAKrB,CAAAA,WAAL,CACE,sCACKkB,KADL,MAEEF,UAAU,CAAEG,MAAM,CAACE,OAFrB,GAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QACE,MAAOH,CAAAA,KAAP,CAzFJ,CA2FD,EAED,cAAeD,CAAAA,OAAf","sourcesContent":["import {\n  SET_NG_GEN_SEL, SET_NG_PTF_SEL, SEND_FORM,\n  INIT_SEARCH, SET_ORIG, SET_SEARCH_GEN, SET_ORDER_OPT,\n  DB_GEN_OP_SEARCH, API_GEN_OP_SEARCH, TITLE_SEARCH, GET_API_GAMES,\n  GET_DB_GAMES , CLEAN_CARDS\n} from '../actions/actions';\n\nconst initialState = {\n  //------New game------\n  nggensel: [],\n  ngplatfsel: [],\n  sended: false,\n  //-----Search game----\n  initsearch: false,// Opciones de búsqueda de juegos\n  searchOrig: '',\n  searchgenre: '',\n  ordering: '',\n  // dbgenopts: [],\n  dbgenopts: [\n    { label: 'acción', value: 'acción' },\n    { label: 'aventura', value: 'aventura' }\n  ],\n  apigenopts: [],\n  stitle: '',\n  apigames: [],\n  dbgames: [],\n  cleancards: false,\n};\n\nfunction reducer(state = initialState, action) {\n\n  switch (action.type) {\n    //------New game------\n    case SET_NG_GEN_SEL:\n      return {\n        ...state,\n        nggensel: action.payload\n      }\n    case SET_NG_PTF_SEL:\n      return {\n        ...state,\n        ngplatfsel: action.payload\n      }\n    case SEND_FORM:\n      return {\n        ...state,\n        sended: action.payload\n      }\n    //-----Search game----\n    case INIT_SEARCH:\n      return {\n        ...state,\n        initsearch: action.payload\n      }\n    case SET_ORIG:\n      return {\n        ...state,\n        searchOrig: action.payload\n      }\n    case SET_SEARCH_GEN:\n      return {\n        ...state,\n        searchgenre: action.payload\n      }\n    case SET_ORDER_OPT:\n      return {\n        ...state,\n        ordering: action.payload\n      }\n    case DB_GEN_OP_SEARCH:\n      return {\n        ...state,\n        dbgenopts: action.payload\n      }\n    case API_GEN_OP_SEARCH:\n      return {\n        ...state,\n        apigenopts: action.payload\n      }\n    case TITLE_SEARCH:\n      return {\n        ...state,\n        stitle: action.payload\n      }\n    case GET_API_GAMES:\n      return {\n        ...state,\n        apigames: action.payload\n      }\n    case GET_DB_GAMES:\n      return {\n        ...state,\n        dbgames: action.payload\n      }\n    case CLEAN_CARDS:\n      return {\n        ...state,\n        cleancards: action.payload\n      }\n\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}