{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index'; //import genresopt from '../Genres/Genres';\n\nimport { getDbGenres } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiSelectGenre() {\n  _s();\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading); // dispatch(getDbGenres());\n  // console.log(loading);\n  // console.log(store.getState().loading)\n\n  let [show, setShow] = useState(false);\n  useEffect(() => {\n    dispatch(getDbGenres()); // console.log('se cargó la página');\n  }, []);\n  useEffect(() => {\n    console.log('cambió show a true');\n    setShow(true);\n  }, [store.getState().loading]);\n  const genres = useSelector(state => state.genreopt); // console.log(genres);\n\n  let [genreopt, setGenreopt] = useState([]);\n  useEffect(() => {\n    if (show) {}\n\n    setGenreopt(genres); //console.log(genreopt);\n    //setShow(true);\n  }, [show]);\n  console.log(show); // Estado de géneros seleccionados\n\n  let [sgenres, setSgenres] = useState([]); // selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {}, [sgenres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selgenfom\",\n    children: show ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"ng_loading\",\n      children: \"...cargando g\\xE9neros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"ng_loading\",\n      children: \"...Ya carg\\xF3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiSelectGenre, \"P/POqiDqjQEDwwINDWwqwrmSdi8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MultiSelectGenre;\n{\n  /* <>\n  <select\n   name=\"genres\"\n   placeholder=\"Plataformas...\"\n   className=\"multselectgen\"\n   value={''}\n   onChange={handleChange}\n  >\n   <option defaultValue>Géneros:</option>\n   {genres && genres.map((item, index) => (\n     <option key={index} value={item.value}>{item.label}</option>\n   ))}\n  </select>\n  <div className=\"gencont\">\n   {sgenres.map((item, index) => (\n     <button className=\"selgenbtn\" value={item}\n       onClick={handleClick} key={index}>\n       {item}\n     </button>\n   ))}\n  </div>\n  </> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectGenre\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","store","getDbGenres","MultiSelectGenre","dispatch","loading","state","show","setShow","console","log","getState","genres","genreopt","setGenreopt","sgenres","setSgenres","removeItem","item","newItems","filter","e","handleChange","itemP","target","value","hasItem","includes","handleClick","itm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index';\n//import genresopt from '../Genres/Genres';\nimport { getDbGenres } from '../../actions/actions';\n\nexport default function MultiSelectGenre() {\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading);\n // dispatch(getDbGenres());\n  // console.log(loading);\n  // console.log(store.getState().loading)\n  let [show, setShow] = useState(false);\n\n  useEffect(() => {\n    dispatch(getDbGenres());\n   // console.log('se cargó la página');\n  },[])\n\n\n  useEffect(() => {\n   console.log('cambió show a true');\n   setShow(true);\n  },[store.getState().loading])\n\n  const genres = useSelector(state => state.genreopt);\n // console.log(genres);\n\n  let [genreopt, setGenreopt] = useState([]);\n\n  useEffect(() => {\n    if(show){\n      \n    }\n    setGenreopt(genres);\n    //console.log(genreopt);\n    //setShow(true);\n   },[show])\n\n   console.log(show);\n\n  // Estado de géneros seleccionados\n  let [sgenres, setSgenres] = useState([]);// selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {\n  }, [sgenres]);\n\n  return (\n    <div className=\"selgenfom\">\n      { show ? <h3 className=\"ng_loading\">...cargando géneros</h3> :\n      <h3 className=\"ng_loading\">...Ya cargó</h3>\n      }\n    </div>\n  )\n}\n\n\n{/* <>\n<select\n  name=\"genres\"\n  placeholder=\"Plataformas...\"\n  className=\"multselectgen\"\n  value={''}\n  onChange={handleChange}\n>\n  <option defaultValue>Géneros:</option>\n  {genres && genres.map((item, index) => (\n    <option key={index} value={item.value}>{item.label}</option>\n  ))}\n</select>\n<div className=\"gencont\">\n  {sgenres.map((item, index) => (\n    <button className=\"selgenbtn\" value={item}\n      onClick={handleClick} key={index}>\n      {item}\n    </button>\n  ))}\n</div>\n</> */}"]},"metadata":{},"sourceType":"module"}