{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/FT10-PI-Videogames/client/src/components/GamesToShow/GamesToShow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './GamesToShow.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GamesToShow({\n  perpage\n}) {\n  _s();\n\n  let orig = useSelector(state => state.searchOrig);\n  let inits = useSelector(state => state.initsearch);\n  let titFiltGames = useSelector(state => state.gamestoshow); // juegos para mostrar\n\n  let orderchoice = useSelector(state => state.ordering);\n  let [ordarr, setOrdarr] = useState(null);\n  let [pageCount, setPageCount] = useState(null);\n  let [currentPage, setCurrentPage] = useState(0); //inicialmente la primer página\n\n  let [currentPageArr, setCurrentPArr] = useState([]);\n  let [pages, setPages] = useState(null);\n  let PER_PAGE = parseInt(perpage);\n  useEffect(() => {}, [inits]);\n  useEffect(() => {\n    function letsorder(arr, op) {\n      if (op === 'abcCreciente' || op === 'abcDecreciente') {\n        arr.sort(function (a, b) {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          return 0;\n        });\n        if (op === 'abcDecreciente') arr.reverse();\n        return arr;\n      } else if (op === 'nroCreciente' || op === 'nroDecreciente') {\n        arr.sort((a, b) => a.rating - b.rating);\n        if (op === 'nroDecreciente') arr.reverse();\n        return arr;\n      }\n    }\n\n    setOrdarr(null); //limpia\n\n    if (titFiltGames) {\n      let arr = titFiltGames;\n\n      if (orderchoice) {\n        letsorder(arr, orderchoice);\n      }\n\n      setOrdarr(arr);\n    }\n  }, [titFiltGames, orderchoice]);\n  useEffect(() => {\n    if (ordarr) {\n      let n = ordarr.length; // Nro total de juegos a mostrar\n\n      let pc = Math.ceil(n / PER_PAGE); // Nro de páginas a mostrar\n\n      setPageCount(pc);\n    }\n  }, [ordarr, PER_PAGE]);\n  useEffect(() => {\n    if (pageCount) {\n      // Función que crea botones para cáda página\n      function pagesNumArr(pageCount) {\n        let arr = [];\n\n        for (let i = 1; i <= pageCount; i++) {\n          arr.push(i);\n        }\n\n        return arr;\n      }\n\n      let pages = pagesNumArr(pageCount);\n      setPages(pages);\n    }\n  }, [pageCount]);\n  useEffect(() => {\n    if (pages) {\n      // Función que obtiene el subarreglo de juegos a mostrar según la pagina\n      // en la que se encuentre.\n      function inpageshow(currentPage, perpage, ordarr) {\n        let offset = currentPage * perpage;\n        let currentPageArr = ordarr.slice(offset, offset + PER_PAGE); // console.log(currentPageArr);\n\n        setCurrentPArr([...currentPageArr]);\n      }\n\n      if (ordarr) {\n        inpageshow(currentPage, PER_PAGE, ordarr);\n      }\n\n      let circles = document.getElementsByClassName(\"one_button\");\n\n      for (let i = 0; i < pages.length; i++) {\n        if (i !== currentPage) {\n          circles[i].className = \"one_button inactive\";\n        } else {\n          circles[currentPage].className = \"one_button active\";\n        }\n      }\n    }\n  }, [currentPage, PER_PAGE, ordarr, pages]);\n\n  function handlePrev() {\n    if (currentPage !== 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  }\n\n  const handleNext = e => {\n    console.log(currentPage);\n    console.log(pageCount);\n\n    if (currentPage < pageCount - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  function handlePage(e) {\n    setCurrentPage(e.target.value - 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards_area\",\n    children: inits && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p_button\",\n        onClick: handlePrev,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardcont1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardcont\",\n          children: currentPageArr && currentPageArr.map((g, i) =>\n          /*#__PURE__*/\n          //source\n          _jsxDEV(GameCard, {\n            orig: orig,\n            id: g.id,\n            name: g.name,\n            rating: g.rating,\n            img: g.img_url,\n            genres: g.genres\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p_btn_area\",\n          children: pages && pages.map((p, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"one_button inactive\",\n            onClick: handlePage,\n            value: p,\n            children: [\" \", p, \" \"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p_button\",\n        onClick: handleNext,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GamesToShow, \"nHEqEEjdfM91VJ/Mf0m8Xci+6Kg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = GamesToShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamesToShow\");","map":{"version":3,"sources":["/home/edith/Desktop/FT10-PI-Videogames/client/src/components/GamesToShow/GamesToShow.jsx"],"names":["React","useState","useEffect","useSelector","GameCard","GamesToShow","perpage","orig","state","searchOrig","inits","initsearch","titFiltGames","gamestoshow","orderchoice","ordering","ordarr","setOrdarr","pageCount","setPageCount","currentPage","setCurrentPage","currentPageArr","setCurrentPArr","pages","setPages","PER_PAGE","parseInt","letsorder","arr","op","sort","a","b","name","toLowerCase","reverse","rating","n","length","pc","Math","ceil","pagesNumArr","i","push","inpageshow","offset","slice","circles","document","getElementsByClassName","className","handlePrev","handleNext","e","console","log","handlePage","target","value","map","g","id","img_url","genres","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './GamesToShow.css';\nimport GameCard from '../GameCard/GameCard.jsx';\n\nexport default function GamesToShow({perpage}) {\n\n  let orig = useSelector(state => state.searchOrig);\n  let inits = useSelector(state => state.initsearch);\n  let titFiltGames = useSelector(state => state.gamestoshow); // juegos para mostrar\n  let orderchoice = useSelector(state => state.ordering);\n\n  let [ordarr, setOrdarr] = useState(null);\n\n  let [pageCount, setPageCount] = useState(null);\n  let [currentPage, setCurrentPage] = useState(0); //inicialmente la primer página\n  let [currentPageArr, setCurrentPArr] = useState([]);\n  let [pages, setPages] = useState(null);\n  let PER_PAGE = parseInt(perpage);\n\n  useEffect(() => {\n  }, [inits])\n\n  useEffect(() => {\n    function letsorder(arr, op) {\n      if ((op === 'abcCreciente') || (op === 'abcDecreciente')) {\n        arr.sort(function (a, b) {\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          return 0;\n        });\n        if (op === 'abcDecreciente') arr.reverse();\n        return arr;\n      } else if ((op === 'nroCreciente') || (op === 'nroDecreciente')) {\n        arr.sort((a, b) => a.rating - b.rating);\n        if (op === 'nroDecreciente') arr.reverse();\n        return arr;\n      }\n    }\n    setOrdarr(null); //limpia\n\n    if (titFiltGames) {\n      let arr = titFiltGames;\n      if (orderchoice) {\n        letsorder(arr, orderchoice);\n      }\n      setOrdarr(arr);\n    }\n  }, [titFiltGames, orderchoice])\n\n  useEffect(() => {\n    if (ordarr) {\n      let n = ordarr.length; // Nro total de juegos a mostrar\n      let pc = Math.ceil(n / PER_PAGE); // Nro de páginas a mostrar\n      setPageCount(pc);\n    }\n  }, [ordarr, PER_PAGE])\n\n  useEffect(() => {\n    if (pageCount) {\n      // Función que crea botones para cáda página\n      function pagesNumArr(pageCount) {\n        let arr = [];\n        for (let i = 1; i <= pageCount; i++) {\n          arr.push(i);\n        }\n        return arr;\n      }\n      let pages = pagesNumArr(pageCount);\n      setPages(pages);\n    }\n  }, [pageCount])\n\n  useEffect(() => {\n    if (pages) {\n      // Función que obtiene el subarreglo de juegos a mostrar según la pagina\n      // en la que se encuentre.\n      function inpageshow(currentPage, perpage, ordarr) {\n        let offset = currentPage * perpage;\n        let currentPageArr = ordarr.slice(offset, offset + PER_PAGE)\n        // console.log(currentPageArr);\n        setCurrentPArr([...currentPageArr]);\n      }\n\n      if (ordarr) {\n        inpageshow(currentPage, PER_PAGE, ordarr);\n      }\n      let circles = document.getElementsByClassName(\"one_button\");\n      for (let i = 0; i < pages.length; i++) {\n        if (i !== currentPage) {\n          circles[i].className = \"one_button inactive\"\n        } else {\n          circles[currentPage].className = \"one_button active\"\n        }\n      }\n    }\n  }, [currentPage, PER_PAGE, ordarr, pages])\n\n  function handlePrev() {\n    if (currentPage !== 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  }\n\n  const handleNext = (e) => {\n    console.log(currentPage);\n    console.log(pageCount);\n    if (currentPage < pageCount - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  }\n\n  function handlePage(e) {\n    setCurrentPage(e.target.value - 1);\n  }\n\n  return (\n    <div className=\"cards_area\">\n      {inits && <>\n\n        <button className=\"p_button\" onClick={handlePrev}>&#8249;</button>\n        <div className=\"cardcont1\" >\n          <div className=\"cardcont\" >\n            {currentPageArr && currentPageArr.map((g, i) => (//source\n              <GameCard key={i} orig={orig} id={g.id} name={g.name} rating={g.rating} img={g.img_url} genres={g.genres} />\n            ))}\n          </div>\n          <div className=\"p_btn_area\">\n            {pages && pages.map((p, i) => (\n              <button key={i} className=\"one_button inactive\" onClick={handlePage} value={p}> {p} </button>\n            ))}\n          </div>\n        </div>\n        <button className=\"p_button\" onClick={handleNext}>&#8250;</button>\n      </>}\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}