{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  const dispatch = useDispatch();\n  const origin = useSelector(state => state.searchOrig);\n  const apiGames = useSelector(state => state.apigames);\n  const dbGames = useSelector(state => state.dbgames);\n  const search_gen = useSelector(state => state.searchgenre);\n  const search_t = useSelector(state => state.stitle);\n  const sent = useSelector(state => state.initsearch);\n  const cleancards = useSelector(state => state.cleancards);\n  const [showMsg, setShowMsg] = useState(true);\n  const [searchingG, setSearchingG] = useState(false);\n  const [games, setGames] = useState([]);\n  const [genFiltGames, setGenFiltGames] = useState(null);\n  const [titFiltGames, setTitFiltGames] = useState(null); // Según el origen busca el arreglo de juegos\n\n  useEffect(() => {\n    if (origin === 'api') {\n      // console.log('cargaste API');\n      dispatch(getApiGames());\n      setShowMsg(false); // desactiva mje de seleccionar origen\n\n      setSearchingG(true); // activa mje de buscando\n      //limpiar dbgames\n    }\n\n    if (origin === 'db') {\n      console.log('falta cargar videojuegos en la base de datos'); // dispatch(getdbGames());\n\n      setShowMsg(false);\n      setSearchingG(true); //limpiar apigames\n    }\n  }, [origin, dispatch]);\n  let gRef = useRef(games);\n  useEffect(() => {//console.log(gRef.current)\n  }, [showMsg, searchingG]);\n  let origRef = useRef(origin); // Una vez cargados los juegos en el store desactiva mje \"buscando\"\n  // \n\n  useEffect(() => {\n    setSearchingG(false);\n\n    if (origRef.current === 'api') {\n      setGames(apiGames);\n      console.log(gRef);\n    }\n\n    if (origRef.current === 'db') {\n      setGames(dbGames);\n    }\n  }, [apiGames, dbGames]);\n  useEffect(() => {\n    console.log(games);\n  }, [games]);\n\n  function genreFilter(arr, str) {\n    let newarr = arr.filter(e => e.genres.includes(str));\n    return newarr;\n  } // Si se especifica un género para filtar llama a genreFilter\n\n\n  useEffect(() => {\n    let newarr = genreFilter(gRef.current, search_gen);\n    setGenFiltGames(newarr);\n    setTitFiltGames(null); // Si cambio el género que quite cualquier selección previa guardada por título.\n    //limpiar area\n  }, [search_gen]);\n\n  function titleFilter(arr, str) {\n    let newarr = arr.filter(e => e.name.includes(str));\n    setTitFiltGames(newarr);\n    return newarr;\n  }\n\n  let gfg = useRef(genFiltGames);\n  let tref = useRef(search_t);\n  let tfgRef = useRef(titFiltGames);\n  useEffect(() => {\n    let newarr = titleFilter(gfg.current || gRef.current, tref.current); // Si no filtro por género que deje los de la api\n\n    setTitFiltGames(newarr); // console.log(tfgRef.current);\n    // console.log(sent);\n  }, [sent]); // en submit\n\n  useEffect(() => {\n    dispatch(initsearch(false)); // limpia????\n    // setShowMsg(true);// desactiva mje de seleccionar origen\n    // setSearchingG(false);\n  }, [cleancards, dispatch]); // traerme el arreglo\n  // traerme el género y el título a buscar\n  // hacer el filtrado\n  // mostrar de a 6\n  // \n  // si es api y el texto de búsqueda es '' trae 100 de la ruta local / videogames\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showMsg && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }, this), searchingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" ...Obteniendo juegos de origen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 22\n    }, this), cleancards && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p_cards_area\",\n      children: [/*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p_btn_area\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p_button\",\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p_button\",\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"k2bbNrgMkpXX9SL77n77wzDfq+k=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GameCard","getApiGames","getdbGames","initsearch","Pagination","dispatch","origin","state","searchOrig","apiGames","apigames","dbGames","dbgames","search_gen","searchgenre","search_t","stitle","sent","cleancards","showMsg","setShowMsg","searchingG","setSearchingG","games","setGames","genFiltGames","setGenFiltGames","titFiltGames","setTitFiltGames","console","log","gRef","origRef","current","genreFilter","arr","str","newarr","filter","e","genres","includes","titleFilter","name","gfg","tref","tfgRef"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames , initsearch} from '../../actions/actions';\n\nexport default function Pagination() {\n\n  const dispatch = useDispatch();\n\n  const origin = useSelector(state => state.searchOrig);\n  const apiGames = useSelector(state => state.apigames);\n  const dbGames = useSelector(state => state.dbgames);\n  const search_gen = useSelector(state => state.searchgenre);\n  const search_t = useSelector(state => state.stitle);\n  const sent = useSelector(state => state.initsearch);\n  const cleancards = useSelector(state => state.cleancards);\n\n  const [showMsg, setShowMsg] = useState(true);\n  const [searchingG, setSearchingG] = useState(false);\n  const [games, setGames] = useState([]);\n  const [genFiltGames, setGenFiltGames] = useState(null);\n  const [titFiltGames, setTitFiltGames] = useState(null);\n\n  // Según el origen busca el arreglo de juegos\n  useEffect(() => {\n    if (origin === 'api') {\n      // console.log('cargaste API');\n      dispatch(getApiGames());\n      setShowMsg(false);// desactiva mje de seleccionar origen\n      setSearchingG(true); // activa mje de buscando\n      //limpiar dbgames\n    }\n    if (origin === 'db') {\n      console.log('falta cargar videojuegos en la base de datos');\n      // dispatch(getdbGames());\n      setShowMsg(false);\n      setSearchingG(true);\n      //limpiar apigames\n    }\n  }, [origin, dispatch])\n\n  let gRef = useRef(games);\n  useEffect(() => {\n    //console.log(gRef.current)\n  }, [showMsg, searchingG])\n\n  let origRef = useRef(origin);\n  // Una vez cargados los juegos en el store desactiva mje \"buscando\"\n  // \n  useEffect(() => {\n    setSearchingG(false);\n    if(origRef.current === 'api'){\n      setGames(apiGames)\n      console.log(gRef);\n    }\n    if(origRef.current === 'db'){\n      setGames(dbGames)\n    }\n  }, [apiGames, dbGames])\n\n  useEffect(() => {\n    console.log(games);\n  }, [games])\n\n  function genreFilter(arr, str) {\n    let newarr = arr.filter(e => e.genres.includes(str));\n    return newarr;\n  }\n\n  \n  // Si se especifica un género para filtar llama a genreFilter\n  useEffect(() => {\n    let newarr = genreFilter(gRef.current, search_gen);\n    setGenFiltGames(newarr);\n    setTitFiltGames(null); // Si cambio el género que quite cualquier selección previa guardada por título.\n    //limpiar area\n  }, [search_gen])\n\n  function titleFilter(arr, str) {\n    let newarr = arr.filter(e => e.name.includes(str));\n    setTitFiltGames(newarr);\n    return newarr;\n  }\n\n  let gfg = useRef(genFiltGames)\n  let tref= useRef(search_t)\n  let tfgRef = useRef(titFiltGames);\n  useEffect(() => {\n    let newarr = titleFilter(gfg.current||gRef.current, tref.current);// Si no filtro por género que deje los de la api\n    setTitFiltGames(newarr);\n    // console.log(tfgRef.current);\n    // console.log(sent);\n  }, [sent]) // en submit\n\n  useEffect(()=>{\n    dispatch(initsearch(false)); // limpia????\n    // setShowMsg(true);// desactiva mje de seleccionar origen\n    // setSearchingG(false);\n  },[cleancards,dispatch])\n\n  // traerme el arreglo\n  // traerme el género y el título a buscar\n  // hacer el filtrado\n  // mostrar de a 6\n  // \n\n  // si es api y el texto de búsqueda es '' trae 100 de la ruta local / videogames\n\n\n  return (\n    <div>\n      {showMsg && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {searchingG && <h3> ...Obteniendo juegos de origen</h3>}\n      {cleancards && <div className=\"p_cards_area\">\n        <GameCard />\n        <GameCard />\n      </div>}\n      <div className=\"p_btn_area\">\n        <button className=\"p_button\">Anterior</button>\n        <button className=\"p_button\">Siguiente</button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}