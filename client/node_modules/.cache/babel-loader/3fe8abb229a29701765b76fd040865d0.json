{"ast":null,"code":"export const GET_API_PLATFORMS = \"GET_API_PLATFORMS\";\nexport const SET_NG_GEN_SEL = \"SET_NG_GEN_SEL\"; // Request a la API para traer las plataformas de videojuegos.\n// export function getApiPlatforms() {\n//   return function (dispatch) {\n//     return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n//       .then(response => response.json()) //aplica json y retorna\n//       .then(json => {\n//         let data = json.results;\n//         let apiPlatfs = data.map(e => e.name);\n//         return apiPlatfs;\n//       })\n//       .then(platfs => {\n//         dispatch({ type: GET_API_PLATFORMS, payload: platfs }) // lo manda al reducer\n//       });\n//   };\n// }\n// https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'\n\nexport function getDbGenres() {\n  const genreopt = [];\n\n  async function buildGenObjArr() {\n    fetch(\"http://localhost:3001/genres\").then(response => response.json()).then(arr => {\n      for (let i = 0; i < arr.length; i++) {\n        let obj = {\n          value: arr[i].name,\n          label: arr[i].name\n        };\n        genreopt.push(obj);\n      }\n    }).catch(error => console.log(error));\n  }\n\n  buildGenObjArr();\n  return {\n    type: GET_GENRE_OPT,\n    payload: genreopt\n  };\n} // export function setNgGenSel(arr) {\n//   return { type: SET_NG_GEN_SEL, payload: arr };\n// }","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/actions/actions.js"],"names":["GET_API_PLATFORMS","SET_NG_GEN_SEL","getDbGenres","genreopt","buildGenObjArr","fetch","then","response","json","arr","i","length","obj","value","name","label","push","catch","error","console","log","type","GET_GENRE_OPT","payload"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAE5B,QAAMC,QAAQ,GAAG,EAAjB;;AAEC,iBAAeC,cAAf,GAAgC;AAC/BC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,GAAG,IAAI;AACX,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAIE,GAAG,GAAG;AAAEC,UAAAA,KAAK,EAAEJ,GAAG,CAACC,CAAD,CAAH,CAAOI,IAAhB;AAAsBC,UAAAA,KAAK,EAAEN,GAAG,CAACC,CAAD,CAAH,CAAOI;AAApC,SAAV;AACAX,QAAAA,QAAQ,CAACa,IAAT,CAAcJ,GAAd;AACD;AACF,KAPH,EAQGK,KARH,CAQSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARlB;AASD;;AAEDd,EAAAA,cAAc;AAEd,SAAO;AAAEiB,IAAAA,IAAI,EAAEC,aAAR;AAAuBC,IAAAA,OAAO,EAAEpB;AAAhC,GAAP;AACD,C,CAED;AACA;AACA","sourcesContent":["export const GET_API_PLATFORMS = \"GET_API_PLATFORMS\";\nexport const SET_NG_GEN_SEL = \"SET_NG_GEN_SEL\";\n\n\n\n\n// Request a la API para traer las plataformas de videojuegos.\n// export function getApiPlatforms() {\n//   return function (dispatch) {\n//     return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n//       .then(response => response.json()) //aplica json y retorna\n//       .then(json => {\n//         let data = json.results;\n//         let apiPlatfs = data.map(e => e.name);\n//         return apiPlatfs;\n//       })\n//       .then(platfs => {\n//         dispatch({ type: GET_API_PLATFORMS, payload: platfs }) // lo manda al reducer\n//       });\n//   };\n// }\n\n// https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'\n\nexport function getDbGenres() {\n\n  const genreopt = [];\n\n   async function buildGenObjArr() {\n    fetch(\"http://localhost:3001/genres\")\n      .then(response => response.json())\n      .then(arr => {\n        for (let i = 0; i < arr.length; i++) {\n          let obj = { value: arr[i].name, label: arr[i].name };\n          genreopt.push(obj);\n        }\n      })\n      .catch(error => console.log(error))\n  }\n\n  buildGenObjArr();\n\n  return { type: GET_GENRE_OPT, payload: genreopt };\n}\n\n// export function setNgGenSel(arr) {\n//   return { type: SET_NG_GEN_SEL, payload: arr };\n// }\n"]},"metadata":{},"sourceType":"module"}