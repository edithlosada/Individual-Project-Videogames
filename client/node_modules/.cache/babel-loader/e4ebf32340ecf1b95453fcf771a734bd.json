{"ast":null,"code":"import _slicedToArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import'./CreateForm.css';import MultiSelectPlatform from'../MultiSelectPlatform/MultiSelectPlatform';import MultiSelectGenre from'../MultiSelectGenre/MultiSelectGenre';import AddNewPlatform from'../AddNewPlatform/AddNewPlatform';import AddNewGenre from'../AddNewGenre/AddNewGenre';//import { connect } from \"react-redux\";\nimport{getDbGenres}from'../../actions/actions';import axios from'axios';import store from'../../store/index';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CreateForm(props){//   // console.log(props);\n//   // props.findgenres();\n//   // console.log(props.loading);\n//   const dispatch = useDispatch();\n//   dispatch(getDbGenres());\n//   console.log(store.getState());\n//   // store.dispatch(getDbGenres());\n//   //console.log(store.getState())\n// //   useEffect(() => {\n// //   dispatch(getDbGenres)\n// // },[])\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),released=_useState4[0],setReleased=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),rating=_useState8[0],setRating=_useState8[1];var handleSubmit=function handleSubmit(event){event.preventDefault();//sirve para evitar que refresque la pagina cada vez que apreto una tecla (comportamiento por default)\naxios.post('http://localhost:3001/newgame',gametoadd).then(function(resp){console.log(resp.data);});// props.onSearch(city);\n//setGame(\"\"); //para limpiar el input\nalert('juego agregado');setTitle('');setReleased('');setDescription('');setRating('');};function handleInputChange(e){var nombre=e.target.name;switch(nombre){case'title':setTitle(e.target.value);break;case'released':setReleased(e.target.value);break;case'description':setDescription(e.target.value);break;case'rating':setRating(e.target.value);break;default:break;}}// //console.log(rating);\n// let state1 = {title, released,description,rating};\nvar gametoadd={};//ojo!!!\n// let loading = true; //ojo!!!\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"ng_page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ng_container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"ng_title\",children:\"Nuevo juego: \"}),/*#__PURE__*/_jsxs(\"form\",{method:\"post\",action:\"http://localhost:3001/newgame\",className:\"ng_formArea\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{id:\"input_name\",type:\"text\",className:\"ng_forminput\",value:title,name:\"title\",placeholder:\"Ingrese el nombre del juego...\",onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{id:\"input_released\",type:\"text\",className:\"ng_forminput\",value:released,name:\"released\",placeholder:\"Fecha de lanzamiento...\",onChange:handleInputChange}),/*#__PURE__*/_jsx(\"textarea\",{id:\"input_resume\",className:\"ng_textinput\",value:description,name:\"description\",placeholder:\"Breve res\\xFAmen ...\",type:\"text\",onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{id:\"input_rating\",type:\"text\",className:\"ng_forminput\",value:rating,name:\"rating\",placeholder:\"Puntaje...\",onChange:handleInputChange}),/*#__PURE__*/_jsx(\"div\",{className:\"ng_selectArea\",children:/*#__PURE__*/_jsx(MultiSelectGenre,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"ng_button-area\",children:/*#__PURE__*/_jsx(\"button\",{className:\"ng_button\",type:\"submit\",children:\"Guardar\"})})]})]})});};// const mapStateToProps = state => {\n// \treturn { loading: state.loading }\n// }\n// const mapDispatchToProps = dispatch => {\n// \treturn { findgenres: () => dispatch(getDbGenres()) }\n// }\n// export default connect(\n// \tmapStateToProps,\n// \tmapDispatchToProps\n// )(CreateForm) ;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/CreateForm/CreateForm.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","MultiSelectPlatform","MultiSelectGenre","AddNewPlatform","AddNewGenre","getDbGenres","axios","store","CreateForm","props","title","setTitle","released","setReleased","description","setDescription","rating","setRating","handleSubmit","event","preventDefault","post","gametoadd","then","resp","console","log","data","alert","handleInputChange","e","nombre","target","name","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport './CreateForm.css';\nimport MultiSelectPlatform from '../MultiSelectPlatform/MultiSelectPlatform';\nimport MultiSelectGenre from '../MultiSelectGenre/MultiSelectGenre';\nimport AddNewPlatform from '../AddNewPlatform/AddNewPlatform';\nimport AddNewGenre from '../AddNewGenre/AddNewGenre';\n//import { connect } from \"react-redux\";\nimport {getDbGenres} from '../../actions/actions';\nimport axios from 'axios';\nimport store from '../../store/index';\n\nexport default function CreateForm(props) {\n//   // console.log(props);\n//   // props.findgenres();\n//   // console.log(props.loading);\n//   const dispatch = useDispatch();\n//   dispatch(getDbGenres());\n\n//   console.log(store.getState());\n//   // store.dispatch(getDbGenres());\n//   //console.log(store.getState())\n\n// //   useEffect(() => {\n// //   dispatch(getDbGenres)\n// // },[])\n\n  let [title, setTitle] = useState('');\n  let [released, setReleased] = useState('');\n  let [description, setDescription] = useState('');\n  let [rating, setRating] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); //sirve para evitar que refresque la pagina cada vez que apreto una tecla (comportamiento por default)\n    axios.post('http://localhost:3001/newgame', gametoadd)\n    .then(resp => {\n      console.log(resp.data);\n    })\n    // props.onSearch(city);\n    //setGame(\"\"); //para limpiar el input\n    alert('juego agregado');\n    setTitle('');\n    setReleased('');\n    setDescription('');\n    setRating('');\n  }\n\n  function handleInputChange(e) {\n    let nombre = e.target.name;\n    switch (nombre) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n      case 'released':\n            setReleased(e.target.value);\n        break;\n      case 'description':\n        setDescription(e.target.value);\n        break;\n      case 'rating':\n        setRating(e.target.value);\n        break;\n      default:\n        break;\n    }\n  }\n\n  // //console.log(rating);\n  // let state1 = {title, released,description,rating};\n   let gametoadd = {}; //ojo!!!\n  // let loading = true; //ojo!!!\n\n  return (\n    <div className=\"ng_page\">\n      <div className=\"ng_container\">\n        <h1 className=\"ng_title\"  >Nuevo juego: </h1>\n        {/* <form method=\"post\" action=\"http://localhost:3001/newrecipe\" encType = \"multipart / form-data\" className=\"ng_formArea\" onSubmit={handleSubmit}> */}\n        <form method=\"post\" action=\"http://localhost:3001/newgame\" className=\"ng_formArea\" onSubmit={handleSubmit}>\n          <input\n            id=\"input_name\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={title}\n            name='title'\n            placeholder=\"Ingrese el nombre del juego...\"\n            onChange={handleInputChange}>\n          </input>\n          <input\n            id=\"input_released\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={released}\n            name='released'\n            placeholder=\"Fecha de lanzamiento...\"\n            onChange={handleInputChange}>\n          </input>\n          <textarea\n            id=\"input_resume\"\n            className=\"ng_textinput\"\n            value={description}\n            name='description'\n            placeholder=\"Breve resúmen ...\"\n            type=\"text\"\n            onChange={handleInputChange}>\n          </textarea>\n          <input\n            id=\"input_rating\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={rating}\n            name='rating'\n            placeholder=\"Puntaje...\"\n            onChange={handleInputChange}>\n          </input>\n          <div className=\"ng_selectArea\">\n            {/* <MultiSelectPlatform /> */}\n            {/* <AddNewPlatform /> */}\n            <MultiSelectGenre/>\n            {/* {loading ? <h3 className=\"ng_loading\">...cargando géneros</h3> : <MultiSelectGenre/>} */}\n            {/* <AddNewGenre /> */}\n          </div>\n          <div className=\"ng_button-area\">\n            <button className=\"ng_button\" type=\"submit\">Guardar</button>\n            {/* <input type=\"submit\" value=\"Guardar\" /> */}\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n};\n\n// const mapStateToProps = state => {\n// \treturn { loading: state.loading }\n// }\n\n// const mapDispatchToProps = dispatch => {\n// \treturn { findgenres: () => dispatch(getDbGenres()) }\n// }\n\n// export default connect(\n// \tmapStateToProps,\n// \tmapDispatchToProps\n// )(CreateForm) ;"]},"metadata":{},"sourceType":"module"}