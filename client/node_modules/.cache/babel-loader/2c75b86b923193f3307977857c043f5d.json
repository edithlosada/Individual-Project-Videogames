{"ast":null,"code":"import _regeneratorRuntime from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch}from'react-redux';// import { useSelector } from 'react-redux';\nimport'./MultiSelectGenre.css';import store from'../../store/index';//import genresopt from '../Genres/Genres';\nimport{getDbGenres}from'../../actions/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MultiSelectGenre(){var dispatch=useDispatch();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),genreop=_useState2[0],setGenreop=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],setShow=_useState4[1];var delay=function delay(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};var fetchObjects=function fetchObjects(){return function(dispatch){store.dispatch(getDbGenres());return delay(2000).then(function(){console.log('Done!');});};};fetchObjects();//  store.dispatch(getDbGenres()).then(() => {\n//   console.log('Done!')\n// })\n// .then(() => {\n//   let genres = store.getState().genreopt;\n//   console.log('genres = ' + genres);\n//   return genres;\n// })\n// .then((genres) => {\n//   setGenreop(genres);\n//   console.log('genreop = ' + genreop);\n// })\n// .then(() => {\n//   setShow(true);\n//   console.log('show = ' + 'true');\n// })\n// .catch(error => console.log(error))\nuseEffect(function(){//console.log(genreop);\n},[show]);//   // store.dispatch()\n//   // (1) Cuando cargue el componente que despache la acción \n//   // que busca los géneros.\n//   useEffect(() => {\n//     console.log('(1) se cargó la página');\n//     store.dispatch(getDbGenres());\n//   }, []);\n//   //const mygenres = useSelector(state => state.genreopt);\n//   //console.log(mygenres);\n//   function select(state){\n//     return state.genreopt;\n//   }\n// //  const genres = store.getState().genreopt;\n//   //console.log(genres);\n//  // console.log(store.getState().genreop);\n//   // Se trae el el arreglo de géneros del store.\n//   //const genres = useSelector(state => state.genreopt);\n//   let [genreop, setGenreop] = useState([]);\n//   let [show, setShow] = useState(false);\n//   // (2) Cuando cargó los géneros en (1) que cambie el estado \"show\" a true\n//   useEffect(() => {\n//     console.log('(2) El store se cargó');\n//     const genres = store.getState().genreopt;\n//     //console.log(genres);\n//    // console.log(genres);\n//     setGenreop(genres);\n//    console.log(genreop);\n//     setShow(true);\n//   }, [store.getState().genreopt])\n//   useEffect(() => {\n//     //console.log(genreop);\n//   }, [genreop])\n//   //console.log('(2)cambió show a true, loading='+store.getState().loading);\n//   // const genres = useSelector(state => state.genreopt);\n//   // console.log(genres);\n//   // useEffect(() => {\n//   //   console.log(genreop);\n//   //   setShow(true);\n//   // }, [show,genreop])\n//   console.log(show);\n// Estado de géneros seleccionados\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),sgenres=_useState6[0],setSgenres=_useState6[1];// selected genres\nfunction removeItem(item){var newItems=sgenres.filter(function(e){return e!==item;});setSgenres(newItems);}function handleChange(_x){return _handleChange.apply(this,arguments);}function _handleChange(){_handleChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var itemP,hasItem;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:itemP=e.target.value;hasItem=sgenres.includes(itemP);if(!hasItem){setSgenres([].concat(_toConsumableArray(sgenres),[itemP]));}else{removeItem(itemP);}case 3:case\"end\":return _context.stop();}}},_callee);}));return _handleChange.apply(this,arguments);}function handleClick(e){var itm=e.target.value;removeItem(itm);}useEffect(function(){},[sgenres]);return/*#__PURE__*/_jsx(\"div\",{className:\"selgenfom\",children:!show?'no muestra':/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"select\",{name:\"genres\",placeholder:\"Plataformas...\",className:\"multselectgen\",value:'',onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{defaultValue:true,children:\"G\\xE9neros:\"}),genreop&&genreop.map(function(item,index){return/*#__PURE__*/_jsx(\"option\",{value:item.value,children:item.label},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"gencont\",children:sgenres.map(function(item,index){return/*#__PURE__*/_jsx(\"button\",{className:\"selgenbtn\",value:item,onClick:handleClick,children:item},index);})})]})});}","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx"],"names":["React","useState","useEffect","useDispatch","store","getDbGenres","MultiSelectGenre","dispatch","genreop","setGenreop","show","setShow","delay","ms","Promise","resolve","setTimeout","fetchObjects","then","console","log","sgenres","setSgenres","removeItem","item","newItems","filter","e","handleChange","itemP","target","value","hasItem","includes","handleClick","itm","map","index","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index';\n//import genresopt from '../Genres/Genres';\nimport { getDbGenres } from '../../actions/actions';\n\nexport default function MultiSelectGenre() {\n\n  const dispatch = useDispatch();\n  let [genreop, setGenreop] = useState([]);\n  let [show, setShow] = useState(false);\n\n  const delay = (ms) => new Promise(resolve =>\n    setTimeout(resolve, ms)\n  );\n  \n  const fetchObjects = () => {\n    return dispatch => {\n      store.dispatch(getDbGenres());\n  \n      return delay(2000)\n      .then(() => {\n        console.log('Done!')\n      })\n\n    }\n  }\n  fetchObjects();\n\n//  store.dispatch(getDbGenres()).then(() => {\n//   console.log('Done!')\n// })\n    // .then(() => {\n    //   let genres = store.getState().genreopt;\n    //   console.log('genres = ' + genres);\n    //   return genres;\n    // })\n    // .then((genres) => {\n    //   setGenreop(genres);\n    //   console.log('genreop = ' + genreop);\n    // })\n    // .then(() => {\n    //   setShow(true);\n    //   console.log('show = ' + 'true');\n    // })\n    // .catch(error => console.log(error))\n\n\n  useEffect(() => {\n    //console.log(genreop);\n  }, [show])\n\n\n  //   // store.dispatch()\n\n  //   // (1) Cuando cargue el componente que despache la acción \n  //   // que busca los géneros.\n  //   useEffect(() => {\n  //     console.log('(1) se cargó la página');\n  //     store.dispatch(getDbGenres());\n  //   }, []);\n\n  //   //const mygenres = useSelector(state => state.genreopt);\n  //   //console.log(mygenres);\n\n  //   function select(state){\n  //     return state.genreopt;\n  //   }\n\n  // //  const genres = store.getState().genreopt;\n  //   //console.log(genres);\n\n  //  // console.log(store.getState().genreop);\n\n  //   // Se trae el el arreglo de géneros del store.\n  //   //const genres = useSelector(state => state.genreopt);\n\n  //   let [genreop, setGenreop] = useState([]);\n\n  //   let [show, setShow] = useState(false);\n\n  //   // (2) Cuando cargó los géneros en (1) que cambie el estado \"show\" a true\n  //   useEffect(() => {\n  //     console.log('(2) El store se cargó');\n  //     const genres = store.getState().genreopt;\n  //     //console.log(genres);\n  //    // console.log(genres);\n  //     setGenreop(genres);\n  //    console.log(genreop);\n  //     setShow(true);\n  //   }, [store.getState().genreopt])\n\n  //   useEffect(() => {\n  //     //console.log(genreop);\n  //   }, [genreop])\n\n\n  //   //console.log('(2)cambió show a true, loading='+store.getState().loading);\n\n  //   // const genres = useSelector(state => state.genreopt);\n  //   // console.log(genres);\n\n\n  //   // useEffect(() => {\n  //   //   console.log(genreop);\n  //   //   setShow(true);\n  //   // }, [show,genreop])\n\n  //   console.log(show);\n\n\n  // Estado de géneros seleccionados\n  let [sgenres, setSgenres] = useState([]);// selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {\n  }, [sgenres]);\n\n  return (\n    <div className=\"selgenfom\">\n      {!show ? 'no muestra' :\n        <>\n          <select\n            name=\"genres\"\n            placeholder=\"Plataformas...\"\n            className=\"multselectgen\"\n            value={''}\n            onChange={handleChange}\n          >\n            <option defaultValue>Géneros:</option>\n            {genreop && genreop.map((item, index) => (\n              <option key={index} value={item.value}>{item.label}</option>\n            ))}\n          </select>\n          <div className=\"gencont\">\n            {sgenres.map((item, index) => (\n              <button className=\"selgenbtn\" value={item}\n                onClick={handleClick} key={index}>\n                {item}\n              </button>\n            ))}\n          </div>\n        </>\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}