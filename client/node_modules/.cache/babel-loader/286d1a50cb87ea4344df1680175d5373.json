{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  const dispatch = useDispatch();\n  const origin = useSelector(state => state.searchOrig);\n  const apiGames = useSelector(state => state.apigames);\n  const dbGames = useSelector(state => state.dbgames);\n  const search_g = useSelector(state => state.searchgenre); // const search_t = useSelector(state => state.stitle);\n\n  const [showMsg, setShowMsg] = useState(true);\n  const [searchingG, setSearchingG] = useState(false);\n  const [games, setGames] = useState(false); // Según el origen busca el arreglo de juegos\n\n  useEffect(() => {\n    if (origin === 'api') {\n      // dispatch(getApiGames());\n      setShowMsg(false);\n      setSearchingG(true);\n    }\n\n    if (origin === 'db') {\n      console.log('falta cargar videojuegos en la base de datos'); // dispatch(getdbGames());\n\n      setShowMsg(false);\n      setSearchingG(true);\n    }\n  }, [origin, dispatch]);\n  useEffect(() => {}, [showMsg, searchingG]); // Una vez cargados los juegos en el store desactiva mje \"buscando\"\n\n  useEffect(() => {\n    setSearchingG(false);\n  }, [apiGames, dbGames]);\n\n  function genreFilter(arr, str) {\n    let newarr = arr.filter(e => e.name.includes(str));\n  } // Si se especifica un género para filtar llama a\n\n\n  useEffect(() => {\n    genreFilter(arr, str);\n  }, [search_g]); // traerme el arreglo\n  // traerme el género y el título a buscar\n  // hacer el filtrado\n  // mostrar de a 6\n  // \n  // si es api y el texto de búsqueda es '' trae 100 de la ruta local / videogames\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showMsg && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero el or\\xEDgen de su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), searchingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" ...Obteniendo juegos de origen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p_cards_area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p_btn_area\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p_button\",\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p_button\",\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"Bmr7UtgS30slobNN6gKcvJEBHhI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GameCard","getApiGames","getdbGames","Pagination","dispatch","origin","state","searchOrig","apiGames","apigames","dbGames","dbgames","search_g","searchgenre","showMsg","setShowMsg","searchingG","setSearchingG","games","setGames","console","log","genreFilter","arr","str","newarr","filter","e","name","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,uBAAxC;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,MAAM,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAA1B;AACA,QAAMC,QAAQ,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,QAAhB,CAA5B;AACA,QAAMC,OAAO,GAAGZ,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACK,OAAhB,CAA3B;AACA,QAAMC,QAAQ,GAAGd,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACO,WAAhB,CAA5B,CAPmC,CAQnC;;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,KAAD,CAAlC,CAZmC,CAcnC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAM,KAAK,KAAf,EAAsB;AACpB;AACAU,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AACD,QAAIZ,MAAM,KAAK,IAAf,EAAqB;AACnBe,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EADmB,CAEnB;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAZQ,EAYN,CAACZ,MAAD,EAASD,QAAT,CAZM,CAAT;AAcAR,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACkB,OAAD,EAAUE,UAAV,CADM,CAAT,CA7BmC,CAgCnC;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFQ,EAEN,CAACT,QAAD,EAAWE,OAAX,CAFM,CAAT;;AAIA,WAASY,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AAC7B,QAAIC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAWC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBL,GAAhB,CAAhB,CAAb;AACD,GAvCkC,CAwCnC;;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,WAAW,CAACC,GAAD,EAAMC,GAAN,CAAX;AACD,GAFQ,EAEN,CAACZ,QAAD,CAFM,CAAT,CAzCmC,CA6CnC;AACA;AACA;AACA;AACA;AAEA;;AAGA,sBACE;AAAA,eACGE,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGE,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,eAGE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApEuBb,U;UAELJ,W,EAEFD,W,EACEA,W,EACDA,W,EACCA,W;;;KAPKK,U","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames } from '../../actions/actions';\n\nexport default function Pagination() {\n\n  const dispatch = useDispatch();\n\n  const origin = useSelector(state => state.searchOrig);\n  const apiGames = useSelector(state => state.apigames);\n  const dbGames = useSelector(state => state.dbgames);\n  const search_g = useSelector(state => state.searchgenre);\n  // const search_t = useSelector(state => state.stitle);\n\n  const [showMsg, setShowMsg] = useState(true);\n  const [searchingG, setSearchingG] = useState(false);\n  const [games, setGames] = useState(false);\n\n  // Según el origen busca el arreglo de juegos\n  useEffect(() => {\n    if (origin === 'api') {\n      // dispatch(getApiGames());\n      setShowMsg(false);\n      setSearchingG(true);\n    }\n    if (origin === 'db') {\n      console.log('falta cargar videojuegos en la base de datos');\n      // dispatch(getdbGames());\n      setShowMsg(false);\n      setSearchingG(true);\n    }\n  }, [origin, dispatch])\n\n  useEffect(() => {\n  }, [showMsg, searchingG])\n\n  // Una vez cargados los juegos en el store desactiva mje \"buscando\"\n  useEffect(() => {\n    setSearchingG(false);\n  }, [apiGames, dbGames])\n\n  function genreFilter(arr, str) {\n    let newarr = arr.filter(e => e.name.includes(str));\n  }\n  // Si se especifica un género para filtar llama a\n  useEffect(() => {\n    genreFilter(arr, str)\n  }, [search_g])\n\n  // traerme el arreglo\n  // traerme el género y el título a buscar\n  // hacer el filtrado\n  // mostrar de a 6\n  // \n\n  // si es api y el texto de búsqueda es '' trae 100 de la ruta local / videogames\n\n\n  return (\n    <div>\n      {showMsg && <h3> Seleccione primero el orígen de su búsqueda (API/DB)</h3>}\n      {searchingG && <h3> ...Obteniendo juegos de origen</h3>}\n      <div className=\"p_cards_area\">\n        {/* <GameCard />\n        <GameCard /> */}\n      </div>\n      <div className=\"p_btn_area\">\n        <button className=\"p_button\">Anterior</button>\n        <button className=\"p_button\">Siguiente</button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}