{"ast":null,"code":"import fetch from 'node-fetch';\nexport const SET_NG_GEN_SEL = \"SET_NG_GEN_SEL\";\nexport const SET_NG_PTF_SEL = \"SET_NG_PTF_SEL\";\nexport const SEND_FORM = \"SEND_FORM\";\nexport const SEND_SEARCH = \"SEND_SEARCH\";\nexport const SET_ORIG = \"SET_ORIG\";\nexport const SET_ORDER_OPT = \"SET_ORDER_OPT\";\nexport const SET_SEARCH_GEN = \"SET_SEARCH_GEN\";\nexport const DB_GEN_OP_SEARCH = \"DB_GEN_OP_SEARCH\";\nexport const API_GEN_OP_SEARCH = \"API_GEN_OP_SEARCH\";\nexport function saveNgGenSel(arr) {\n  return {\n    type: SET_NG_GEN_SEL,\n    payload: arr\n  };\n}\nexport function saveNgPlatfSel(arr) {\n  return {\n    type: SET_NG_PTF_SEL,\n    payload: arr\n  };\n}\nexport function sendedForm(boolean) {\n  return {\n    type: SEND_FORM,\n    payload: boolean\n  };\n}\nexport function searchOptions(obj) {\n  return {\n    type: SEND_SEARCH,\n    payload: obj\n  };\n}\nexport function setOrigOpt(str) {\n  return {\n    type: SET_ORIG,\n    payload: str\n  };\n}\nexport function setSearchGenre(str) {\n  return {\n    type: SET_SEARCH_GEN,\n    payload: str\n  };\n}\nexport function setOrderOpt(str) {\n  return {\n    type: SET_ORDER_OPT,\n    payload: str\n  };\n}\nexport function dbGenOpSearch() {\n  return {\n    type: DB_GEN_OP_SEARCH,\n    payload: ''\n  };\n}\nexport function apiGenOpSearch() {\n  function genObjFromArr(arr) {\n    let gen = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      let obj = {\n        value: arr[i].name,\n        label: arr[i].name\n      };\n      gen.push(obj);\n    }\n\n    return gen;\n  }\n\n  return function (dispatch) {\n    fetch(\"https://api.rawg.io/api/games?key=bb129cbd5b1b4968a7aec68ed0a7b91d\").then(response => {\n      // console.log(response);\n      return response.json();\n    }).then(async Jarr => {\n      let obj = await genObjFromArr(Jarr);\n      console.log(obj);\n      return obj; //<---\n    }).then(gobj => {\n      //console.log(gobj);\n      dispatch({\n        type: API_GEN_OP_SEARCH,\n        payload: gobj\n      });\n    });\n  };\n} // export function addNgGen(str) {\n//   return { type: ADD_NG_GEN, payload: str };\n// }\n// export function addNgPtf(str) {\n//   return { type: ADD_NG_PTF, payload: str };\n// }\n// Request a la API para traer las plataformas de videojuegos.\n// export function getApiPlatforms() {\n//   return function (dispatch) {\n//     return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n//       .then(response => response.json()) //aplica json y retorna\n//       .then(json => {\n//         let data = json.results;\n//         let apiPlatfs = data.map(e => e.name);\n//         return apiPlatfs;\n//       })\n//       .then(platfs => {\n//         dispatch({ type: GET_API_PLATFORMS, payload: platfs }) // lo manda al reducer\n//       });\n//   };\n// }\n// https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/actions/actions.js"],"names":["fetch","SET_NG_GEN_SEL","SET_NG_PTF_SEL","SEND_FORM","SEND_SEARCH","SET_ORIG","SET_ORDER_OPT","SET_SEARCH_GEN","DB_GEN_OP_SEARCH","API_GEN_OP_SEARCH","saveNgGenSel","arr","type","payload","saveNgPlatfSel","sendedForm","boolean","searchOptions","obj","setOrigOpt","str","setSearchGenre","setOrderOpt","dbGenOpSearch","apiGenOpSearch","genObjFromArr","gen","i","length","value","name","label","push","dispatch","then","response","json","Jarr","console","log","gobj"],"mappings":"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","sourcesContent":["import fetch from 'node-fetch';\nexport const SET_NG_GEN_SEL = \"SET_NG_GEN_SEL\";\nexport const SET_NG_PTF_SEL = \"SET_NG_PTF_SEL\";\nexport const SEND_FORM = \"SEND_FORM\";\nexport const SEND_SEARCH = \"SEND_SEARCH\";\nexport const SET_ORIG = \"SET_ORIG\";\nexport const SET_ORDER_OPT = \"SET_ORDER_OPT\";\nexport const SET_SEARCH_GEN = \"SET_SEARCH_GEN\";\nexport const DB_GEN_OP_SEARCH = \"DB_GEN_OP_SEARCH\";\nexport const API_GEN_OP_SEARCH = \"API_GEN_OP_SEARCH\";\n\nexport function saveNgGenSel(arr) {\n  return { type: SET_NG_GEN_SEL, payload: arr };\n}\n\nexport function saveNgPlatfSel(arr) {\n  return { type: SET_NG_PTF_SEL, payload: arr };\n}\n\nexport function sendedForm(boolean) {\n  return { type: SEND_FORM, payload: boolean };\n}\n\nexport function searchOptions(obj) {\n  return { type: SEND_SEARCH, payload: obj };\n}\n\nexport function setOrigOpt(str) {\n  return { type: SET_ORIG, payload: str };\n}\n\nexport function setSearchGenre(str) {\n  return { type: SET_SEARCH_GEN, payload: str };\n}\n\nexport function setOrderOpt(str) {\n  return { type: SET_ORDER_OPT, payload: str };\n}\n\nexport function dbGenOpSearch() {\n  return { type: DB_GEN_OP_SEARCH, payload: '' };\n}\n\nexport function apiGenOpSearch() {\n\t\n  function genObjFromArr(arr) {\n    let gen = [];\n    for (let i = 0; i < arr.length; i++) {\n      let obj = { value: arr[i].name, label: arr[i].name };\n      gen.push(obj);\n    }\n    return gen;\n  }\n  \n  return function (dispatch) {\n  \tfetch(\"https://api.rawg.io/api/games?key=bb129cbd5b1b4968a7aec68ed0a7b91d\")\n  \t\t.then(response => {\n       // console.log(response);\n        return response.json();\n      })\n  \t\t.then(async Jarr => {\n        let obj = await genObjFromArr(Jarr);\n        console.log(obj);\n        return obj; //<---\n      })\n  \t\t.then(gobj =>{\n\t\t    //console.log(gobj);\n\t\t    dispatch({ type: API_GEN_OP_SEARCH, payload: gobj })\n\t\t  })\n  }\n}\n\n// export function addNgGen(str) {\n//   return { type: ADD_NG_GEN, payload: str };\n// }\n\n// export function addNgPtf(str) {\n//   return { type: ADD_NG_PTF, payload: str };\n// }\n\n// Request a la API para traer las plataformas de videojuegos.\n// export function getApiPlatforms() {\n//   return function (dispatch) {\n//     return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n//       .then(response => response.json()) //aplica json y retorna\n//       .then(json => {\n//         let data = json.results;\n//         let apiPlatfs = data.map(e => e.name);\n//         return apiPlatfs;\n//       })\n//       .then(platfs => {\n//         dispatch({ type: GET_API_PLATFORMS, payload: platfs }) // lo manda al reducer\n//       });\n//   };\n// }\n\n// https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'"]},"metadata":{},"sourceType":"module"}