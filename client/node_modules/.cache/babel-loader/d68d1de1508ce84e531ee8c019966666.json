{"ast":null,"code":"export const GET_API_PLATFORMS = \"GET_API_PLATFORMS\";\nexport const GET_GENRE_OPT = \"GET_GENRE_OPT\";\nexport const SET_ngGENRE_SEL = \"GET_GENRE_OPT\"; // export const SEARCH_API_PLATFORMS = \"GET_PLATFORMS\";\n// export const SEARCH_API_GENRES = \"GET_GENRES\";\n// export const ADD_NEW_PLATFORM = \"ADD_NEW_PLATFORM\";\n// export const ADD_NEW_GENRE = \"ADD_NEW_GENRE\";\n// Request a la API para traer las películas.\n// El payload va a ser el objeto que recibamos de nuestra request.\n// Request a la API para traer las plataformas de videojuegos.\n\nexport function getApiPlatforms() {\n  return function (dispatch) {\n    return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n    .then(response => response.json()) //aplica json y retorna\n    .then(json => {\n      let data = json.results;\n      let apiPlatfs = data.map(e => e.name);\n      return apiPlatfs;\n    }).then(platfs => {\n      dispatch({\n        type: GET_API_PLATFORMS,\n        payload: platfs\n      }); // lo manda al reducer\n    });\n  };\n} // https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'\n\nexport function getDbGenres() {\n  const genreop = [];\n\n  async function buildGenObjArr() {\n    fetch(\"http://localhost:3001/genres\").then(response => response.json()).then(arr => {\n      for (let i = 0; i < arr.length; i++) {\n        let obj = {\n          value: arr[i].name,\n          label: arr[i].name\n        };\n        genreop.push(obj);\n      }\n    }).catch(error => console.log(error));\n  }\n\n  buildGenObjArr();\n  return {\n    type: GET_GENRE_OPT,\n    payload: genreop\n  };\n}","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/actions/actions.js"],"names":["GET_API_PLATFORMS","GET_GENRE_OPT","SET_ngGENRE_SEL","getApiPlatforms","dispatch","fetch","then","response","json","data","results","apiPlatfs","map","e","name","platfs","type","payload","getDbGenres","genreop","buildGenObjArr","arr","i","length","obj","value","label","push","catch","error","console","log"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,eAAxB,C,CAEP;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAO,UAAUC,QAAV,EAAoB;AACzB,WAAOC,KAAK,CAAC,mCAAD,CAAL,CAA2C;AAA3C,KACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAC8B;AAD9B,KAEJF,IAFI,CAECE,IAAI,IAAI;AACZ,UAAIC,IAAI,GAAGD,IAAI,CAACE,OAAhB;AACA,UAAIC,SAAS,GAAGF,IAAI,CAACG,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,IAAhB,CAAhB;AACA,aAAOH,SAAP;AACD,KANI,EAOJL,IAPI,CAOCS,MAAM,IAAI;AACdX,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEhB,iBAAR;AAA2BiB,QAAAA,OAAO,EAAEF;AAApC,OAAD,CAAR,CADc,CACyC;AACxD,KATI,CAAP;AAUD,GAXD;AAYD,C,CAED;AACA;AACA;;AAEA,OAAO,SAASG,WAAT,GAAuB;AAE5B,QAAMC,OAAO,GAAG,EAAhB;;AAEC,iBAAeC,cAAf,GAAgC;AAC/Bf,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQe,GAAG,IAAI;AACX,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAIE,GAAG,GAAG;AAAEC,UAAAA,KAAK,EAAEJ,GAAG,CAACC,CAAD,CAAH,CAAOR,IAAhB;AAAsBY,UAAAA,KAAK,EAAEL,GAAG,CAACC,CAAD,CAAH,CAAOR;AAApC,SAAV;AACAK,QAAAA,OAAO,CAACQ,IAAR,CAAaH,GAAb;AACD;AACF,KAPH,EAQGI,KARH,CAQSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARlB;AASD;;AAEDT,EAAAA,cAAc;AAEd,SAAO;AAAEJ,IAAAA,IAAI,EAAEf,aAAR;AAAuBgB,IAAAA,OAAO,EAAEE;AAAhC,GAAP;AACD","sourcesContent":["export const GET_API_PLATFORMS = \"GET_API_PLATFORMS\";\nexport const GET_GENRE_OPT = \"GET_GENRE_OPT\";\nexport const SET_ngGENRE_SEL = \"GET_GENRE_OPT\";\n\n// export const SEARCH_API_PLATFORMS = \"GET_PLATFORMS\";\n// export const SEARCH_API_GENRES = \"GET_GENRES\";\n// export const ADD_NEW_PLATFORM = \"ADD_NEW_PLATFORM\";\n// export const ADD_NEW_GENRE = \"ADD_NEW_GENRE\";\n\n// Request a la API para traer las películas.\n// El payload va a ser el objeto que recibamos de nuestra request.\n\n// Request a la API para traer las plataformas de videojuegos.\nexport function getApiPlatforms() {\n  return function (dispatch) {\n    return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n      .then(response => response.json()) //aplica json y retorna\n      .then(json => {\n        let data = json.results;\n        let apiPlatfs = data.map(e => e.name);\n        return apiPlatfs;\n      })\n      .then(platfs => {\n        dispatch({ type: GET_API_PLATFORMS, payload: platfs }) // lo manda al reducer\n      });\n  };\n}\n\n// https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'\n\nexport function getDbGenres() {\n\n  const genreop = [];\n\n   async function buildGenObjArr() {\n    fetch(\"http://localhost:3001/genres\")\n      .then(response => response.json())\n      .then(arr => {\n        for (let i = 0; i < arr.length; i++) {\n          let obj = { value: arr[i].name, label: arr[i].name };\n          genreop.push(obj);\n        }\n      })\n      .catch(error => console.log(error))\n  }\n\n  buildGenObjArr();\n\n  return { type: GET_GENRE_OPT, payload: genreop };\n}\n"]},"metadata":{},"sourceType":"module"}