{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch, setShowmsg } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  let dispatch = useDispatch();\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  let show = useSelector(state => state.showmsg);\n  let apig = useSelector(state => state.apigames);\n  let apigRef = useRef(apig);\n  let dbg = useSelector(state => state.dbgames);\n  let dbgRef = useRef(dbg);\n  let sgenre = useSelector(state => state.searchgenre); //let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\n\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  let gRef = useRef(games); // Según el origen manda a buscar el arreglo de juegos \n  // donde corresponda y admninistra mjes.\n\n  useEffect(() => {\n    setGames([]);\n\n    if (orig === 'API') {\n      //console.log('cargaste API');\n      // dispatch(getApiGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n\n    if (orig === 'base de datos') {\n      // dispatch(getdbGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n  }, [orig, dispatch]); // Cuando obtiene el arreglo de juegos lo guarda localmente.\n  // y administra mje-\n\n  useEffect(() => {\n    if (orig === 'API') {\n      setGettingG(false);\n      console.log(apigRef.current);\n      setGames(apigRef.current);\n    }\n\n    if (orig === 'base de datos') {\n      setGettingG(false);\n      console.log(dbgRef.current);\n      setGames(dbgRef.current);\n    }\n  }, [gettingG, orig]); //sacar gettingG y dejar apiG / dbg\n  // Si se filtra por género reduce la búsqueda.\n\n  useEffect(() => {\n    let arr = gRef.current;\n    console.log(arr);\n    let newarr = arr.filter();\n  }, [sgenre]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [show && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this), gettingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" ...Obteniendo juegos de la \", orig, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, this), inits && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_btn_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"ixOgaG/ee/E7ncV/qEUu/UlczMw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GameCard","getApiGames","getdbGames","initsearch","setShowmsg","Pagination","dispatch","inits","state","cleans","cleansearch","orig","searchOrig","show","showmsg","apig","apigames","apigRef","dbg","dbgames","dbgRef","sgenre","searchgenre","gettingG","setGettingG","games","setGames","gRef","console","log","current","arr","newarr","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect , useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch ,setShowmsg } from '../../actions/actions';\n\nexport default function Pagination() {\n\n  let dispatch = useDispatch();\n\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  let show = useSelector(state => state.showmsg);\n  let apig = useSelector(state => state.apigames);\n  let apigRef = useRef(apig);\n  let dbg = useSelector(state => state.dbgames);\n  let dbgRef = useRef(dbg);\n  let sgenre = useSelector(state => state.searchgenre);\n\n  //let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  let gRef = useRef(games);\n\n  // Según el origen manda a buscar el arreglo de juegos \n  // donde corresponda y admninistra mjes.\n  useEffect(() => {\n      setGames([]);\n      if (orig === 'API') {\n        //console.log('cargaste API');\n        // dispatch(getApiGames());  // <<-- Sacar!!\n        dispatch(setShowmsg(false));\n        setGettingG(true);\n      }\n      if (orig === 'base de datos') {\n        // dispatch(getdbGames());  // <<-- Sacar!!\n        dispatch(setShowmsg(false));\n        setGettingG(true);\n      }\n  },[orig,dispatch]);\n\n  // Cuando obtiene el arreglo de juegos lo guarda localmente.\n  // y administra mje-\n  useEffect(() => {\n    if (orig === 'API') {\n      setGettingG(false);\n      console.log(apigRef.current);\n      setGames(apigRef.current);\n    }\n    if (orig === 'base de datos') {\n      setGettingG(false);\n      console.log(dbgRef.current);\n      setGames(dbgRef.current);\n    }\n  }, [gettingG,orig]); //sacar gettingG y dejar apiG / dbg\n\n  // Si se filtra por género reduce la búsqueda.\n  useEffect(() => {\n    let arr = gRef.current;\n    console.log(arr);\n    let newarr = arr.filter()\n  },[sgenre])\n\n\n  return (\n    <div>\n      {show && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {gettingG && <h3> ...Obteniendo juegos de la {orig}.</h3>}\n      {inits && <>\n        <div className=\"p_cards_area\">\n          <GameCard />\n          <GameCard />\n        </div>\n        <div className=\"p_btn_area\">\n          <button className=\"p_button\">Anterior</button>\n          <button className=\"p_button\">Siguiente</button>\n        </div>\n      </>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}