{"ast":null,"code":"const genres = [];\n\nasync function buildGenObjArr() {\n  fetch(\"http://localhost:3001/genres\").then(response => response.json()) //aplica json y retorna\n  .then(json => {\n    let data = json.results;\n\n    for (let i = 0; i < data.length; i++) {\n      //plataformas.push(data[i].name)\n      let obj = {\n        value: data[i].name,\n        label: data[i].name\n      };\n      genres.push(obj);\n    }\n  }).catch(error => console.log(error)); //return genres;\n}\n\nawait buildGenObjArr();\nconsole.log(genres);\nexport default genresopt; // function getPlatforms() {\n//   fetch(\"https://api.rawg.io/api/genres\") //url de api con plataformas\n//     .then(response => response.json()) //aplica json y retorna\n//     .then(json => {\n//       let data = json.results;\n//       for (let i = 0; i < data.length; i++) {\n//         //plataformas.push(data[i].name)\n//         let obj = { value: data[i].name, label: data[i].name };\n//         genres.push(obj);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//   return genres;\n// }\n// let genresopt = getPlatforms();\n// //console.log(genresopt);\n// export default genresopt;\n// export const genresopt = [\n//   { value: \"Action\", label: \"Action\" },\n//   { value: \"Indie\", label: \"Indie\" },\n//   { value: \"Adventure\", label: \"Adventure\" },\n//   { value: \"RPG\", label: \"RPG\" },\n//   { value: \"Strategy\", label: \"Strategy\" },\n//   { value: \"Shooter\", label: \"Shooter\" },\n//   { value: \"Casual\", label: \"Casual\" },\n//   { value: \"Simulation\", label: \"Simulation\" },\n//   { value: \"Puzzle\", label: \"Puzzle\" },\n//   { value: \"Arcade\", label: \"Arcade\" },\n//   { value: \"Platformer\", label: \"Platformer\" },\n//   { value: \"Racing\", label: \"Racing\" },\n//   { value: \"Sports\", label: \"Sports\" },\n//   { value: \"Massively Multiplayer\", label: \"Massively Multiplayer\" },\n//   { value: \"Fighting\", label: \"Fighting\" },\n//   { value: \"Family\", label: \"Family\" },\n//   { value: \"Board Games\", label: \"Board Games\" },\n//   { value: \"Educational\", label: \"Educational\" },\n//   { value: \"Card\", label: \"Card\" }\n// ]\n// export default genresopt;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Genres/Genres.js"],"names":["genres","buildGenObjArr","fetch","then","response","json","data","results","i","length","obj","value","name","label","push","catch","error","console","log","genresopt"],"mappings":"AAAA,MAAMA,MAAM,GAAG,EAAf;;AAEA,eAAeC,cAAf,GAAgC;AAC9BC,EAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EACqC;AADrC,GAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ,QAAIC,IAAI,GAAGD,IAAI,CAACE,OAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC;AACA,UAAIE,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAEL,IAAI,CAACE,CAAD,CAAJ,CAAQI,IAAjB;AAAuBC,QAAAA,KAAK,EAAEP,IAAI,CAACE,CAAD,CAAJ,CAAQI;AAAtC,OAAV;AACAZ,MAAAA,MAAM,CAACc,IAAP,CAAYJ,GAAZ;AACD;AACF,GATH,EAUGK,KAVH,CAUSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVlB,EAD8B,CAY9B;AACD;;AAED,MAAMf,cAAc,EAApB;AACAgB,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AAEA,eAAemB,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["const genres = [];\n\nasync function buildGenObjArr() {\n  fetch(\"http://localhost:3001/genres\") \n    .then(response => response.json()) //aplica json y retorna\n    .then(json => {\n      let data = json.results;\n      for (let i = 0; i < data.length; i++) {\n        //plataformas.push(data[i].name)\n        let obj = { value: data[i].name, label: data[i].name };\n        genres.push(obj);\n      }\n    })\n    .catch(error => console.log(error))\n  //return genres;\n}\n\nawait buildGenObjArr();\nconsole.log(genres);\n\nexport default genresopt;\n\n// function getPlatforms() {\n//   fetch(\"https://api.rawg.io/api/genres\") //url de api con plataformas\n//     .then(response => response.json()) //aplica json y retorna\n//     .then(json => {\n//       let data = json.results;\n//       for (let i = 0; i < data.length; i++) {\n//         //plataformas.push(data[i].name)\n//         let obj = { value: data[i].name, label: data[i].name };\n//         genres.push(obj);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//   return genres;\n// }\n\n// let genresopt = getPlatforms();\n// //console.log(genresopt);\n\n// export default genresopt;\n\n// export const genresopt = [\n//   { value: \"Action\", label: \"Action\" },\n//   { value: \"Indie\", label: \"Indie\" },\n//   { value: \"Adventure\", label: \"Adventure\" },\n//   { value: \"RPG\", label: \"RPG\" },\n//   { value: \"Strategy\", label: \"Strategy\" },\n//   { value: \"Shooter\", label: \"Shooter\" },\n//   { value: \"Casual\", label: \"Casual\" },\n//   { value: \"Simulation\", label: \"Simulation\" },\n//   { value: \"Puzzle\", label: \"Puzzle\" },\n//   { value: \"Arcade\", label: \"Arcade\" },\n//   { value: \"Platformer\", label: \"Platformer\" },\n//   { value: \"Racing\", label: \"Racing\" },\n//   { value: \"Sports\", label: \"Sports\" },\n//   { value: \"Massively Multiplayer\", label: \"Massively Multiplayer\" },\n//   { value: \"Fighting\", label: \"Fighting\" },\n//   { value: \"Family\", label: \"Family\" },\n//   { value: \"Board Games\", label: \"Board Games\" },\n//   { value: \"Educational\", label: \"Educational\" },\n//   { value: \"Card\", label: \"Card\" }\n// ]\n\n// export default genresopt;\n"]},"metadata":{},"sourceType":"module"}