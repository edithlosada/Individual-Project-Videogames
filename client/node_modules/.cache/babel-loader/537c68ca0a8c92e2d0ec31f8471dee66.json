{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch, setShowmsg } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  let dispatch = useDispatch();\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  let show = useSelector(state => state.showmsg);\n  let apig = useSelector(state => state.apigames);\n  let apigRef = useRef(apig); //---\n\n  let dbg = useSelector(state => state.dbgames);\n  let dbgRef = useRef(dbg); //---\n\n  let sgenre = useSelector(state => state.searchgenre);\n  let st = useSelector(state => state.stitle);\n  let stRef = useRef(st); //---\n  //let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\n\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  let gRef = useRef(games); //---\n\n  let [genFiltGames, setGenFiltGames] = useState(null);\n  let gfgRef = useRef(genFiltGames); //---\n\n  let [titFiltGames, setTitFiltGames] = useState(null);\n  let tfgRef = useRef(titFiltGames); //---\n  // Según el origen manda a buscar el arreglo de juegos \n  // donde corresponda y admninistra mjes.\n\n  useEffect(() => {\n    setGames([]);\n\n    if (orig === 'API') {\n      //console.log('cargaste API');\n      // dispatch(getApiGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n\n    if (orig === 'base de datos') {\n      // dispatch(getdbGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n  }, [orig, dispatch]); // Cuando obtiene el arreglo de juegos lo guarda localmente.\n  // y administra mje-\n\n  useEffect(() => {\n    if (orig === 'API') {\n      setGettingG(false);\n      console.log(apigRef.current);\n      setGames(apigRef.current);\n    }\n\n    if (orig === 'base de datos') {\n      setGettingG(false);\n      console.log(dbgRef.current);\n      setGames(dbgRef.current);\n    }\n  }, [gettingG, orig]); //sacar gettingG y dejar apiG / dbg\n  // Si se filtra por género reduce la búsqueda y guarda lo obtenido\n  // en el estado genFiltGames.\n\n  useEffect(() => {\n    let newarr = games.filter(e => e.genres.includes(sgenre));\n    setGenFiltGames(newarr);\n    setTitFiltGames(null); // Si cambio el género que quite cualquier selección previa guardada por título.\n\n    dispatch(initsearch(false)); // Cancela cualquier búsqueda anterior para poder escribir.\n    // console.log('cleans,'+cleans+', inits,' +inits)\n  }, [sgenre, games, dispatch]);\n  useEffect(() => {\n    console.log(genFiltGames);\n  }, [genFiltGames]); // Cuando presiona \"buscar\" filtra lo que ya tenía según el título\n\n  useEffect(() => {\n    if (inits) {\n      // Si presionó/está en buscar\n      if (!st) {\n        console.log('no había texto de búsqueda');\n      }\n\n      if (!st) {\n        console.log('no había texto de búsqueda');\n      }\n\n      let arr = games;\n\n      if (genFiltGames) {\n        console.log(genFiltGames);\n        arr = genFiltGames; // si filtró x género usa eso sinó el original con todos\n      }\n\n      console.log('search title is' + st);\n      let newarr = arr.filter(e => e.name.includes(st)); // console.log(newarr);\n\n      setTitFiltGames(newarr);\n    }\n  }, [inits, st, genFiltGames]);\n  useEffect(() => {\n    console.log(titFiltGames);\n  }, [titFiltGames]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [show && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this), gettingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" ...Obteniendo juegos de la \", orig, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 20\n    }, this), inits && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_btn_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"Y3Y9NFpAdAPvBn0pL0qH6reS7J4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GameCard","getApiGames","getdbGames","initsearch","setShowmsg","Pagination","dispatch","inits","state","cleans","cleansearch","orig","searchOrig","show","showmsg","apig","apigames","apigRef","dbg","dbgames","dbgRef","sgenre","searchgenre","st","stitle","stRef","gettingG","setGettingG","games","setGames","gRef","genFiltGames","setGenFiltGames","gfgRef","titFiltGames","setTitFiltGames","tfgRef","console","log","current","newarr","filter","e","genres","includes","arr","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch, setShowmsg } from '../../actions/actions';\n\nexport default function Pagination() {\n\n  let dispatch = useDispatch();\n\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  let show = useSelector(state => state.showmsg);\n  let apig = useSelector(state => state.apigames);\n  let apigRef = useRef(apig); //---\n  let dbg = useSelector(state => state.dbgames);\n  let dbgRef = useRef(dbg); //---\n  let sgenre = useSelector(state => state.searchgenre);\n  let st = useSelector(state => state.stitle);\n  let stRef = useRef(st); //---\n\n  //let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  let gRef = useRef(games); //---\n  let [genFiltGames, setGenFiltGames] = useState(null);\n  let gfgRef = useRef(genFiltGames); //---\n  let [titFiltGames, setTitFiltGames] = useState(null);\n  let tfgRef = useRef(titFiltGames); //---\n\n  // Según el origen manda a buscar el arreglo de juegos \n  // donde corresponda y admninistra mjes.\n  useEffect(() => {\n    setGames([]);\n    if (orig === 'API') {\n      //console.log('cargaste API');\n      // dispatch(getApiGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n    if (orig === 'base de datos') {\n      // dispatch(getdbGames());  // <<-- Sacar!!\n      dispatch(setShowmsg(false));\n      setGettingG(true);\n    }\n  }, [orig, dispatch]);\n\n  // Cuando obtiene el arreglo de juegos lo guarda localmente.\n  // y administra mje-\n  useEffect(() => {\n    if (orig === 'API') {\n      setGettingG(false);\n      console.log(apigRef.current);\n      setGames(apigRef.current);\n    }\n    if (orig === 'base de datos') {\n      setGettingG(false);\n      console.log(dbgRef.current);\n      setGames(dbgRef.current);\n    }\n  }, [gettingG, orig]); //sacar gettingG y dejar apiG / dbg\n\n  // Si se filtra por género reduce la búsqueda y guarda lo obtenido\n  // en el estado genFiltGames.\n  useEffect(() => {\n    let newarr = games.filter(e => e.genres.includes(sgenre));\n    setGenFiltGames(newarr);\n    setTitFiltGames(null); // Si cambio el género que quite cualquier selección previa guardada por título.\n    dispatch(initsearch(false)); // Cancela cualquier búsqueda anterior para poder escribir.\n    // console.log('cleans,'+cleans+', inits,' +inits)\n  }, [sgenre, games, dispatch])\n\n  useEffect(() => {\n    console.log(genFiltGames);\n  }, [genFiltGames])\n\n  // Cuando presiona \"buscar\" filtra lo que ya tenía según el título\n\n  useEffect(() => {\n    if (inits) { // Si presionó/está en buscar\n      if(!st) {\n        console.log('no había texto de búsqueda');\n      }\n      if(!st) {\n        console.log('no había texto de búsqueda');\n      }\n\n\n\n\n      let arr = games;\n      if (genFiltGames) {\n        console.log(genFiltGames);\n        arr = genFiltGames; // si filtró x género usa eso sinó el original con todos\n      }\n      console.log('search title is'+ st);\n      let newarr = arr.filter(e => e.name.includes(st));\n      // console.log(newarr);\n      setTitFiltGames(newarr);\n    }\n  }, [inits,st,genFiltGames])\n\n  useEffect(() => {\n    console.log(titFiltGames);\n  }, [titFiltGames])\n\n\n\n  return (\n    <div>\n      {show && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {gettingG && <h3> ...Obteniendo juegos de la {orig}.</h3>}\n      {inits && <>\n        <div className=\"p_cards_area\">\n          <GameCard />\n          <GameCard />\n        </div>\n        <div className=\"p_btn_area\">\n          <button className=\"p_button\">Anterior</button>\n          <button className=\"p_button\">Siguiente</button>\n        </div>\n      </>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}