{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch, showmsg } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  let dispatch = useDispatch();\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  let show = useSelector(state => state.searchOrig);\n  let apig = useSelector(state => state.apigames);\n  let apigRef = useRef(apig);\n  let dbg = useSelector(state => state.dbgames);\n  let dbgRef = useRef(dbg);\n  let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\n\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  useEffect(() => {\n    // Según el origen busca el arreglo de juegos\n    setGames([]);\n\n    if (orig === 'API') {\n      console.log('cargaste API'); // dispatch(getApiGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n\n    if (orig === 'base de datos') {\n      console.log('falta cargar videojuegos en la base de datos'); // dispatch(getdbGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n  }, [orig]); //, dispatch])\n\n  useEffect(() => {\n    if (orig === 'API') {\n      setGettingG(false);\n      console.log(apigRef.current);\n      setGames(apigRef.current);\n    }\n\n    if (orig === 'base de datos') {\n      setGettingG(false);\n      console.log(dbgRef.current);\n      setGames(dbgRef.current);\n    }\n  }, [gettingG, orig]); //sacar gettingG y dejar apiG\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showMsg && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), gettingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" ...Obteniendo juegos de la \", orig, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this), inits && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_btn_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"jeXxypUyWVq1sSf7bMoDriqURFk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GameCard","getApiGames","getdbGames","initsearch","showmsg","Pagination","dispatch","inits","state","cleans","cleansearch","orig","searchOrig","show","apig","apigames","apigRef","dbg","dbgames","dbgRef","showMsg","setShowMsg","gettingG","setGettingG","games","setGames","console","log","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,EAA8CC,OAA9C,QAA6D,uBAA7D;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,MAAIC,QAAQ,GAAGP,WAAW,EAA1B;AAEA,MAAIQ,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACL,UAAhB,CAAvB;AACA,MAAIM,MAAM,GAAGX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAAxB;AACA,MAAIC,IAAI,GAAGb,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACI,UAAhB,CAAtB;AACA,MAAIC,IAAI,GAAGf,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACI,UAAhB,CAAtB;AACA,MAAIE,IAAI,GAAGhB,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACO,QAAhB,CAAtB;AACA,MAAIC,OAAO,GAAGnB,MAAM,CAACiB,IAAD,CAApB;AACA,MAAIG,GAAG,GAAGnB,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACU,OAAhB,CAArB;AACA,MAAIC,MAAM,GAAGtB,MAAM,CAACoB,GAAD,CAAnB;AAEA,MAAI,CAACG,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,IAAD,CAApC,CAbmC,CAaS;;AAC5C,MAAI,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA6B,IAAAA,QAAQ,CAAC,EAAD,CAAR;;AACA,QAAId,IAAI,KAAK,KAAb,EAAoB;AAClBe,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADkB,CAElB;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,QAAIZ,IAAI,KAAK,eAAb,EAA8B;AAC5Be,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAD4B,CAE5B;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACJ,GAfQ,EAeP,CAACZ,IAAD,CAfO,CAAT,CAjBmC,CAgCzB;;AAEVf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,IAAI,KAAK,KAAb,EAAoB;AAClBY,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACY,OAApB;AACAH,MAAAA,QAAQ,CAACT,OAAO,CAACY,OAAT,CAAR;AACD;;AACD,QAAIjB,IAAI,KAAK,eAAb,EAA8B;AAC5BY,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,OAAnB;AACAH,MAAAA,QAAQ,CAACN,MAAM,CAACS,OAAR,CAAR;AACD;AACF,GAXQ,EAWN,CAACN,QAAD,EAAUX,IAAV,CAXM,CAAT,CAlCmC,CA6Cd;;AAErB,sBACE;AAAA,eACGS,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGE,QAAQ,iBAAI;AAAA,iDAAiCX,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFf,EAGGJ,KAAK,iBAAI;AAAA,8BACR;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,eAKR;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALQ;AAAA,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/DuBF,U;UAEPN,W,EAEHD,W,EACCA,W,EACFA,W,EACAA,W,EACAA,W,EAEDA,W;;;KAVYO,U","sourcesContent":["import React, { useState, useEffect , useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch ,showmsg } from '../../actions/actions';\n\nexport default function Pagination() {\n\n  let dispatch = useDispatch();\n\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  let show = useSelector(state => state.searchOrig);\n  let apig = useSelector(state => state.apigames);\n  let apigRef = useRef(apig);\n  let dbg = useSelector(state => state.dbgames);\n  let dbgRef = useRef(dbg);\n\n  let [showMsg, setShowMsg] = useState(true); //showmsg setShowmsg\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n\n  useEffect(() => {\n      // Según el origen busca el arreglo de juegos\n      setGames([]);\n      if (orig === 'API') {\n        console.log('cargaste API');\n        // dispatch(getApiGames());\n        setShowMsg(false);\n        setGettingG(true);\n      }\n      if (orig === 'base de datos') {\n        console.log('falta cargar videojuegos en la base de datos');\n        // dispatch(getdbGames());\n        setShowMsg(false);\n        setGettingG(true);\n      }\n  },[orig] )//, dispatch])\n\n  useEffect(() => {\n    if (orig === 'API') {\n      setGettingG(false);\n      console.log(apigRef.current);\n      setGames(apigRef.current);\n    }\n    if (orig === 'base de datos') {\n      setGettingG(false);\n      console.log(dbgRef.current);\n      setGames(dbgRef.current);\n    }\n  }, [gettingG,orig]); //sacar gettingG y dejar apiG\n\n  return (\n    <div>\n      {showMsg && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {gettingG && <h3> ...Obteniendo juegos de la {orig}.</h3>}\n      {inits && <>\n        <div className=\"p_cards_area\">\n          <GameCard />\n          <GameCard />\n        </div>\n        <div className=\"p_btn_area\">\n          <button className=\"p_button\">Anterior</button>\n          <button className=\"p_button\">Siguiente</button>\n        </div>\n      </>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}