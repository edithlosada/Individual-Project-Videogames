{"ast":null,"code":"import _toConsumableArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';// import { useDispatch } from 'react-redux';\n// import { useSelector } from 'react-redux';\nimport'./MultiSelectGenre.css';import store from'../../store/index';//import genresopt from '../Genres/Genres';\nimport{getDbGenres}from'../../actions/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var fetch=require('node-fetch');//<--\nexport default function MultiSelectGenre(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),genreopt=_useState2[0],setGenreopt=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],setShow=_useState4[1];function getGenreAsync(){return _getGenreAsync.apply(this,arguments);}function _getGenreAsync(){_getGenreAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:3001/genres\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;return _context.abrupt(\"return\",data);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getGenreAsync.apply(this,arguments);}useEffect(function(){getGenreAsync().then(function(arr){console.log(arr);setGenreopt(arr);return genreopt;}).then(function(generos){console.log(generos);});// .then(() => {\n//   console.log(genreopt);\n// })\n},[]);// const generos = [];\n// for (let i = 0; i < arr.length; i++) {\n//   let obj = { value: arr[i].name, label: arr[i].name };\n//   generos.push(obj);\n// }\n// useEffect(() => {\n//   const generos = [];\n//   fetch(\"http://localhost:3001/genres\")\n//       .then(response => {\n//         return response.json()\n//       })\n//       .then(json => {\n//         console.log(json);\n//         return \n//       })\n//       // .then( arr => {\n//       //   console.log(arr);\n//       //   for (let i = 0; i < arr.length; i++) {\n//       //     let obj = { value: arr[i].name, label: arr[i].name };\n//       //     generos.push(obj);\n//       //   }\n//       //   //console.log(generos);\n//       //   return generos;\n//       // })\n//       // .then( generos => {\n//       //   // console.log(generos);\n//       //   setGenreopt(generos)\n//       // })\n//       // .then( () => setShow(true))\n// }, [])\n// // const state = useSelector(state => state.genreopt);\n// // console.log(state);\n//   // (1) Cuando cargue el componente que despache la acción \n//   // que busca los géneros.\n//   useEffect(() => {\n//     console.log('(1) se cargó la página');\n//     store.dispatch(getDbGenres());\n//   }, []);\n//   const [genreop, setGenreop] = useState([]);\n//   let [show, setShow] = useState(false);\n//   //(2) Cuando cargó los géneros en (1) que cambie el estado \"show\" a true\n//   useEffect(() => {\n//     console.log('(2) El store se cargó');\n//     const genres = store.getState().genreopt;\n//     //console.log(genres);\n//     setGenreop(genres);\n//     //console.log(genreop);\n//   }, [store.getState().genreopt]).then(()=>      console.log('(3) Se trajo el arreglo'))\n//   //console.log(genres);\n//   useEffect(() => {\n//     console.log('(3) Se trajo el arreglo');\n//     console.log(genreop);\n//     setShow(true);\n//   }, [genreop])\n//console.log('(2)cambió show a true, loading='+store.getState().loading);\n// const genres = useSelector(state => state.genreopt);\n// console.log(genres);\n// useEffect(() => {\n//   console.log(genreop);\n//   setShow(true);\n// }, [show,genreop])\nconsole.log(show);// Estado de géneros seleccionados\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),sgenres=_useState6[0],setSgenres=_useState6[1];// selected genres\nfunction removeItem(item){var newItems=sgenres.filter(function(e){return e!==item;});setSgenres(newItems);}function handleChange(_x){return _handleChange.apply(this,arguments);}function _handleChange(){_handleChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var itemP,hasItem;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:itemP=e.target.value;hasItem=sgenres.includes(itemP);if(!hasItem){setSgenres([].concat(_toConsumableArray(sgenres),[itemP]));}else{removeItem(itemP);}case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _handleChange.apply(this,arguments);}function handleClick(e){var itm=e.target.value;removeItem(itm);}useEffect(function(){},[sgenres]);return/*#__PURE__*/_jsx(\"div\",{className:\"selgenfom\",children:!show?'no muestra':/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"select\",{name:\"genres\",placeholder:\"Plataformas...\",className:\"multselectgen\",value:'',onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{defaultValue:true,children:\"G\\xE9neros:\"}),genreopt&&genreopt.map(function(item,index){return/*#__PURE__*/_jsx(\"option\",{value:item.value,children:item.label},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"gencont\",children:sgenres.map(function(item,index){return/*#__PURE__*/_jsx(\"button\",{className:\"selgenbtn\",value:item,onClick:handleClick,children:item},index);})})]})});}","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx"],"names":["React","useState","useEffect","store","getDbGenres","fetch","require","MultiSelectGenre","genreopt","setGenreopt","show","setShow","getGenreAsync","response","json","data","then","arr","console","log","generos","sgenres","setSgenres","removeItem","item","newItems","filter","e","handleChange","itemP","target","value","hasItem","includes","handleClick","itm","map","index","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index';\n//import genresopt from '../Genres/Genres';\nimport { getDbGenres } from '../../actions/actions';\nconst fetch = require('node-fetch');//<--\n\nexport default function MultiSelectGenre() {\n\n\n  const [genreopt, setGenreopt] = useState([]);\n\n  let [show, setShow] = useState(false);\n\n  async function getGenreAsync() {\n    let response = await fetch(\"http://localhost:3001/genres\");\n    let data = await response.json()\n    return data;\n  }\n\n  useEffect(() => {\n    getGenreAsync()\n      .then(arr => {\n        console.log(arr);\n        setGenreopt(arr);\n        return genreopt;\n      })\n      .then(generos => {\n        console.log(generos);\n      })\n      // .then(() => {\n      //   console.log(genreopt);\n      // })\n    },[])\n    \n    // const generos = [];\n    // for (let i = 0; i < arr.length; i++) {\n    //   let obj = { value: arr[i].name, label: arr[i].name };\n    //   generos.push(obj);\n    // }\n    \n  \n\n  // useEffect(() => {\n  //   const generos = [];\n  //   fetch(\"http://localhost:3001/genres\")\n  //       .then(response => {\n  //         return response.json()\n  //       })\n  //       .then(json => {\n  //         console.log(json);\n  //         return \n  //       })\n  //       // .then( arr => {\n  //       //   console.log(arr);\n  //       //   for (let i = 0; i < arr.length; i++) {\n  //       //     let obj = { value: arr[i].name, label: arr[i].name };\n  //       //     generos.push(obj);\n  //       //   }\n  //       //   //console.log(generos);\n  //       //   return generos;\n  //       // })\n  //       // .then( generos => {\n  //       //   // console.log(generos);\n  //       //   setGenreopt(generos)\n  //       // })\n  //       // .then( () => setShow(true))\n  // }, [])\n\n\n  // // const state = useSelector(state => state.genreopt);\n  // // console.log(state);\n\n  //   // (1) Cuando cargue el componente que despache la acción \n  //   // que busca los géneros.\n  //   useEffect(() => {\n  //     console.log('(1) se cargó la página');\n  //     store.dispatch(getDbGenres());\n  //   }, []);\n\n  //   const [genreop, setGenreop] = useState([]);\n\n  //   let [show, setShow] = useState(false);\n\n  //   //(2) Cuando cargó los géneros en (1) que cambie el estado \"show\" a true\n  //   useEffect(() => {\n  //     console.log('(2) El store se cargó');\n  //     const genres = store.getState().genreopt;\n  //     //console.log(genres);\n  //     setGenreop(genres);\n  //     //console.log(genreop);\n  //   }, [store.getState().genreopt]).then(()=>      console.log('(3) Se trajo el arreglo'))\n\n  //   //console.log(genres);\n\n  //   useEffect(() => {\n  //     console.log('(3) Se trajo el arreglo');\n  //     console.log(genreop);\n  //     setShow(true);\n  //   }, [genreop])\n\n  //console.log('(2)cambió show a true, loading='+store.getState().loading);\n\n  // const genres = useSelector(state => state.genreopt);\n  // console.log(genres);\n\n\n  // useEffect(() => {\n  //   console.log(genreop);\n  //   setShow(true);\n  // }, [show,genreop])\n\n  console.log(show);\n\n\n  // Estado de géneros seleccionados\n  let [sgenres, setSgenres] = useState([]);// selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {\n  }, [sgenres]);\n\n  return (\n    <div className=\"selgenfom\">\n      {!show ? 'no muestra' :\n        <>\n          <select\n            name=\"genres\"\n            placeholder=\"Plataformas...\"\n            className=\"multselectgen\"\n            value={''}\n            onChange={handleChange}\n          >\n            <option defaultValue>Géneros:</option>\n            {genreopt && genreopt.map((item, index) => (\n              <option key={index} value={item.value}>{item.label}</option>\n            ))}\n          </select>\n          <div className=\"gencont\">\n            {sgenres.map((item, index) => (\n              <button className=\"selgenbtn\" value={item}\n                onClick={handleClick} key={index}>\n                {item}\n              </button>\n            ))}\n          </div>\n        </>\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}