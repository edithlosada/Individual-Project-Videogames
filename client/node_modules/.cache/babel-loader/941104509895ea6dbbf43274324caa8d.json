{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/NewPlatforms/NewPlatforms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './NewPlatforms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPlatforms() {\n  _s();\n\n  const dispatch = useDispatch();\n  let [newgenre, setNewgenre] = useState('');\n  let [newgenres, setNewgenres] = useState([]);\n  const sended = useSelector(state => state.sended); //Cuando se envió el formulario limpia TransformStreamDefaultController.\n\n  useEffect(() => {\n    if (sended) {\n      setNewgenres([]);\n      setNewgenre('');\n    }\n  }, [sended]);\n\n  function handleChange(e) {\n    console.log(e.target.value);\n    setNewgenre(e.target.value);\n  }\n\n  function handleClickPlus(e) {\n    setNewgenres([...newgenres, newgenre]); //ojo\n\n    setNewgenre('');\n  } // Quita género de la selección\n\n\n  function removeItem(item) {\n    let newItems = newgenres.filter(e => e !== item);\n    setNewgenres(newItems);\n  } // Cuando hace click en el botón lo saca\n\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nggenfom\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input_name\",\n        type: \"text\",\n        className: \"angforminput\",\n        value: newgenre,\n        name: \"newgenre\",\n        placeholder: \"Nuevo g\\xE9nero\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: handleClickPlus,\n        value: '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ngencont\",\n        children: newgenres && newgenres.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"selgenbtn\",\n          value: item,\n          onClick: handleClick,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n} // let [newplatforms, setNewplatforms] = useState(''); //OJO!!! []\n//   <input\n//     id=\"input_name\"\n//     type=\"text\"\n//     className=\"anpforminput\"\n//     value={newplatforms}\n//     name='newplatforms'\n//     placeholder=\"Nuevas plataformas (separadas por coma)...\"\n//     onChange={handleChange}>\n//   </input>\n// )\n\n_s(NewPlatforms, \"cc72WynbVS6B4ncuP79ssLVMhhg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewPlatforms;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlatforms\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/NewPlatforms/NewPlatforms.jsx"],"names":["React","useState","useSelector","useDispatch","NewPlatforms","dispatch","newgenre","setNewgenre","newgenres","setNewgenres","sended","state","useEffect","handleChange","e","console","log","target","value","handleClickPlus","removeItem","item","newItems","filter","handleClick","itm","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,oBAAP;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,MAAI,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMS,MAAM,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B,CANqC,CAQrC;;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGF,MAAH,EAAU;AACRD,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GALQ,EAKN,CAACG,MAAD,CALM,CAAT;;AAOA,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAX,IAAAA,WAAW,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX;AACD;;AAED,WAASC,eAAT,CAAyBL,CAAzB,EAA4B;AAC1BL,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeF,QAAf,CAAD,CAAZ,CAD0B,CACa;;AACvCC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAxBoC,CA0BrC;;;AACA,WAASa,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAIC,QAAQ,GAAGd,SAAS,CAACe,MAAV,CAAiBT,CAAC,IAAIA,CAAC,KAAKO,IAA5B,CAAf;AACAZ,IAAAA,YAAY,CAACa,QAAD,CAAZ;AACD,GA9BoC,CAgCrC;;;AACA,WAASE,WAAT,CAAqBV,CAArB,EAAwB;AACtB,QAAIW,GAAG,GAAGX,CAAC,CAACG,MAAF,CAASC,KAAnB;AACAE,IAAAA,UAAU,CAACK,GAAD,CAAV;AACD;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,KAAK,EAAEnB,QAJT;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,WAAW,EAAC,iBANd;AAOE,QAAA,QAAQ,EAAEO;AAPZ;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEM,eAA9B;AAA+C,QAAA,KAAK,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGX,SAAS,IAAIA,SAAS,CAACkB,GAAV,CAAc,CAACL,IAAD,EAAOM,KAAP,kBAC1B;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,KAAK,EAAEN,IAArC;AACE,UAAA,OAAO,EAAEG,WADX;AAAA,oBAEGH;AAFH,WAC6BM,KAD7B;AAAA;AAAA;AAAA;AAAA,gBADY;AADhB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBC,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA1EsBvB,Y;UACLD,W,EAKFD,W;;;KANOE,Y","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './NewPlatforms.css';\n\nexport default function NewPlatforms() {\n  const dispatch = useDispatch();\n\n  let [newgenre, setNewgenre] = useState('');\n  let [newgenres, setNewgenres] = useState([]);\n\n  const sended = useSelector(state => state.sended);\n\n  //Cuando se envió el formulario limpia TransformStreamDefaultController.\n  useEffect(() => {\n    if(sended){\n      setNewgenres([]);\n      setNewgenre('');\n    }\n  }, [sended]);\n\n  function handleChange(e) {\n    console.log(e.target.value)\n    setNewgenre(e.target.value);\n  }\n\n  function handleClickPlus(e) {\n    setNewgenres([...newgenres, newgenre]);//ojo\n    setNewgenre('');\n  }\n\n  // Quita género de la selección\n  function removeItem(item) {\n    let newItems = newgenres.filter(e => e !== item);\n    setNewgenres(newItems);\n  }\n\n  // Cuando hace click en el botón lo saca\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  return (\n    <div >\n      <div className=\"nggenfom\">\n        <input\n          id=\"input_name\"\n          type=\"text\"\n          className=\"angforminput\"\n          value={newgenre}\n          name='newgenre'\n          placeholder=\"Nuevo género\"\n          onChange={handleChange}>\n        </input>\n        <input type=\"button\" onClick={handleClickPlus} value={'+'} />\n        <div className=\"ngencont\">\n          {newgenres && newgenres.map((item, index) => (\n            <button className=\"selgenbtn\" value={item}\n              onClick={handleClick} key={index}>\n              {item}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n  }\n  \n  // let [newplatforms, setNewplatforms] = useState(''); //OJO!!! []\n  //   <input\n  //     id=\"input_name\"\n  //     type=\"text\"\n  //     className=\"anpforminput\"\n  //     value={newplatforms}\n  //     name='newplatforms'\n  //     placeholder=\"Nuevas plataformas (separadas por coma)...\"\n  //     onChange={handleChange}>\n  //   </input>\n  // )"]},"metadata":{},"sourceType":"module"}