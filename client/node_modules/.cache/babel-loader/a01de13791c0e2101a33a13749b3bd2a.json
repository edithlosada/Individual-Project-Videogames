{"ast":null,"code":"import { SET_NG_GEN_SEL, SET_NG_PTF_SEL, SEND_FORM, SEND_SEARCH, SET_ORIG, SET_ORDER_OPT, SET_SEARCH_GEN } from '../actions/actions';\nconst initialState = {\n  //------New game------\n  nggensel: [],\n  ngplatfsel: [],\n  sended: false,\n  //-----Search game----\n  searchOps: {},\n  // Opciones de búsqueda de juegos\n  searchOrig: 'db',\n  ordering: '',\n  searchgenre: ''\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_NG_GEN_SEL:\n      return { ...state,\n        nggensel: action.payload\n      };\n\n    case SET_NG_PTF_SEL:\n      return { ...state,\n        ngplatfsel: action.payload\n      };\n\n    case SEND_FORM:\n      return { ...state,\n        sended: action.payload\n      };\n\n    case SEND_SEARCH:\n      return { ...state,\n        searchOps: action.payload\n      };\n\n    case SET_ORIG:\n      return { ...state,\n        searchOrig: action.payload\n      };\n\n    case SET_SEARCH_GEN:\n      return { ...state,\n        searchgenre: action.payload\n      };\n\n    case SET_ORDER_OPT:\n      return { ...state,\n        ordering: action.payload\n      };\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default reducer;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/reducers/reducers.js"],"names":["SET_NG_GEN_SEL","SET_NG_PTF_SEL","SEND_FORM","SEND_SEARCH","SET_ORIG","SET_ORDER_OPT","SET_SEARCH_GEN","initialState","nggensel","ngplatfsel","sended","searchOps","searchOrig","ordering","searchgenre","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,EAAyCC,SAAzC,EAAoDC,WAApD,EAAiEC,QAAjE,EAA2EC,aAA3E,EAA0FC,cAA1F,QAAgH,oBAAhH;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,MAAM,EAAE,KAJW;AAKnB;AACAC,EAAAA,SAAS,EAAE,EANQ;AAML;AACdC,EAAAA,UAAU,EAAE,IAPO;AAQnBC,EAAAA,QAAQ,EAAE,EARS;AASnBC,EAAAA,WAAW,EAAE;AATM,CAArB;;AAYA,SAASC,OAAT,CAAiBC,KAAK,GAAGT,YAAzB,EAAuCU,MAAvC,EAA+C;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,cAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELR,QAAAA,QAAQ,EAAES,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAKlB,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELP,QAAAA,UAAU,EAAEQ,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKjB,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELN,QAAAA,MAAM,EAAEO,MAAM,CAACE;AAFV,OAAP;;AAIF,SAAKhB,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,SAAS,EAAEM,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKf,QAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFf,OAAP;;AAIF,SAAKd,aAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFZ,OAAP;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOH,KAAP;AAxDJ;AA0DD;;AAAA;AAED,eAAeD,OAAf","sourcesContent":["import { SET_NG_GEN_SEL, SET_NG_PTF_SEL, SEND_FORM, SEND_SEARCH, SET_ORIG, SET_ORDER_OPT, SET_SEARCH_GEN } from '../actions/actions';\n\nconst initialState = {\n  //------New game------\n  nggensel: [],\n  ngplatfsel: [],\n  sended: false,\n  //-----Search game----\n  searchOps: {},// Opciones de búsqueda de juegos\n  searchOrig: 'db',\n  ordering: '',\n  searchgenre: '',\n};\n\nfunction reducer(state = initialState, action) {\n\n  switch (action.type) {\n    case SET_NG_GEN_SEL:\n      return {\n        ...state,\n        nggensel: action.payload\n      }\n    case SET_NG_PTF_SEL:\n      return {\n        ...state,\n        ngplatfsel: action.payload\n      }\n    case SEND_FORM:\n      return {\n        ...state,\n        sended: action.payload\n      }\n    case SEND_SEARCH:\n      return {\n        ...state,\n        searchOps: action.payload\n      }\n    case SET_ORIG:\n      return {\n        ...state,\n        searchOrig: action.payload\n      }\n    case SET_SEARCH_GEN:\n      return {\n        ...state,\n        searchgenre: action.payload\n      }\n    case SET_ORDER_OPT:\n      return {\n        ...state,\n        ordering: action.payload\n      }\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}