{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GDInfo/GDInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport './GDInfo.css';\nimport star from '../../imgs/star.png'; //import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GDInfo() {\n  _s();\n\n  let {\n    id\n  } = useParams(); // <-- Retorna un objeto, acá es {id: Nro}\n\n  let urlQuery = new URLSearchParams(useLocation().search); //<-- Retorna un objeto\n\n  let orig = urlQuery.get('orig'); //obtiene el query cuya key es 'orig'.\n\n  async function getGameinfo(id, orig) {\n    if (orig === 'API') {\n      fetch(`http://localhost:3001/videogame/${id}`).then(response => response.json()).then(obj => {\n        let {\n          id,\n          name,\n          description,\n          released,\n          img_url,\n          rating,\n          platforms,\n          genres\n        } = obj;\n        let genrenames = genres.map(e => e.name);\n        let str = `${genrenames.toString().replace(/,/g, ', ')}`;\n        return {\n          id,\n          name,\n          description,\n          released,\n          img_url,\n          rating,\n          platforms,\n          genres: str\n        };\n      });\n    } else if (orig === 'base%20de%20datos') {\n      fetch(`http://localhost:3001/dbvideogame/${id}`).then(response => response.json()).then(obj => {\n        let {\n          id,\n          name,\n          description,\n          released,\n          img_url,\n          rating,\n          platforms,\n          genres\n        } = obj;\n        let genrenames = genres.map(e => e.name);\n        let str = `${genrenames.toString().replace(/,/g, ', ')}`;\n        return {\n          id,\n          name,\n          description,\n          released,\n          img_url,\n          rating,\n          platforms,\n          genres: str\n        };\n      });\n    }\n  } // let q = getQueryInfo(); // orig=API\n  // let query = q.replace(/orig=/g,'')\n  // return query;\n  // function handleClick(e) {\n  //   alert('elegiste volver');\n  // }\n  // let id = 6;\n  // let title = \"Nombre\";\n  // let URL_GAME = `...`;\n  // let [game, setGame] = useState([]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gd_picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gd_picture-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"star\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"star_img\",\n          src: star,\n          alt: \"star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"gdpT\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"gdt\",\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gdpT\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"gdt\",\n          children: \"Fecha de lanzamiento:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }, this), \"fecha \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gdpT\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"gdt\",\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }, this), \"generos \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gdpT\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"gdt\",\n          children: \"Plataformas:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }, this), \"plataformas \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gdpT\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"gdt\",\n          children: \"Descripci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this), \"Descripci\\xF3n\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(GDInfo, \"yaqUqJCWNVnN7HzntjpJ1TOJK0E=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = GDInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"GDInfo\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GDInfo/GDInfo.jsx"],"names":["React","useParams","useLocation","star","GDInfo","id","urlQuery","URLSearchParams","search","orig","get","getGameinfo","fetch","then","response","json","obj","name","description","released","img_url","rating","platforms","genres","genrenames","map","e","str","toString","replace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport './GDInfo.css';\nimport star from '../../imgs/star.png';\n//import axios from 'axios';\n\nexport default function GDInfo() {\n\n  let { id } = useParams(); // <-- Retorna un objeto, acá es {id: Nro}\n\n  let urlQuery = new URLSearchParams(useLocation().search);  //<-- Retorna un objeto\n  let orig = urlQuery.get('orig'); //obtiene el query cuya key es 'orig'.\n\n  async function getGameinfo(id, orig) {\n      if(orig === 'API') {\n      fetch(`http://localhost:3001/videogame/${id}`)\n        .then(response => response.json())\n        .then(obj => {\n          let { id, name, description, released, img_url, rating, platforms, genres } = obj;\n          let genrenames = genres.map(e => e.name);\n          let str = `${genrenames.toString().replace(/,/g, ', ')}`;\n          return { id, name, description, released, img_url, rating, platforms, genres: str }\n        })\n\n    } else if (orig === 'base%20de%20datos') {\n      fetch(`http://localhost:3001/dbvideogame/${id}`)\n        .then(response => response.json())\n        .then(obj => {\n          let { id, name, description, released, img_url, rating, platforms, genres } = obj;\n          let genrenames = genres.map(e => e.name);\n          let str = `${genrenames.toString().replace(/,/g, ', ')}`;\n          return { id, name, description, released, img_url, rating, platforms, genres: str }\n        })\n    }\n  \n}\n\n// let q = getQueryInfo(); // orig=API\n// let query = q.replace(/orig=/g,'')\n// return query;\n\n// function handleClick(e) {\n//   alert('elegiste volver');\n// }\n\n// let id = 6;\n// let title = \"Nombre\";\n// let URL_GAME = `...`;\n// let [game, setGame] = useState([]);\n\nreturn (\n  <div>\n    <div className=\"gd_picture\" ></div>\n    <div className=\"gd_picture-info\">\n      <div className=\"star\">\n        <img className=\"star_img\" src={star} alt=\"star\" />\n        <p className=\"gdpT\"><b className=\"gdt\">8</b></p>\n      </div>\n      <p className=\"gdpT\"><b className=\"gdt\">Fecha de lanzamiento:</b>fecha </p>\n      <p className=\"gdpT\"><b className=\"gdt\">Género:</b>generos </p>\n      <p className=\"gdpT\"><b className=\"gdt\">Plataformas:</b>plataformas </p>\n      <p className=\"gdpT\"><b className=\"gdt\">Descripción:</b>Descripción</p>\n      <div>\n      </div>\n    </div>\n  </div>\n)\n}\n"]},"metadata":{},"sourceType":"module"}