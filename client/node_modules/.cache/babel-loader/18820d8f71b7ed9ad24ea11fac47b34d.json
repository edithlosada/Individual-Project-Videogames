{"ast":null,"code":"export const GET_API_PLATFORMS = \"GET_API_PLATFORMS\";\nexport const GET_GENRES = \"GET_GENRES\"; // export const SEARCH_API_PLATFORMS = \"GET_PLATFORMS\";\n// export const SEARCH_API_GENRES = \"GET_GENRES\";\n// export const ADD_NEW_PLATFORM = \"ADD_NEW_PLATFORM\";\n// export const ADD_NEW_GENRE = \"ADD_NEW_GENRE\";\n// Request a la API para traer las películas.\n// El payload va a ser el objeto que recibamos de nuestra request.\n// Request a la API para traer las plataformas de videojuegos.\n\nexport function getApiPlatforms() {\n  return function (dispatch) {\n    return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n    .then(response => response.json()) //aplica json y retorna\n    .then(json => {\n      let data = json.results;\n      let apiPlatfs = data.map(e => e.name);\n      return apiPlatfs;\n    }).then(platfs => {\n      dispatch({\n        type: GET_API_PLATFORMS,\n        payload: platfs\n      }); // lo manda al reducer\n    });\n  };\n} // https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'\n\nexpo;\nconst genresopt = [];\n\nconst buildGenObjArr = async function () {\n  fetch(\"http://localhost:3001/genres\").then(response => response.json()).then(arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let obj = {\n        value: arr[i].name,\n        label: arr[i].name\n      };\n      genresopt.push(obj);\n    }\n  }).catch(error => console.log(error));\n};\n\nbuildGenObjArr();\nexport default genresopt;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/actions/actions.js"],"names":["GET_API_PLATFORMS","GET_GENRES","getApiPlatforms","dispatch","fetch","then","response","json","data","results","apiPlatfs","map","e","name","platfs","type","payload","expo","genresopt","buildGenObjArr","arr","i","length","obj","value","label","push","catch","error","console","log"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB,C,CACP;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAO,UAAUC,QAAV,EAAoB;AACzB,WAAOC,KAAK,CAAC,mCAAD,CAAL,CAA2C;AAA3C,KACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAC8B;AAD9B,KAEJF,IAFI,CAECE,IAAI,IAAI;AACZ,UAAIC,IAAI,GAAGD,IAAI,CAACE,OAAhB;AACA,UAAIC,SAAS,GAAGF,IAAI,CAACG,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,IAAhB,CAAhB;AACA,aAAOH,SAAP;AACD,KANI,EAOJL,IAPI,CAOES,MAAM,IAAI;AACfX,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEf,iBAAR;AAA2BgB,QAAAA,OAAO,EAAEF;AAApC,OAAD,CAAR,CADe,CACwC;AACxD,KATI,CAAP;AAUD,GAXD;AAYD,C,CAED;AACA;AACA;;AAEAG,IAAI;AAEJ,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAMC,cAAc,GAAG,kBAAkB;AAEvCf,EAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQe,GAAG,IAAI;AACX,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIE,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAEJ,GAAG,CAACC,CAAD,CAAH,CAAOR,IAAhB;AAAsBY,QAAAA,KAAK,EAAEL,GAAG,CAACC,CAAD,CAAH,CAAOR;AAApC,OAAV;AACAK,MAAAA,SAAS,CAACQ,IAAV,CAAeH,GAAf;AACD;AACF,GAPH,EAQGI,KARH,CAQSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARlB;AASD,CAXD;;AAaAT,cAAc;AAEd,eAAeD,SAAf","sourcesContent":["export const GET_API_PLATFORMS = \"GET_API_PLATFORMS\";\nexport const GET_GENRES = \"GET_GENRES\";\n// export const SEARCH_API_PLATFORMS = \"GET_PLATFORMS\";\n// export const SEARCH_API_GENRES = \"GET_GENRES\";\n// export const ADD_NEW_PLATFORM = \"ADD_NEW_PLATFORM\";\n// export const ADD_NEW_GENRE = \"ADD_NEW_GENRE\";\n\n// Request a la API para traer las películas.\n// El payload va a ser el objeto que recibamos de nuestra request.\n\n// Request a la API para traer las plataformas de videojuegos.\nexport function getApiPlatforms() {\n  return function (dispatch) {\n    return fetch(\"https://api.rawg.io/api/platforms\") //url de api con plataformas\n      .then(response => response.json()) //aplica json y retorna\n      .then(json => {\n        let data = json.results;\n        let apiPlatfs = data.map(e => e.name);\n        return apiPlatfs;\n      })\n      .then( platfs => {\n        dispatch({ type: GET_API_PLATFORMS, payload: platfs }) // lo manda al reducer\n      });\n  };\n}\n\n// https://api.rawg.io/api/platforms\n//.results  --> arr =  [0,...,50]\n// arr[i].name  --> '...'\n\nexpo\n\nconst genresopt = [];\n\nconst buildGenObjArr = async function () {\n\n  fetch(\"http://localhost:3001/genres\")\n    .then(response => response.json()) \n    .then(arr => {\n      for (let i = 0; i < arr.length; i++) {\n        let obj = { value: arr[i].name, label: arr[i].name };\n        genresopt.push(obj);\n      }\n    })\n    .catch(error => console.log(error))\n}\n\nbuildGenObjArr();\n\nexport default genresopt;"]},"metadata":{},"sourceType":"module"}