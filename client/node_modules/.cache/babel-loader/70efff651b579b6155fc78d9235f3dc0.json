{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/CreateForm/CreateForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import { useEffect, useState } from 'react';\n//import { useSelector, useDispatch } from 'react-redux'\n\nimport './CreateForm.css';\nimport MultiSelectPlatform from '../MultiSelectPlatform/MultiSelectPlatform';\nimport MultiSelectGenre from '../MultiSelectGenre/MultiSelectGenre'; // import AddNewPlatform from '../AddNewPlatform/AddNewPlatform';\n// import AddNewGenre from '../AddNewGenre/AddNewGenre';\n//import { connect } from \"react-redux\";\n//import {getDbGenres} from '../../actions/actions';\n\nimport axios from 'axios'; //import store from '../../store/index';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateForm(props) {\n  _s();\n\n  //   // console.log(props);\n  //   // props.findgenres();\n  //   // console.log(props.loading);\n  //   const dispatch = useDispatch();\n  //   dispatch(getDbGenres());\n  //   console.log(store.getState());\n  //   // store.dispatch(getDbGenres());\n  //   //console.log(store.getState())\n  // //   useEffect(() => {\n  // //   dispatch(getDbGenres)\n  // // },[])\n  let [title, setTitle] = useState('');\n  let [released, setReleased] = useState('');\n  let [description, setDescription] = useState('');\n  let [rating, setRating] = useState('');\n  let [newplatform, setNewplatform] = useState('');\n  let [newgenre, setNewgenre] = useState('');\n\n  function handleInputChange(e) {\n    let nombre = e.target.name;\n\n    switch (nombre) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n\n      case 'released':\n        setReleased(e.target.value);\n        break;\n\n      case 'description':\n        setDescription(e.target.value);\n        break;\n\n      case 'rating':\n        setRating(e.target.value);\n        break;\n\n      case 'newplatform':\n        setNewplatform(e.target.value);\n        break;\n\n      case 'newgenre':\n        setNewgenre(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  } // const genres = useSelector(state => state.nggensel);\n  // const platforms = useSelector(state => state.ngplatfsel);\n  // //console.log(rating);\n  // let state1 = {title, released,description,rating};\n\n\n  let gametoadd = {}; //ojo!!!\n  // let loading = true; //ojo!!!\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ng_page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ng_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"ng_title\",\n        children: \"Nuevo juego: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        action: \"http://localhost:3001/newgame\",\n        className: \"ng_formArea\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input_name\",\n          type: \"text\",\n          className: \"ng_forminput\",\n          value: title,\n          name: \"title\",\n          placeholder: \"Ingrese el nombre del juego...\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input_released\",\n          type: \"text\",\n          className: \"ng_forminput\",\n          value: released,\n          name: \"released\",\n          placeholder: \"Fecha de lanzamiento...\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input_resume\",\n          className: \"ng_textinput\",\n          value: description,\n          name: \"description\",\n          placeholder: \"Breve res\\xFAmen ...\",\n          type: \"text\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input_rating\",\n          type: \"text\",\n          className: \"ng_forminput\",\n          value: rating,\n          name: \"rating\",\n          placeholder: \"Puntaje...\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ng_selectArea\",\n          children: [/*#__PURE__*/_jsxDEV(MultiSelectPlatform, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input_name\",\n            type: \"text\",\n            className: \"anpforminput\",\n            value: newplatform,\n            name: \"newplatform\",\n            placeholder: \"Ingrese plataforma no existente...\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectGenre, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input_name\",\n            type: \"text\",\n            className: \"angforminput\",\n            value: newgenre,\n            name: \"newgenre\",\n            placeholder: \"Ingrese g\\xE9nero no existente...\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ng_button-area\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ng_button\",\n            type: \"submit\",\n            children: \"Guardar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateForm, \"Lb+reNSwmiNpysMAHh0gGfet/XI=\");\n\n_c = CreateForm;\n; // const mapStateToProps = state => {\n// \treturn { loading: state.loading }\n// }\n// const mapDispatchToProps = dispatch => {\n// \treturn { findgenres: () => dispatch(getDbGenres()) }\n// }\n// export default connect(\n// \tmapStateToProps,\n// \tmapDispatchToProps\n// )(CreateForm) ;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/CreateForm/CreateForm.jsx"],"names":["React","useState","MultiSelectPlatform","MultiSelectGenre","axios","CreateForm","props","title","setTitle","released","setReleased","description","setDescription","rating","setRating","newplatform","setNewplatform","newgenre","setNewgenre","handleInputChange","e","nombre","target","name","value","gametoadd","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n//import { useEffect, useState } from 'react';\n//import { useSelector, useDispatch } from 'react-redux'\nimport './CreateForm.css';\nimport MultiSelectPlatform from '../MultiSelectPlatform/MultiSelectPlatform';\nimport MultiSelectGenre from '../MultiSelectGenre/MultiSelectGenre';\n// import AddNewPlatform from '../AddNewPlatform/AddNewPlatform';\n// import AddNewGenre from '../AddNewGenre/AddNewGenre';\n//import { connect } from \"react-redux\";\n//import {getDbGenres} from '../../actions/actions';\nimport axios from 'axios';\n//import store from '../../store/index';\n\nexport default function CreateForm(props) {\n  //   // console.log(props);\n  //   // props.findgenres();\n  //   // console.log(props.loading);\n  //   const dispatch = useDispatch();\n  //   dispatch(getDbGenres());\n\n  //   console.log(store.getState());\n  //   // store.dispatch(getDbGenres());\n  //   //console.log(store.getState())\n\n  // //   useEffect(() => {\n  // //   dispatch(getDbGenres)\n  // // },[])\n\n  let [title, setTitle] = useState('');\n  let [released, setReleased] = useState('');\n  let [description, setDescription] = useState('');\n  let [rating, setRating] = useState('');\n  let [newplatform, setNewplatform] = useState('');\n  let [newgenre, setNewgenre] = useState('');\n\n\n\n  function handleInputChange(e) {\n    let nombre = e.target.name;\n    switch (nombre) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n      case 'released':\n        setReleased(e.target.value);\n        break;\n      case 'description':\n        setDescription(e.target.value);\n        break;\n      case 'rating':\n        setRating(e.target.value);\n        break;\n      case 'newplatform':\n        setNewplatform(e.target.value);\n        break;\n      case 'newgenre':\n        setNewgenre(e.target.value);\n        break;\n      default:\n        break;\n    }\n  }\n\n  // const genres = useSelector(state => state.nggensel);\n  // const platforms = useSelector(state => state.ngplatfsel);\n  \n\n  // //console.log(rating);\n  // let state1 = {title, released,description,rating};\n  let gametoadd = {}; //ojo!!!\n  // let loading = true; //ojo!!!\n  \n\n  return (\n    <div className=\"ng_page\">\n      <div className=\"ng_container\">\n        <h1 className=\"ng_title\"  >Nuevo juego: </h1>\n        {/* <form method=\"post\" action=\"http://localhost:3001/newrecipe\" encType = \"multipart / form-data\" className=\"ng_formArea\" onSubmit={handleSubmit}> */}\n        <form method=\"post\" action=\"http://localhost:3001/newgame\" className=\"ng_formArea\" onSubmit={handleSubmit}>\n          <input\n            id=\"input_name\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={title}\n            name='title'\n            placeholder=\"Ingrese el nombre del juego...\"\n            onChange={handleInputChange}>\n          </input>\n          <input\n            id=\"input_released\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={released}\n            name='released'\n            placeholder=\"Fecha de lanzamiento...\"\n            onChange={handleInputChange}>\n          </input>\n          <textarea\n            id=\"input_resume\"\n            className=\"ng_textinput\"\n            value={description}\n            name='description'\n            placeholder=\"Breve resúmen ...\"\n            type=\"text\"\n            onChange={handleInputChange}>\n          </textarea>\n          <input\n            id=\"input_rating\"\n            type=\"text\"\n            className=\"ng_forminput\"\n            value={rating}\n            name='rating'\n            placeholder=\"Puntaje...\"\n            onChange={handleInputChange}>\n          </input>\n          <div className=\"ng_selectArea\">\n            <MultiSelectPlatform />\n            <input\n              id=\"input_name\"\n              type=\"text\"\n              className=\"anpforminput\"\n              value={newplatform}\n              name='newplatform'\n              placeholder=\"Ingrese plataforma no existente...\"\n              onChange={handleInputChange}>\n            </input>\n            <MultiSelectGenre />\n            <input\n              id=\"input_name\"\n              type=\"text\"\n              className=\"angforminput\"\n              value={newgenre}\n              name='newgenre'\n              placeholder=\"Ingrese género no existente...\"\n              onChange={handleInputChange}>\n            </input>\n          </div>\n          <div className=\"ng_button-area\">\n            <button className=\"ng_button\" type=\"submit\">Guardar</button>\n            {/* <input type=\"submit\" value=\"Guardar\" /> */}\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n};\n\n// const mapStateToProps = state => {\n// \treturn { loading: state.loading }\n// }\n\n// const mapDispatchToProps = dispatch => {\n// \treturn { findgenres: () => dispatch(getDbGenres()) }\n// }\n\n// export default connect(\n// \tmapStateToProps,\n// \tmapDispatchToProps\n// )(CreateForm) ;"]},"metadata":{},"sourceType":"module"}