{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Ordering/Ordering.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Ordering.css';\nimport { useDispatch } from 'react-redux';\nimport { setOrderOpt, initsearch, cleansearch, setGamesToShow } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ordering() {\n  _s();\n\n  const dispatch = useDispatch();\n  let orderOp = [{\n    label: \"Increasing alphabetical\",\n    value: \"abcCreciente\"\n  }, {\n    label: \"Decreasing alphabetical\",\n    value: \"abcDecreciente\"\n  }, {\n    label: \"Increasing rating\",\n    value: \"nroCreciente\"\n  }, {\n    label: \"Decreasing rating\",\n    value: \"nroDecreciente\"\n  }];\n  let [order, setOrder] = useState(''); // <---\n  // Según selección determina el orden de búsqueda\n\n  function handleChange(e) {\n    setOrder(e.target.value);\n  } //Cada vez que cambie el orden guarda el estado en el store y limpia\n\n\n  useEffect(() => {\n    dispatch(setOrderOpt(order));\n    dispatch(initsearch(false)); //permite volver a escribir\n\n    dispatch(cleansearch(true)); //que limpie title\n\n    dispatch(setGamesToShow(null));\n  }, [order, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ord_cont\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"orderO\",\n      className: \"ord_select\",\n      value: order,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        defaultValue: true,\n        children: \"Order:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), orderOp && orderOp.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Ordering, \"BaCiEAWpD3DUA7jNnTvdPHsLJ+4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Ordering;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ordering\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Ordering/Ordering.jsx"],"names":["React","useState","useEffect","useDispatch","setOrderOpt","initsearch","cleansearch","setGamesToShow","Ordering","dispatch","orderOp","label","value","order","setOrder","handleChange","e","target","map","option","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,WAAlC,EAA+CC,cAA/C,QAAsE,uBAAtE;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,MAAIO,OAAO,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE,yBAAT;AAAoCC,IAAAA,KAAK,EAAE;AAA3C,GADY,EAEZ;AAAED,IAAAA,KAAK,EAAE,yBAAT;AAAoCC,IAAAA,KAAK,EAAE;AAA3C,GAFY,EAGZ;AAAED,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAHY,EAIZ;AAAED,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAJY,CAAd;AAOA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAhC,CAXiC,CAWK;AAEtC;;AACA,WAASc,YAAT,CAAsBC,CAAtB,EAAyB;AACvBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASL,KAAV,CAAR;AACD,GAhBgC,CAkBjC;;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACL,WAAW,CAACS,KAAD,CAAZ,CAAR;AACAJ,IAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR,CAFc,CAEc;;AAC5BI,IAAAA,QAAQ,CAACH,WAAW,CAAC,IAAD,CAAZ,CAAR,CAHc,CAGc;;AAC5BG,IAAAA,QAAQ,CAACF,cAAc,CAAC,IAAD,CAAf,CAAR;AACD,GALQ,EAKN,CAACM,KAAD,EAAQJ,QAAR,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,KAAK,EAAEI,KAHT;AAIE,MAAA,QAAQ,EAAEE,YAJZ;AAAA,8BAME;AAAQ,QAAA,YAAY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAOGL,OAAO,IAAIA,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACtB;AAAoB,QAAA,KAAK,EAAED,MAAM,CAACP,KAAlC;AAAA,kBAA0CO,MAAM,CAACR;AAAjD,SAAaS,KAAb;AAAA;AAAA;AAAA;AAAA,cADU,CAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzCuBZ,Q;UAELL,W;;;KAFKK,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Ordering.css';\nimport { useDispatch } from 'react-redux';\nimport { setOrderOpt ,initsearch ,cleansearch ,setGamesToShow  } from '../../actions/actions';\n\nexport default function Ordering() {\n\n  const dispatch = useDispatch();\n\n  let orderOp = [\n    { label: \"Increasing alphabetical\", value: \"abcCreciente\" },\n    { label: \"Decreasing alphabetical\", value: \"abcDecreciente\" },\n    { label: \"Increasing rating\", value: \"nroCreciente\" },\n    { label: \"Decreasing rating\", value: \"nroDecreciente\" },\n  ];\n\n  let [order, setOrder] = useState(''); // <---\n\n  // Según selección determina el orden de búsqueda\n  function handleChange(e) {\n    setOrder(e.target.value);\n  }\n\n  //Cada vez que cambie el orden guarda el estado en el store y limpia\n  useEffect(() => {\n    dispatch(setOrderOpt(order));\n    dispatch(initsearch(false));//permite volver a escribir\n    dispatch(cleansearch(true));//que limpie title\n    dispatch(setGamesToShow(null));\n  }, [order, dispatch]);\n\n  return (\n    <div className=\"ord_cont\">\n      <select\n        name=\"orderO\"\n        className=\"ord_select\"\n        value={order}\n        onChange={handleChange}\n      >\n        <option defaultValue>Order:</option>\n        {orderOp && orderOp.map((option, index) => (\n          <option key={index} value={option.value}>{option.label}</option>\n        ))}\n      </select>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}