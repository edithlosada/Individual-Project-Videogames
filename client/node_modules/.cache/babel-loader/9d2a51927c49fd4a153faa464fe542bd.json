{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectPlatform/MultiSelectPlatform.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './MultiSelectPlatform.css';\nimport platfopt from '../Platforms/Platforms';\nimport { saveNgPlatfSel, sendedForm } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MultiSelectPlatform(props) {\n  _s();\n\n  const dispatch = useDispatch(); // Estado de plataformas seleccionadas\n\n  let [splatforms, setSplatforms] = useState([]); // selected platforms\n  // Quita plataforma de la selección\n\n  function removeItem(item) {\n    let newItems = splatforms.filter(e => e !== item);\n    setSplatforms(newItems);\n    dispatch(saveNgPlatfSel(splatforms));\n  } // Cuando hace selección en desplegable lo seleciona/deselecciona\n\n\n  function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = splatforms.includes(itemP);\n\n    if (!hasItem) {\n      setSplatforms([...splatforms, itemP]);\n      dispatch(saveNgPlatfSel(splatforms));\n    } else {\n      removeItem(itemP);\n    }\n  } // Cuando hace click en el botón lo saca\n\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  } //Cada vez que cambia una plataforma guarda el estado en el store\n\n\n  const mandaPsel = () => dispatch(saveNgPlatfSel(splatforms));\n\n  ;\n  useEffect(() => {\n    dispatch(saveNgPlatfSel(splatforms));\n  }, [splatforms]); // useEffect(() => {\n  //   dispatch(saveNgPlatfSel(splatforms));\n  // }, [splatforms]);\n\n  const sended = useSelector(state => state.sended);\n  useEffect(() => {\n    setSplatforms([]);\n    dispatch(sendedForm(false));\n  }, [sended]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selplatfom\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"platforms\",\n      placeholder: \"Plataformas...\",\n      className: \"multselectpf\",\n      value: '',\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        defaultValue: true,\n        className: \"selectpfT\",\n        children: \"Plataformas: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), platfopt.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.value,\n        children: item.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"platfcont\",\n      children: splatforms.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"selplatfbtn\",\n        value: item,\n        onClick: handleClick,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiSelectPlatform, \"fMaMgcjTCChyEeSPQ3n4hJMLLT4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MultiSelectPlatform;\nexport default MultiSelectPlatform;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectPlatform\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectPlatform/MultiSelectPlatform.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","platfopt","saveNgPlatfSel","sendedForm","MultiSelectPlatform","props","dispatch","splatforms","setSplatforms","removeItem","item","newItems","filter","e","handleChange","itemP","target","value","hasItem","includes","handleClick","itm","mandaPsel","sended","state","map","index","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './MultiSelectPlatform.css';\nimport platfopt from '../Platforms/Platforms';\nimport { saveNgPlatfSel, sendedForm } from '../../actions/actions';\n\nexport function MultiSelectPlatform(props) {\n\n  const dispatch = useDispatch();\n\n  // Estado de plataformas seleccionadas\n  let [splatforms, setSplatforms] = useState([]); // selected platforms\n\n  // Quita plataforma de la selección\n  function removeItem(item) {\n    let newItems = splatforms.filter(e => e !== item);\n    setSplatforms(newItems);\n    dispatch(saveNgPlatfSel(splatforms));\n  }\n\n  // Cuando hace selección en desplegable lo seleciona/deselecciona\n  function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = splatforms.includes(itemP);\n    if (!hasItem) {\n      setSplatforms([...splatforms, itemP]);\n      dispatch(saveNgPlatfSel(splatforms));\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  // Cuando hace click en el botón lo saca\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  //Cada vez que cambia una plataforma guarda el estado en el store\n  const mandaPsel = () => dispatch(saveNgPlatfSel(splatforms));;\n  useEffect(() => {\n    dispatch(saveNgPlatfSel(splatforms));\n  }, [splatforms]);\n\n  // useEffect(() => {\n  //   dispatch(saveNgPlatfSel(splatforms));\n  // }, [splatforms]);\n\n  const sended = useSelector(state => state.sended);\n  useEffect(() => {\n    setSplatforms([]);\n    dispatch(sendedForm(false));\n  }, [sended]);\n\n  return (\n    <div className=\"selplatfom\">\n      <select\n        name=\"platforms\"\n        placeholder=\"Plataformas...\"\n        className=\"multselectpf\"\n        value={''}\n        onChange={handleChange}\n      >\n        <option defaultValue className=\"selectpfT\">Plataformas: </option>\n        {platfopt.map((item, index) => (\n          <option key={index} value={item.value}>{item.label}</option>\n        ))}\n      </select>\n      <div className=\"platfcont\">\n        {splatforms.map((item, index) => (\n          <button className=\"selplatfbtn\" value={item}\n            onClick={handleClick} key={index}>\n            {item}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default MultiSelectPlatform;\n"]},"metadata":{},"sourceType":"module"}