{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectPlatform/MultiSelectPlatform.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './MultiSelectPlatform.css';\nimport platfopt from '../Platforms/Platforms';\nimport { saveNgPlatfSel } from '../../actions/actions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MultiSelectPlatform(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  dispatch(saveNgPlatfSel(sgenres)); // Estado de plataformas seleccionadas\n\n  let [splatforms, setSplatforms] = useState([]); // selected platforms\n  // Quita plataforma de la selección\n\n  function removeItem(item) {\n    let newItems = splatforms.filter(e => e !== item);\n    setSplatforms(newItems);\n  } // Cuando hace selección en desplegable lo seleciona/deselecciona\n\n\n  function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = splatforms.includes(itemP);\n\n    if (!hasItem) {\n      setSplatforms([...splatforms, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  } // Cuando hace click en el botón lo saca\n\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {}, [splatforms]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selplatfom\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"platforms\",\n      placeholder: \"Plataformas...\",\n      className: \"multselectpf\",\n      value: '',\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        defaultValue: true,\n        className: \"selectpfT\",\n        children: \"Plataformas: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), platfopt.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.value,\n        children: item.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"platfcont\",\n      children: splatforms.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"selplatfbtn\",\n        value: item,\n        onClick: handleClick,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiSelectPlatform, \"rvMk2DGxcwoVlCQXczqVHK3jKMI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MultiSelectPlatform;\nexport default MultiSelectPlatform;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectPlatform\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectPlatform/MultiSelectPlatform.jsx"],"names":["React","useState","useEffect","platfopt","saveNgPlatfSel","useDispatch","MultiSelectPlatform","props","dispatch","sgenres","splatforms","setSplatforms","removeItem","item","newItems","filter","e","handleChange","itemP","target","value","hasItem","includes","handleClick","itm","map","index","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,2BAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAEzC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACAG,EAAAA,QAAQ,CAACJ,cAAc,CAACK,OAAD,CAAf,CAAR,CAHyC,CAKzC;;AACA,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA1C,CANyC,CAMO;AAEhD;;AACA,WAASW,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAIC,QAAQ,GAAGJ,UAAU,CAACK,MAAX,CAAkBC,CAAC,IAAIA,CAAC,KAAKH,IAA7B,CAAf;AACAF,IAAAA,aAAa,CAACG,QAAD,CAAb;AACD,GAZwC,CAczC;;;AACA,WAASG,YAAT,CAAsBD,CAAtB,EAAyB;AACvB,QAAIE,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASC,KAArB;AACA,QAAIC,OAAO,GAAGX,UAAU,CAACY,QAAX,CAAoBJ,KAApB,CAAd;;AACA,QAAI,CAACG,OAAL,EAAc;AACZV,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBQ,KAAhB,CAAD,CAAb;AACD,KAFD,MAEO;AACLN,MAAAA,UAAU,CAACM,KAAD,CAAV;AACD;AACF,GAvBwC,CAyBzC;;;AACA,WAASK,WAAT,CAAqBP,CAArB,EAAwB;AACtB,QAAIQ,GAAG,GAAGR,CAAC,CAACG,MAAF,CAASC,KAAnB;AACAR,IAAAA,UAAU,CAACY,GAAD,CAAV;AACD;;AAEDtB,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACQ,UAAD,CADM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,WAAW,EAAC,gBAFd;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,KAAK,EAAE,EAJT;AAKE,MAAA,QAAQ,EAAEO,YALZ;AAAA,8BAOE;AAAQ,QAAA,YAAY,MAApB;AAAqB,QAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGd,QAAQ,CAACsB,GAAT,CAAa,CAACZ,IAAD,EAAOa,KAAP,kBACZ;AAAoB,QAAA,KAAK,EAAEb,IAAI,CAACO,KAAhC;AAAA,kBAAwCP,IAAI,CAACc;AAA7C,SAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,cADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGhB,UAAU,CAACe,GAAX,CAAe,CAACZ,IAAD,EAAOa,KAAP,kBACd;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,KAAK,EAAEb,IAAvC;AACE,QAAA,OAAO,EAAEU,WADX;AAAA,kBAEGV;AAFH,SAC6Ba,KAD7B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA1DepB,mB;UAEGD,W;;;KAFHC,mB;AA4DhB,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MultiSelectPlatform.css';\nimport platfopt from '../Platforms/Platforms';\nimport {saveNgPlatfSel} from '../../actions/actions';\nimport { useDispatch } from 'react-redux';\n\nexport function MultiSelectPlatform(props) {\n\n  const dispatch = useDispatch();\n  dispatch(saveNgPlatfSel(sgenres));\n\n  // Estado de plataformas seleccionadas\n  let [splatforms, setSplatforms] = useState([]); // selected platforms\n\n  // Quita plataforma de la selección\n  function removeItem(item) {\n    let newItems = splatforms.filter(e => e !== item);\n    setSplatforms(newItems);\n  }\n\n  // Cuando hace selección en desplegable lo seleciona/deselecciona\n  function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = splatforms.includes(itemP);\n    if (!hasItem) {\n      setSplatforms([...splatforms, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  // Cuando hace click en el botón lo saca\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {\n  }, [splatforms]);\n\n  return (\n    <div className=\"selplatfom\">\n      <select\n        name=\"platforms\"\n        placeholder=\"Plataformas...\"\n        className=\"multselectpf\"\n        value={''}\n        onChange={handleChange}\n      >\n        <option defaultValue className=\"selectpfT\">Plataformas: </option>\n        {platfopt.map((item, index) => (\n          <option key={index} value={item.value}>{item.label}</option>\n        ))}\n      </select>\n      <div className=\"platfcont\">\n        {splatforms.map((item, index) => (\n          <button className=\"selplatfbtn\" value={item}\n            onClick={handleClick} key={index}>\n            {item}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default MultiSelectPlatform;\n"]},"metadata":{},"sourceType":"module"}