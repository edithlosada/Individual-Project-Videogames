{"ast":null,"code":"import { SET_NG_GEN_SEL, SET_NG_PTF_SEL, SEND_FORM, INIT_SEARCH, SET_ORIG, SET_SEARCH_GEN, SET_ORDER_OPT, DB_GEN_OP_SEARCH, API_GEN_OP_SEARCH, TITLE_SEARCH, GET_API_GAMES, GET_DB_GAMES, CLEAN_CARDS } from '../actions/actions';\nconst initialState = {\n  //------New game------\n  nggensel: [],\n  ngplatfsel: [],\n  sended: false,\n  //-----Search game----\n  initsearch: false,\n  // Opciones de búsqueda de juegos\n  initsearch: false,\n  // Opciones de búsqueda de juegos\n  searchOrig: '',\n  searchgenre: '',\n  ordering: '',\n  // dbgenopts: [],\n  dbgenopts: [{\n    label: 'acción',\n    value: 'acción'\n  }, {\n    label: 'aventura',\n    value: 'aventura'\n  }],\n  apigenopts: [],\n  stitle: '',\n  apigames: [],\n  dbgames: [],\n  cleancards: true\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    //------New game------\n    case SET_NG_GEN_SEL:\n      return { ...state,\n        nggensel: action.payload\n      };\n\n    case SET_NG_PTF_SEL:\n      return { ...state,\n        ngplatfsel: action.payload\n      };\n\n    case SEND_FORM:\n      return { ...state,\n        sended: action.payload\n      };\n    //-----Search game----\n\n    case INIT_SEARCH:\n      return { ...state,\n        initsearch: action.payload\n      };\n\n    case CLEAN_SEARCH:\n      return { ...state,\n        cleansearch: action.payload\n      };\n\n    case SET_ORIG:\n      return { ...state,\n        searchOrig: action.payload\n      };\n\n    case SET_SEARCH_GEN:\n      return { ...state,\n        searchgenre: action.payload\n      };\n\n    case SET_ORDER_OPT:\n      return { ...state,\n        ordering: action.payload\n      };\n\n    case DB_GEN_OP_SEARCH:\n      return { ...state,\n        dbgenopts: action.payload\n      };\n\n    case API_GEN_OP_SEARCH:\n      return { ...state,\n        apigenopts: action.payload\n      };\n\n    case TITLE_SEARCH:\n      return { ...state,\n        stitle: action.payload\n      };\n\n    case GET_API_GAMES:\n      return { ...state,\n        apigames: action.payload\n      };\n\n    case GET_DB_GAMES:\n      return { ...state,\n        dbgames: action.payload\n      };\n\n    case CLEAN_CARDS:\n      return { ...state,\n        cleancards: action.payload\n      };\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default reducer;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/reducers/reducers.js"],"names":["SET_NG_GEN_SEL","SET_NG_PTF_SEL","SEND_FORM","INIT_SEARCH","SET_ORIG","SET_SEARCH_GEN","SET_ORDER_OPT","DB_GEN_OP_SEARCH","API_GEN_OP_SEARCH","TITLE_SEARCH","GET_API_GAMES","GET_DB_GAMES","CLEAN_CARDS","initialState","nggensel","ngplatfsel","sended","initsearch","searchOrig","searchgenre","ordering","dbgenopts","label","value","apigenopts","stitle","apigames","dbgames","cleancards","reducer","state","action","type","payload","CLEAN_SEARCH","cleansearch"],"mappings":"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","sourcesContent":["import {\n  SET_NG_GEN_SEL, SET_NG_PTF_SEL, SEND_FORM,\n  INIT_SEARCH, SET_ORIG, SET_SEARCH_GEN, SET_ORDER_OPT,\n  DB_GEN_OP_SEARCH, API_GEN_OP_SEARCH, TITLE_SEARCH, GET_API_GAMES,\n  GET_DB_GAMES , CLEAN_CARDS\n} from '../actions/actions';\n\nconst initialState = {\n  //------New game------\n  nggensel: [],\n  ngplatfsel: [],\n  sended: false,\n  //-----Search game----\n  initsearch: false,// Opciones de búsqueda de juegos\n  initsearch: false,// Opciones de búsqueda de juegos\n  searchOrig: '',\n  searchgenre: '',\n  ordering: '',\n  // dbgenopts: [],\n  dbgenopts: [\n    { label: 'acción', value: 'acción' },\n    { label: 'aventura', value: 'aventura' }\n  ],\n  apigenopts: [],\n  stitle: '',\n  apigames: [],\n  dbgames: [],\n  cleancards: true,\n};\n\nfunction reducer(state = initialState, action) {\n\n  switch (action.type) {\n    //------New game------\n    case SET_NG_GEN_SEL:\n      return {\n        ...state,\n        nggensel: action.payload\n      }\n    case SET_NG_PTF_SEL:\n      return {\n        ...state,\n        ngplatfsel: action.payload\n      }\n    case SEND_FORM:\n      return {\n        ...state,\n        sended: action.payload\n      }\n    //-----Search game----\n    case INIT_SEARCH:\n      return {\n        ...state,\n        initsearch: action.payload\n      }\n      case CLEAN_SEARCH:\n        return {\n          ...state,\n          cleansearch: action.payload\n        }\n    case SET_ORIG:\n      return {\n        ...state,\n        searchOrig: action.payload\n      }\n    case SET_SEARCH_GEN:\n      return {\n        ...state,\n        searchgenre: action.payload\n      }\n    case SET_ORDER_OPT:\n      return {\n        ...state,\n        ordering: action.payload\n      }\n    case DB_GEN_OP_SEARCH:\n      return {\n        ...state,\n        dbgenopts: action.payload\n      }\n    case API_GEN_OP_SEARCH:\n      return {\n        ...state,\n        apigenopts: action.payload\n      }\n    case TITLE_SEARCH:\n      return {\n        ...state,\n        stitle: action.payload\n      }\n    case GET_API_GAMES:\n      return {\n        ...state,\n        apigames: action.payload\n      }\n    case GET_DB_GAMES:\n      return {\n        ...state,\n        dbgames: action.payload\n      }\n    case CLEAN_CARDS:\n      return {\n        ...state,\n        cleancards: action.payload\n      }\n\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}