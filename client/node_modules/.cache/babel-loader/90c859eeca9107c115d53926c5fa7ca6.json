{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index'; //import genresopt from '../Genres/Genres';\n\nimport { getDbGenres } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MultiSelectGenre() {\n  _s();\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading); // dispatch(getDbGenres());\n  // console.log(loading);\n  // console.log(store.getState().loading)\n\n  useEffect(() => {\n    dispatch(getDbGenres()); // console.log('se cargó la página');\n  }, []);\n  useEffect(() => {\n    renderiza; // console.log('cambió estado');\n  }, [store.getState().loading]);\n  let genres = useSelector(state => state.genreopt); //console.log(genreopt);\n\n  function renderiza() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genres\",\n        placeholder: \"Plataformas...\",\n        className: \"multselectgen\",\n        value: '',\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          defaultValue: true,\n          children: \"G\\xE9neros:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), genres && genres.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.value,\n          children: item.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gencont\",\n        children: sgenres.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"selgenbtn\",\n          value: item,\n          onClick: handleClick,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  } // Estado de géneros seleccionados\n\n\n  let [sgenres, setSgenres] = useState([]); // selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {}, [sgenres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selgenfom\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"ng_loading\",\n      children: \"...cargando g\\xE9neros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genres\",\n        placeholder: \"Plataformas...\",\n        className: \"multselectgen\",\n        value: '',\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          defaultValue: true,\n          children: \"G\\xE9neros:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), genres && genres.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.value,\n          children: item.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gencont\",\n        children: sgenres.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"selgenbtn\",\n          value: item,\n          onClick: handleClick,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiSelectGenre, \"ituBRFiXJTDh5k2hXEnFMzkpk+k=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MultiSelectGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectGenre\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","store","getDbGenres","MultiSelectGenre","dispatch","loading","state","renderiza","getState","genres","genreopt","handleChange","map","item","index","value","label","sgenres","handleClick","setSgenres","removeItem","newItems","filter","e","itemP","target","hasItem","includes","itm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAEzC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B,CAHyC,CAI1C;AACC;AACA;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR,CADc,CAEf;AACA,GAHQ,EAGP,EAHO,CAAT;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CADK,CAEf;AACA,GAHQ,EAGP,CAACN,KAAK,CAACO,QAAN,GAAiBH,OAAlB,CAHO,CAAT;AAKA,MAAII,MAAM,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACI,QAAhB,CAAxB,CAlByC,CAmBzC;;AAEA,WAASH,SAAT,GAAoB;AAClB,wBACA;AAAA,8BACA;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,KAAK,EAAE,EAJT;AAKE,QAAA,QAAQ,EAAEI,YALZ;AAAA,gCAOE;AAAQ,UAAA,YAAY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQGF,MAAM,IAAIA,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACpB;AAAoB,UAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAA,oBAAwCF,IAAI,CAACG;AAA7C,WAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,gBADS,CARb;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAaA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGG,OAAO,CAACL,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBACX;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,KAAK,EAAED,IAArC;AACE,UAAA,OAAO,EAAEK,WADX;AAAA,oBAEGL;AAFH,WAC6BC,KAD7B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA,oBADA;AAuBD,GA7CwC,CAgDzC;;;AACA,MAAI,CAACG,OAAD,EAAUE,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAApC,CAjDyC,CAiDA;;AAEzC,WAASuB,UAAT,CAAoBP,IAApB,EAA0B;AACxB,QAAIQ,QAAQ,GAAGJ,OAAO,CAACK,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAKV,IAA1B,CAAf;AACAM,IAAAA,UAAU,CAACE,QAAD,CAAV;AACD;;AAED,iBAAeV,YAAf,CAA4BY,CAA5B,EAA+B;AAC7B,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASV,KAArB;AACA,QAAIW,OAAO,GAAGT,OAAO,CAACU,QAAR,CAAiBH,KAAjB,CAAd;;AACA,QAAI,CAACE,OAAL,EAAc;AACZP,MAAAA,UAAU,CAAC,CAAC,GAAGF,OAAJ,EAAaO,KAAb,CAAD,CAAV;AACD,KAFD,MAEO;AACLJ,MAAAA,UAAU,CAACI,KAAD,CAAV;AACD;AACF;;AAED,WAASN,WAAT,CAAqBK,CAArB,EAAwB;AACtB,QAAIK,GAAG,GAAGL,CAAC,CAACE,MAAF,CAASV,KAAnB;AACAK,IAAAA,UAAU,CAACQ,GAAD,CAAV;AACD;;AAED9B,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACmB,OAAD,CADM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACIZ,OAAO,gBAAG;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACP;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,KAAK,EAAE,EAJT;AAKE,QAAA,QAAQ,EAAEM,YALZ;AAAA,gCAOE;AAAQ,UAAA,YAAY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQGF,MAAM,IAAIA,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACpB;AAAoB,UAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAA,oBAAwCF,IAAI,CAACG;AAA7C,WAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,gBADS,CARb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGG,OAAO,CAACL,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBACX;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,KAAK,EAAED,IAArC;AACE,UAAA,OAAO,EAAEK,WADX;AAAA,oBAEGL;AAFH,WAC6BC,KAD7B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtGuBX,gB;UAELJ,W,EACDC,W,EAeHA,W;;;KAlBSG,gB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index';\n//import genresopt from '../Genres/Genres';\nimport { getDbGenres } from '../../actions/actions';\n\nexport default function MultiSelectGenre() {\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading);\n // dispatch(getDbGenres());\n  // console.log(loading);\n  // console.log(store.getState().loading)\n\n  useEffect(() => {\n    dispatch(getDbGenres());\n   // console.log('se cargó la página');\n  },[])\n\n  useEffect(() => {\n    renderiza\n   // console.log('cambió estado');\n  },[store.getState().loading])\n\n  let genres = useSelector(state => state.genreopt);\n  //console.log(genreopt);\n\n  function renderiza(){\n    return (\n    <>\n    <select\n      name=\"genres\"\n      placeholder=\"Plataformas...\"\n      className=\"multselectgen\"\n      value={''}\n      onChange={handleChange}\n    >\n      <option defaultValue>Géneros:</option>\n      {genres && genres.map((item, index) => (\n        <option key={index} value={item.value}>{item.label}</option>\n      ))}\n    </select>\n    <div className=\"gencont\">\n      {sgenres.map((item, index) => (\n        <button className=\"selgenbtn\" value={item}\n          onClick={handleClick} key={index}>\n          {item}\n        </button>\n      ))}\n    </div>\n  </>)\n  }\n  \n\n  // Estado de géneros seleccionados\n  let [sgenres, setSgenres] = useState([]);// selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {\n  }, [sgenres]);\n\n  return (\n    <div className=\"selgenfom\">\n      { loading ? <h3 className=\"ng_loading\">...cargando géneros</h3> :\n        <>\n          <select\n            name=\"genres\"\n            placeholder=\"Plataformas...\"\n            className=\"multselectgen\"\n            value={''}\n            onChange={handleChange}\n          >\n            <option defaultValue>Géneros:</option>\n            {genres && genres.map((item, index) => (\n              <option key={index} value={item.value}>{item.label}</option>\n            ))}\n          </select>\n          <div className=\"gencont\">\n            {sgenres.map((item, index) => (\n              <button className=\"selgenbtn\" value={item}\n                onClick={handleClick} key={index}>\n                {item}\n              </button>\n            ))}\n          </div>\n        </>\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}