{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  let dispatch = useDispatch();\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig); // let origRef = useRef(orig);\n\n  let apig = useSelector(state => state.apigames); // let apigRef = useRef(apig);\n\n  let dbg = useSelector(state => state.dbgames);\n  let [showMsg, setShowMsg] = useState(true);\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]); // console.log(searchOrig)\n  // console.log(origRef)\n  // console.log(state)\n\n  useEffect(() => {\n    // Según el origen busca el arreglo de juegos\n    if (searchOrig === 'API') {\n      console.log('cargaste API'); // dispatch(getApiGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n\n    if (searchOrig === 'base de datos') {\n      console.log('falta cargar videojuegos en la base de datos'); // dispatch(getdbGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n  }); //, dispatch])\n\n  useEffect(() => {\n    console.log('(1)'); // console.log(apigRef.current);\n    // console.log(origRef.current);\n  }, [gettingG]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showMsg && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), gettingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" ...Obteniendo juegos de la \", searchOrig, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 20\n    }, this), initsearch && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_btn_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"7yz3H6lMIbOxgvmkrajNIqUNM0o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","GameCard","getApiGames","getdbGames","initsearch","Pagination","dispatch","inits","state","cleans","cleansearch","orig","searchOrig","apig","apigames","dbg","dbgames","showMsg","setShowMsg","gettingG","setGettingG","games","setGames","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,QAAoD,uBAApD;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AAEA,MAAIO,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACJ,UAAhB,CAAvB;AACA,MAAIK,MAAM,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAAxB;AACA,MAAIC,IAAI,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACI,UAAhB,CAAtB,CANmC,CAOnC;;AACA,MAAIC,IAAI,GAAGd,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACM,QAAhB,CAAtB,CARmC,CASnC;;AACA,MAAIC,GAAG,GAAGhB,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACQ,OAAhB,CAArB;AAEA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAhC,CAdmC,CAgBnC;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIe,UAAU,KAAK,KAAnB,EAA0B;AACxBW,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADwB,CAExB;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,QAAIR,UAAU,KAAK,eAAnB,EAAoC;AAClCW,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EADkC,CAElC;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACJ,GAdQ,CAAT,CApBmC,CAkChC;;AAEHvB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADc,CAEd;AACA;AACD,GAJQ,EAIN,CAACL,QAAD,CAJM,CAAT;AAMA,sBACE;AAAA,eACGF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGE,QAAQ,iBAAI;AAAA,iDAAiCP,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFf,EAGGR,UAAU,iBAAI;AAAA,8BACb;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,eAKb;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALa;AAAA,oBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA1DuBC,U;UAEPL,W,EAEHD,W,EACCA,W,EACFA,W,EAEAA,W,EAEDA,W;;;KAVYM,U","sourcesContent":["import React, { useState, useEffect , useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch } from '../../actions/actions';\n\nexport default function Pagination() {\n\n  let dispatch = useDispatch();\n\n  let inits = useSelector(state => state.initsearch);\n  let cleans = useSelector(state => state.cleansearch);\n  let orig = useSelector(state => state.searchOrig);\n  // let origRef = useRef(orig);\n  let apig = useSelector(state => state.apigames);\n  // let apigRef = useRef(apig);\n  let dbg = useSelector(state => state.dbgames);\n\n  let [showMsg, setShowMsg] = useState(true);\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n\n  // console.log(searchOrig)\n  // console.log(origRef)\n  // console.log(state)\n\n  useEffect(() => {\n      // Según el origen busca el arreglo de juegos\n      if (searchOrig === 'API') {\n        console.log('cargaste API');\n        // dispatch(getApiGames());\n        setShowMsg(false);\n        setGettingG(true);\n      }\n      if (searchOrig === 'base de datos') {\n        console.log('falta cargar videojuegos en la base de datos');\n        // dispatch(getdbGames());\n        setShowMsg(false);\n        setGettingG(true);\n      }\n  } )//, dispatch])\n\n  useEffect(() => {\n    console.log('(1)');\n    // console.log(apigRef.current);\n    // console.log(origRef.current);\n  }, [gettingG]);\n\n  return (\n    <div>\n      {showMsg && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {gettingG && <h3> ...Obteniendo juegos de la {searchOrig}.</h3>}\n      {initsearch && <>\n        <div className=\"p_cards_area\">\n          <GameCard />\n          <GameCard />\n        </div>\n        <div className=\"p_btn_area\">\n          <button className=\"p_button\">Anterior</button>\n          <button className=\"p_button\">Siguiente</button>\n        </div>\n      </>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}