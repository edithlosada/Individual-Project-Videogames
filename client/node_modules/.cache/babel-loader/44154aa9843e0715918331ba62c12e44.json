{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GameDetail/GameDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport './GameDetail.css';\nimport Navbar from '../Navbar/Navbar';\nimport star from '../../imgs/star.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameDetail() {\n  _s();\n\n  let {\n    id\n  } = useParams(); // <-- Retorna un objeto, acá es {id: Nro}\n\n  let urlQuery = new URLSearchParams(useLocation().search); //<-- Retorna un objeto\n\n  let orig = urlQuery.get('orig'); //obtiene el query cuya key es 'orig'.\n  // console.log(id, orig)\n\n  useEffect(() => {\n    async function getGameinfo(id, orig) {\n      if (orig === 'API') {\n        await fetch(`http://localhost:3001/videogame/${id}`).then(response => response.json()).then(obj => {\n          let {\n            id,\n            name,\n            description,\n            released,\n            img_url,\n            rating,\n            platforms,\n            genres\n          } = obj;\n          let genrenames = genres.map(e => e.name);\n          let str = `${genrenames.toString().replace(/,/g, ', ')}`;\n          return {\n            id,\n            name,\n            description,\n            released,\n            img_url,\n            rating,\n            platforms,\n            genres: str\n          };\n        }).then(obj => {\n          setGobj(obj);\n        }).catch(error => console.log(error));\n      } else if (orig === 'base%20de%20datos') {\n        let objg = await fetch(`http://localhost:3001/dbvideogame/${id}`).then(response => response.json()).then(obj => {\n          let {\n            id,\n            name,\n            description,\n            released,\n            img_url,\n            rating,\n            platforms,\n            genres\n          } = obj;\n          let genrenames = genres.map(e => e.name);\n          let str = `${genrenames.toString().replace(/,/g, ' - ')}`;\n          return {\n            id,\n            name,\n            description,\n            released,\n            img_url,\n            rating,\n            platforms,\n            genres: str\n          };\n        }).then(obj => {\n          setGobj(obj);\n        }).catch(error => console.log(error));\n      }\n    }\n\n    getGameinfo(id, orig);\n  }, [id, orig]);\n  let [gobj, setGobj] = useState(null);\n  useEffect(() => {\n    console.log(gobj);\n  }, [gobj]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ng_page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gd_area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameDetail, \"MmmbxqqFo+M4vcpm4FBC4UGQrEc=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = GameDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameDetail\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/GameDetail/GameDetail.jsx"],"names":["React","useState","useEffect","useParams","useLocation","Navbar","star","GameDetail","id","urlQuery","URLSearchParams","search","orig","get","getGameinfo","fetch","then","response","json","obj","name","description","released","img_url","rating","platforms","genres","genrenames","map","e","str","toString","replace","setGobj","catch","error","console","log","objg","gobj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport './GameDetail.css';\nimport Navbar from '../Navbar/Navbar';\nimport star from '../../imgs/star.png';\n\nexport default function GameDetail() {\n\n  let { id } = useParams(); // <-- Retorna un objeto, acá es {id: Nro}\n\n  let urlQuery = new URLSearchParams(useLocation().search);  //<-- Retorna un objeto\n  let orig = urlQuery.get('orig'); //obtiene el query cuya key es 'orig'.\n  // console.log(id, orig)\n\n  useEffect(() => {\n    async function getGameinfo(id, orig) {\n      if (orig === 'API') {\n        await fetch(`http://localhost:3001/videogame/${id}`)\n          .then(response => response.json())\n          .then(obj => {\n            let { id, name, description, released, img_url, rating, platforms, genres } = obj;\n            let genrenames = genres.map(e => e.name);\n            let str = `${genrenames.toString().replace(/,/g, ', ')}`;\n            return { id, name, description, released, img_url, rating, platforms, genres: str }\n          })\n          .then(obj => {\n            setGobj(obj);\n          })\n          .catch(error => console.log(error))\n\n      } else if (orig === 'base%20de%20datos') {\n        let objg = await fetch(`http://localhost:3001/dbvideogame/${id}`)\n          .then(response => response.json())\n          .then(obj => {\n            let { id, name, description, released, img_url, rating, platforms, genres } = obj;\n            let genrenames = genres.map(e => e.name);\n            let str = `${genrenames.toString().replace(/,/g, ' - ')}`;\n            return { id, name, description, released, img_url, rating, platforms, genres: str }\n          })\n          .then(obj => {\n            setGobj(obj);\n          })\n          .catch(error => console.log(error))\n      }\n    }\n\n    getGameinfo(id, orig);\n  }, [id, orig])\n\n\n\n  let [gobj, setGobj] = useState(null);\n\n\n\n\n  useEffect(() => {\n    console.log(gobj);\n  }, [gobj])\n\n\n  return (\n    <div className=\"ng_page\">\n      <Navbar />\n      <div className=\"gd_area\">\n        {/* <h1 className=\"gd_title\"  >{gobj.name} </h1>\n        <img className=\"gd_picture\" src={gobj.img_url} alt=\"game_img\" />\n        <div className=\"gd_picture-info\">\n          <div className=\"star\">\n            <img className=\"star_img\" src={star} alt=\"star\" />\n            <p className=\"gdpT\"><b className=\"gdt\">{gobj.rating}</b></p>\n          </div>\n          <p className=\"gdpT\"><b className=\"gdt\">Fecha de lanzamiento:</b>{gobj.released}</p>\n          <p className=\"gdpT\"><b className=\"gdt\">Género:</b>{gobj.genres} </p>\n          <p className=\"gdpT\"><b className=\"gdt\">Plataformas:</b>{gobj.platforms} </p>\n          <p className=\"gdpT\"><b className=\"gdt\">Descripción:</b>{gobj.description}</p>\n          <div>\n          </div>\n        </div> */}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}