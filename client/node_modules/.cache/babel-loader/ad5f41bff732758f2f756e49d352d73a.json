{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch } from '../../actions/actions';\nimport store from '../../store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  let dispatch = useDispatch();\n  let {\n    initsearch,\n    searchOrig,\n    searchgenre,\n    ordering,\n    apigames,\n    dbgames\n  } = store.getState(); // let inits = useSelector(state => state.initsearch);\n  // let cleans = useSelector(state => state.cleansearch);\n  // let orig = useSelector(state => state.searchOrig);\n  // // let origRef = useRef(orig);\n  // let apig = useSelector(state => state.apigames);\n  // // let apigRef = useRef(apig);\n  // let dbg = useSelector(state => state.dbgames);\n\n  let [showMsg, setShowMsg] = useState(true);\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n  console.log(searchOrig); // console.log(origRef)\n  // console.log(state)\n\n  useEffect(() => {\n    // Según el origen busca el arreglo de juegos\n    if (searchOrig === 'API') {\n      console.log('cargaste API'); // dispatch(getApiGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n\n    if (searchOrig === 'base de datos') {\n      console.log('falta cargar videojuegos en la base de datos'); // dispatch(getdbGames());\n\n      setShowMsg(false);\n      setGettingG(true);\n    }\n  }, [searchOrig]); //, dispatch])\n\n  useEffect(() => {\n    console.log('(1)'); // console.log(apigRef.current);\n    // console.log(origRef.current);\n  }, [gettingG]); //   console.log(origin);\n  //   console.log(origRef.current);\n  //   useEffect(() => {\n  //     // console.log(origRef.current);\n  //     const getarr = (orig,apig,dbg) => {\n  //       if ((orig === 'API')&&(apig.length !== 0)) {\n  //         setGames(apig);\n  //         console.log(`cargó games con API`);\n  //       }\n  //       if ((orig === 'base de datos')&&(dbg.length !== 0)) {\n  //         setGames(dbg);\n  //         console.log(`cargó games con BD`);\n  //       }\n  //     }\n  //     getarr(origRef.current,apig,dbg);\n  //  // }, [gettingG,apig,dbg])\n  //   },[])\n  //   console.log(`showMsg: ${showMsg}`);\n  // }, [apig])\n  // simulo obtencion de juegos....Borrar luego...\n  // useEffect(() => {\n  //   console.log(`showMsg: ${showMsg}`);\n  // }, [showMsg])\n  // useEffect(() => {\n  //   if(cleans){\n  //     setGname('');\n  //     // console.log(`buscaste ${gname}`);\n  //     dispatch(titleSearch(''));\n  //     dispatch(cleansearch(false));\n  //   }\n  // },[cleans,gname,dispatch]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showMsg && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Seleccione primero un or\\xEDgen para su b\\xFAsqueda (API/DB)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this), gettingG && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" ...Obteniendo juegos de la \", searchOrig, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this), initsearch && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_cards_area\",\n        children: [/*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p_btn_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p_button\",\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"zGu8oHw0j2gBFKTGXyEmKqxLglA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Pagination/Pagination.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","GameCard","getApiGames","getdbGames","initsearch","store","Pagination","dispatch","searchOrig","searchgenre","ordering","apigames","dbgames","getState","showMsg","setShowMsg","gettingG","setGettingG","games","setGames","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,QAAoD,uBAApD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,MAAIC,QAAQ,GAAGP,WAAW,EAA1B;AACA,MAAI;AAAEI,IAAAA,UAAF;AAAcI,IAAAA,UAAd;AAA0BC,IAAAA,WAA1B;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA,QAAjD;AAA2DC,IAAAA;AAA3D,MAAuEP,KAAK,CAACQ,QAAN,EAA3E,CAHmC,CAMnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAhC;AAEAuB,EAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ,EAlBmC,CAmBnC;AACA;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIU,UAAU,KAAK,KAAnB,EAA0B;AACxBY,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADwB,CAExB;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,QAAIT,UAAU,KAAK,eAAnB,EAAoC;AAClCY,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EADkC,CAElC;;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACJ,GAdQ,EAcN,CAACT,UAAD,CAdM,CAAT,CAtBmC,CAoCnB;;AAEhBV,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADc,CAEd;AACA;AACD,GAJQ,EAIN,CAACL,QAAD,CAJM,CAAT,CAtCmC,CA4CnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACE;AAAA,eACGF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEGE,QAAQ,iBAAI;AAAA,iDAAiCR,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFf,EAGGJ,UAAU,iBAAI;AAAA,8BACb;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,eAKb;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALa;AAAA,oBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhGuBE,U;UAEPN,W;;;KAFOM,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Pagination.css';\nimport GameCard from '../GameCard/GameCard.jsx';\nimport { getApiGames, getdbGames, initsearch } from '../../actions/actions';\nimport store from '../../store/index';\n\nexport default function Pagination() {\n\n  let dispatch = useDispatch();\n  let { initsearch, searchOrig, searchgenre, ordering, apigames, dbgames } = store.getState();\n\n\n  // let inits = useSelector(state => state.initsearch);\n  // let cleans = useSelector(state => state.cleansearch);\n  // let orig = useSelector(state => state.searchOrig);\n  // // let origRef = useRef(orig);\n  // let apig = useSelector(state => state.apigames);\n  // // let apigRef = useRef(apig);\n  // let dbg = useSelector(state => state.dbgames);\n\n  let [showMsg, setShowMsg] = useState(true);\n  let [gettingG, setGettingG] = useState(false);\n  let [games, setGames] = useState([]);\n\n  console.log(searchOrig)\n  // console.log(origRef)\n  // console.log(state)\n\n  useEffect(() => {\n      // Según el origen busca el arreglo de juegos\n      if (searchOrig === 'API') {\n        console.log('cargaste API');\n        // dispatch(getApiGames());\n        setShowMsg(false);\n        setGettingG(true);\n      }\n      if (searchOrig === 'base de datos') {\n        console.log('falta cargar videojuegos en la base de datos');\n        // dispatch(getdbGames());\n        setShowMsg(false);\n        setGettingG(true);\n      }\n  }, [searchOrig])//, dispatch])\n\n  useEffect(() => {\n    console.log('(1)');\n    // console.log(apigRef.current);\n    // console.log(origRef.current);\n  }, [gettingG]);\n\n  //   console.log(origin);\n  //   console.log(origRef.current);\n  //   useEffect(() => {\n  //     // console.log(origRef.current);\n  //     const getarr = (orig,apig,dbg) => {\n  //       if ((orig === 'API')&&(apig.length !== 0)) {\n  //         setGames(apig);\n  //         console.log(`cargó games con API`);\n  //       }\n  //       if ((orig === 'base de datos')&&(dbg.length !== 0)) {\n  //         setGames(dbg);\n  //         console.log(`cargó games con BD`);\n  //       }\n  //     }\n  //     getarr(origRef.current,apig,dbg);\n  //  // }, [gettingG,apig,dbg])\n  //   },[])\n\n  //   console.log(`showMsg: ${showMsg}`);\n  // }, [apig])\n\n  // simulo obtencion de juegos....Borrar luego...\n  // useEffect(() => {\n  //   console.log(`showMsg: ${showMsg}`);\n  // }, [showMsg])\n\n  // useEffect(() => {\n  //   if(cleans){\n  //     setGname('');\n  //     // console.log(`buscaste ${gname}`);\n  //     dispatch(titleSearch(''));\n  //     dispatch(cleansearch(false));\n  //   }\n  // },[cleans,gname,dispatch]);\n\n\n  return (\n    <div>\n      {showMsg && <h3> Seleccione primero un orígen para su búsqueda (API/DB)</h3>}\n      {gettingG && <h3> ...Obteniendo juegos de la {searchOrig}.</h3>}\n      {initsearch && <>\n        <div className=\"p_cards_area\">\n          <GameCard />\n          <GameCard />\n        </div>\n        <div className=\"p_btn_area\">\n          <button className=\"p_button\">Anterior</button>\n          <button className=\"p_button\">Siguiente</button>\n        </div>\n      </>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}