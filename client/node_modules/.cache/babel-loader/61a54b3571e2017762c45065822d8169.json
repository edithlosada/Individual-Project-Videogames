{"ast":null,"code":"import { SET_NG_GEN_SEL, SET_NG_PTF_SEL, SEND_FORM, SEND_SEARCH, SET_ORIG, SET_SEARCH_GEN, SET_ORDER_OPT, DB_GEN_OP_SEARCH, API_GEN_OP_SEARCH } from '../actions/actions';\nconst initialState = {\n  //------New game------\n  nggensel: [],\n  ngplatfsel: [],\n  sended: false,\n  //-----Search game----\n  searchOps: {},\n  // Opciones de búsqueda de juegos\n  searchOrig: 'api',\n  searchgenre: '',\n  ordering: '',\n  dbgenopts: [],\n  apigenopts: []\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    //------New game------\n    case SET_NG_GEN_SEL:\n      return { ...state,\n        nggensel: action.payload\n      };\n\n    case SET_NG_PTF_SEL:\n      return { ...state,\n        ngplatfsel: action.payload\n      };\n\n    case SEND_FORM:\n      return { ...state,\n        sended: action.payload\n      };\n    //-----Search game----\n\n    case SEND_SEARCH:\n      return { ...state,\n        searchOps: action.payload\n      };\n\n    case SET_ORIG:\n      return { ...state,\n        searchOrig: action.payload\n      };\n\n    case SET_SEARCH_GEN:\n      return { ...state,\n        searchgenre: action.payload\n      };\n\n    case SET_ORDER_OPT:\n      return { ...state,\n        ordering: action.payload\n      };\n\n    case DB_GEN_OP_SEARCH:\n      return { ...state,\n        dbgenopts: action.payload\n      };\n\n    case API_GEN_OP_SEARCH:\n      return { ...state,\n        apigenopts: action.payload\n      };\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default reducer;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/reducers/reducers.js"],"names":["SET_NG_GEN_SEL","SET_NG_PTF_SEL","SEND_FORM","SEND_SEARCH","SET_ORIG","SET_SEARCH_GEN","SET_ORDER_OPT","DB_GEN_OP_SEARCH","API_GEN_OP_SEARCH","initialState","nggensel","ngplatfsel","sended","searchOps","searchOrig","searchgenre","ordering","dbgenopts","apigenopts","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,cAAzB,EAAyCC,SAAzC,EAAoDC,WAApD,EAAiEC,QAAjE,EAA2EC,cAA3E,EAA2FC,aAA3F,EAA0GC,gBAA1G,EAA2HC,iBAA3H,QAAoJ,oBAApJ;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,MAAM,EAAE,KAJW;AAKnB;AACAC,EAAAA,SAAS,EAAE,EANQ;AAML;AACdC,EAAAA,UAAU,EAAE,KAPO;AAQnBC,EAAAA,WAAW,EAAE,EARM;AASnBC,EAAAA,QAAQ,EAAE,EATS;AAUnBC,EAAAA,SAAS,EAAE,EAVQ;AAWnBC,EAAAA,UAAU,EAAE;AAXO,CAArB;;AAcA,SAASC,OAAT,CAAiBC,KAAK,GAAGX,YAAzB,EAAuCY,MAAvC,EAA+C;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKtB,cAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELV,QAAAA,QAAQ,EAAEW,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAKtB,cAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELT,QAAAA,UAAU,EAAEU,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKrB,SAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELR,QAAAA,MAAM,EAAES,MAAM,CAACE;AAFV,OAAP;AAIF;;AACA,SAAKpB,WAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELP,QAAAA,SAAS,EAAEQ,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKnB,QAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELN,QAAAA,UAAU,EAAEO,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKlB,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAFf,OAAP;;AAIF,SAAKjB,aAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAKhB,gBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,SAAS,EAAEI,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKf,iBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFd,OAAP;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOH,KAAP;AApEJ;AAsED;;AAAA;AAED,eAAeD,OAAf","sourcesContent":["import { SET_NG_GEN_SEL, SET_NG_PTF_SEL, SEND_FORM, SEND_SEARCH, SET_ORIG, SET_SEARCH_GEN, SET_ORDER_OPT, DB_GEN_OP_SEARCH,API_GEN_OP_SEARCH } from '../actions/actions';\n\nconst initialState = {\n  //------New game------\n  nggensel: [],\n  ngplatfsel: [],\n  sended: false,\n  //-----Search game----\n  searchOps: {},// Opciones de búsqueda de juegos\n  searchOrig: 'api',\n  searchgenre: '',\n  ordering: '',\n  dbgenopts: [],\n  apigenopts: [],\n};\n\nfunction reducer(state = initialState, action) {\n\n  switch (action.type) {\n    //------New game------\n    case SET_NG_GEN_SEL:\n      return {\n        ...state,\n        nggensel: action.payload\n      }\n    case SET_NG_PTF_SEL:\n      return {\n        ...state,\n        ngplatfsel: action.payload\n      }\n    case SEND_FORM:\n      return {\n        ...state,\n        sended: action.payload\n      }\n    //-----Search game----\n    case SEND_SEARCH:\n      return {\n        ...state,\n        searchOps: action.payload\n      }\n    case SET_ORIG:\n      return {\n        ...state,\n        searchOrig: action.payload\n      }\n    case SET_SEARCH_GEN:\n      return {\n        ...state,\n        searchgenre: action.payload\n      }\n    case SET_ORDER_OPT:\n      return {\n        ...state,\n        ordering: action.payload\n      }\n    case DB_GEN_OP_SEARCH:\n      return {\n        ...state,\n        dbgenopts: action.payload\n      }    \n    case API_GEN_OP_SEARCH:\n      return {\n        ...state,\n        apigenopts: action.payload\n      }\n    // case GET_MOVIE_DETAIL:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.payload\n    //   }\n    // case ADD_MOVIE_FAVORITE:\n    //   let foundMovie = state.moviesLoaded.find(peli => peli.imdbID !== action.payload)\n    //   return {\n    //     ...state,\n    //     //moviesFavorite: state.moviesFavorite.concat(foundMovie)\n    //     moviesFavorite: [...state.moviesFavorite,foundMovie]\n    //   }\n    // case REMOVE_MOVIE_FAVORITE:\n    //   return {\n    //     ...state,\n    //     moviesFavorite: state.moviesFavorite.filter( (peli) => peli.imdbID !== action.payload)\n    //     //crea un nuevo array con todos los elementos que cumplan la condición\n    //     //cada peli es un objeto que en particular tiene una prop id\n    //   }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}