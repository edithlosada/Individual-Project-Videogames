{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/SearchBar/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './SearchBar.css';\nimport { titleSearch } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const dispatch = useDispatch();\n  const initsearch = useSelector(state => state.initsearch);\n  const [gname, setGname] = useState('');\n  const [cleaninp, setCleaninp] = useState(false); // Registra cambios en el input de búsqueda \n  // y lo guarda en el estado local del componente\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setGname(e.target.value);\n  }; // Cada vez que presione buscar, manda el titulo al store y limpia el input\n\n\n  let gref = useRef(gname);\n  useEffect(() => {\n    if (sent) {\n      console.log(`buscaste ${gname}`);\n      dispatch(titleSearch(gname)); // setCleaninp(true);\n    }\n  }, [sent, gname, dispatch]);\n  console.log(sent, gname);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search_input\",\n      type: \"text\",\n      placeholder: \" Ingrese el nombre del juego...\",\n      value: gname,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchBar, \"qHcmdD7qgOCuBUfCk4F8xq5kZz4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchBar;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/SearchBar/SearchBar.jsx"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","titleSearch","SearchBar","dispatch","initsearch","state","gname","setGname","cleaninp","setCleaninp","handleChange","e","console","log","target","value","gref","sent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAAyC,aAAzC;AACA,OAAO,iBAAP;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAElC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,UAAU,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAM,CAACE,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACY,QAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC,KAAD,CAAvC,CALkC,CAOlC;AACA;;AACA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAR,IAAAA,QAAQ,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD,GAHD,CATkC,CAclC;;;AACA,MAAIC,IAAI,GAAGlB,MAAM,CAACQ,KAAD,CAAjB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGoB,IAAH,EAAQ;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAWP,KAAM,EAA9B;AACAH,MAAAA,QAAQ,CAACF,WAAW,CAACK,KAAD,CAAZ,CAAR,CAFM,CAGN;AACD;AACF,GANQ,EAMP,CAACW,IAAD,EAAMX,KAAN,EAAYH,QAAZ,CANO,CAAT;AAQAS,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAAiBX,KAAjB;AAEA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,iCAFd;AAGE,MAAA,KAAK,EAAIA,KAHX;AAIE,MAAA,QAAQ,EAAII;AAJd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD;;GApCuBR,S;UAELH,W,EACEC,W;;;KAHGE,S;AAoCvB","sourcesContent":["import React, { useState , useEffect,useRef } from 'react';\nimport { useDispatch , useSelector} from 'react-redux';\nimport './SearchBar.css';\nimport { titleSearch } from '../../actions/actions';\n\nexport default function SearchBar() {\n\n  const dispatch = useDispatch();\n  const initsearch = useSelector(state => state.initsearch);\n  const [gname,setGname] = useState('');\n  const [cleaninp,setCleaninp] = useState(false);\n\n  // Registra cambios en el input de búsqueda \n  // y lo guarda en el estado local del componente\n  const handleChange = (e) => {\n    console.log(e.target.value);\n    setGname(e.target.value);\n  }\n\n  // Cada vez que presione buscar, manda el titulo al store y limpia el input\n  let gref = useRef(gname);\n  useEffect(() => {\n    if(sent){\n      console.log(`buscaste ${gname}`);\n      dispatch(titleSearch(gname));\n      // setCleaninp(true);\n    }\n  },[sent,gname,dispatch]);\n  \n  console.log(sent,gname);\n\n  return (\n    <>\n      <input className=\"search_input\"\n        type=\"text\" \n        placeholder=\" Ingrese el nombre del juego...\" \n        value = {gname}\n        onChange = {handleChange}\n      />\n    </>\n  )\n};\n\n"]},"metadata":{},"sourceType":"module"}