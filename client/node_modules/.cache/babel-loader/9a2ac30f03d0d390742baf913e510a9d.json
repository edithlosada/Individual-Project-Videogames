{"ast":null,"code":"import _slicedToArray from\"/home/edith/Desktop/PI/FT10-PI-Videogames/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import'./OrigSelect.css';import{setOrigOpt}from'../../actions/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function OriginSelect(){var dispatch=useDispatch();var cleans=useSelector(function(state){return state.cleansearch;});var origarr=[{label:'Base de datos',value:'base de datos'},{label:'API',value:'API'}];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),orig=_useState2[0],setOrig=_useState2[1];var handleChange=function handleChange(e){setOrig(e.target.value);};// //Cada vez que cambie el origen guarda el estado en el store\nuseEffect(function(){// console.log(orig);\ndispatch(setOrigOpt(orig));},[orig,dispatch]);// Cuando presione nueva búsqueda que limpie el género\n// useEffect(() => {\n//   if (cleans) {\n//     setOrig('');\n//   }\n// }, [cleans]);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"ocont\",children:/*#__PURE__*/_jsxs(\"select\",{name:\"origin\",className:\"oselect\",value:orig,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{defaultValue:true,children:\"Origen:\"}),origarr.map(function(option,index){return/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},index);})]})});}","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/OrigSelect/OrigSelect.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","setOrigOpt","OriginSelect","dispatch","cleans","state","cleansearch","origarr","label","value","orig","setOrig","handleChange","e","target","map","option","index"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAO,kBAAP,CACA,OAASC,UAAT,KAA2B,uBAA3B,C,wFAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CACrC,GAAIC,CAAAA,QAAQ,CAAGH,WAAW,EAA1B,CAEA,GAAII,CAAAA,MAAM,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAV,EAAN,CAAxB,CAEA,GAAIC,CAAAA,OAAO,CAAG,CACZ,CAAEC,KAAK,CAAE,eAAT,CAA0BC,KAAK,CAAE,eAAjC,CADY,CAEZ,CAAED,KAAK,CAAE,KAAT,CAAgBC,KAAK,CAAE,KAAvB,CAFY,CAAd,CALqC,cAUfZ,QAAQ,CAAC,EAAD,CAVO,wCAUhCa,IAVgC,eAU1BC,OAV0B,eAYrC,GAAIC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASL,KAAV,CAAP,CACD,CAFD,CAIA;AACAX,SAAS,CAAC,UAAM,CACd;AACAK,QAAQ,CAACF,UAAU,CAACS,IAAD,CAAX,CAAR,CACD,CAHQ,CAGN,CAACA,IAAD,CAAOP,QAAP,CAHM,CAAT,CAKA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,YAAK,SAAS,CAAC,OAAf,uBACE,gBACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,SAFZ,CAGE,KAAK,CAAEO,IAHT,CAIE,QAAQ,CAAEE,YAJZ,wBAME,eAAQ,YAAY,KAApB,qBANF,CAOGL,OAAO,CAACQ,GAAR,CAAY,SAACC,MAAD,CAASC,KAAT,qBACX,eAAoB,KAAK,CAAED,MAAM,CAACP,KAAlC,UAA0CO,MAAM,CAACR,KAAjD,EAAaS,KAAb,CADW,EAAZ,CAPH,GADF,EADF,CAeD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './OrigSelect.css';\nimport { setOrigOpt } from '../../actions/actions';\n\nexport default function OriginSelect() {\n  let dispatch = useDispatch();\n\n  let cleans = useSelector(state => state.cleansearch);\n\n  let origarr = [\n    { label: 'Base de datos', value: 'base de datos' },\n    { label: 'API', value: 'API' }\n  ];\n\n  let [orig, setOrig] = useState('');\n\n  let handleChange = (e) => {\n    setOrig(e.target.value);\n  }\n\n  // //Cada vez que cambie el origen guarda el estado en el store\n  useEffect(() => {\n    // console.log(orig);\n    dispatch(setOrigOpt(orig));\n  }, [orig, dispatch]);\n\n  // Cuando presione nueva búsqueda que limpie el género\n  // useEffect(() => {\n  //   if (cleans) {\n  //     setOrig('');\n  //   }\n  // }, [cleans]);\n\n  return (\n    <div className=\"ocont\">\n      <select\n        name=\"origin\"\n        className=\"oselect\"\n        value={orig}\n        onChange={handleChange}\n      >\n        <option defaultValue >Origen:</option>\n        {origarr.map((option, index) => (\n          <option key={index} value={option.value}>{option.label}</option>\n        ))}\n      </select>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}