{"ast":null,"code":"var _jsxFileName = \"/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index'; //import genresopt from '../Genres/Genres';\n\nimport { getDbGenres } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MultiSelectGenre() {\n  _s();\n\n  //const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading); // (1)Cuando cargue el componente que despache la acción \n  // que busca los géneros.\n\n  useEffect(() => {\n    console.log('(1) se cargó la página');\n    store.dispatch(getDbGenres());\n  }, []);\n\n  function select(state) {\n    return state.genreopt;\n  } // Se trae el el arreglo de géneros del store.\n  //const genres = useSelector(state => state.genreopt);\n\n\n  let [genreop, setGenreop] = useState([]);\n  let [show, setShow] = useState(false); // (2) Cuando cargó los géneros en (1) que cambie el estado \"show\" a true\n\n  useEffect(() => {\n    console.log('(2) En store cambió loading a ' + store.getState().loading);\n    setGenreop(genres);\n    console.log(genreop);\n    setShow(true);\n  }, [store.getState().loading]); //console.log('(2)cambió show a true, loading='+store.getState().loading);\n  // const genres = useSelector(state => state.genreopt);\n  // console.log(genres);\n  // useEffect(() => {\n  //   console.log(genreop);\n  //   setShow(true);\n  // }, [show,genreop])\n\n  console.log(show); // Estado de géneros seleccionados\n\n  let [sgenres, setSgenres] = useState([]); // selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {}, [sgenres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selgenfom\",\n    children: !show ? 'no muestra' : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genres\",\n        placeholder: \"Plataformas...\",\n        className: \"multselectgen\",\n        value: '',\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          defaultValue: true,\n          children: \"G\\xE9neros:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), genreop && genreop.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.value,\n          children: item.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gencont\",\n        children: sgenres.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"selgenbtn\",\n          value: item,\n          onClick: handleClick,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiSelectGenre, \"/mdgOI/+xHBQ0m82wxFmIbbsmMk=\", false, function () {\n  return [useSelector];\n});\n\n_c = MultiSelectGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectGenre\");","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/MultiSelectGenre/MultiSelectGenre.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","store","getDbGenres","MultiSelectGenre","loading","state","console","log","dispatch","select","genreopt","genreop","setGenreop","show","setShow","getState","genres","sgenres","setSgenres","removeItem","item","newItems","filter","e","handleChange","itemP","target","value","hasItem","includes","handleClick","itm","map","index","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAEzC;AACA,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B,CAHyC,CAKzC;AACA;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAN,IAAAA,KAAK,CAACO,QAAN,CAAeN,WAAW,EAA1B;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASO,MAAT,CAAgBJ,KAAhB,EAAsB;AACpB,WAAOA,KAAK,CAACK,QAAb;AACD,GAdwC,CAiBzC;AACA;;;AAEA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAI,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAA9B,CAtByC,CAwBzC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAiCN,KAAK,CAACc,QAAN,GAAiBX,OAA9D;AACAQ,IAAAA,UAAU,CAACI,MAAD,CAAV;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACAG,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GALQ,EAKN,CAACb,KAAK,CAACc,QAAN,GAAiBX,OAAlB,CALM,CAAT,CAzByC,CAiCzC;AAEA;AACA;AAGA;AACA;AACA;AACA;;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EA5CyC,CA6CzC;;AACA,MAAI,CAACI,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAApC,CA9CyC,CA8CA;;AAEzC,WAASsB,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAIC,QAAQ,GAAGJ,OAAO,CAACK,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAKH,IAA1B,CAAf;AACAF,IAAAA,UAAU,CAACG,QAAD,CAAV;AACD;;AAED,iBAAeG,YAAf,CAA4BD,CAA5B,EAA+B;AAC7B,QAAIE,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASC,KAArB;AACA,QAAIC,OAAO,GAAGX,OAAO,CAACY,QAAR,CAAiBJ,KAAjB,CAAd;;AACA,QAAI,CAACG,OAAL,EAAc;AACZV,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaQ,KAAb,CAAD,CAAV;AACD,KAFD,MAEO;AACLN,MAAAA,UAAU,CAACM,KAAD,CAAV;AACD;AACF;;AAED,WAASK,WAAT,CAAqBP,CAArB,EAAwB;AACtB,QAAIQ,GAAG,GAAGR,CAAC,CAACG,MAAF,CAASC,KAAnB;AACAR,IAAAA,UAAU,CAACY,GAAD,CAAV;AACD;;AAEDjC,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACmB,OAAD,CADM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACG,CAACJ,IAAD,GAAQ,YAAR,gBACC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,KAAK,EAAE,EAJT;AAKE,QAAA,QAAQ,EAAEW,YALZ;AAAA,gCAOE;AAAQ,UAAA,YAAY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQGb,OAAO,IAAIA,OAAO,CAACqB,GAAR,CAAY,CAACZ,IAAD,EAAOa,KAAP,kBACtB;AAAoB,UAAA,KAAK,EAAEb,IAAI,CAACO,KAAhC;AAAA,oBAAwCP,IAAI,CAACc;AAA7C,WAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,gBADU,CARd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGhB,OAAO,CAACe,GAAR,CAAY,CAACZ,IAAD,EAAOa,KAAP,kBACX;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,KAAK,EAAEb,IAArC;AACE,UAAA,OAAO,EAAEU,WADX;AAAA,oBAEGV;AAFH,WAC6Ba,KAD7B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAnGuB9B,gB;UAGNH,W;;;KAHMG,gB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './MultiSelectGenre.css';\nimport store from '../../store/index';\n//import genresopt from '../Genres/Genres';\nimport { getDbGenres } from '../../actions/actions';\n\nexport default function MultiSelectGenre() {\n\n  //const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading);\n  \n  // (1)Cuando cargue el componente que despache la acción \n  // que busca los géneros.\n  useEffect(() => {\n    console.log('(1) se cargó la página');\n    store.dispatch(getDbGenres());\n  }, []);\n  \n  function select(state){\n    return state.genreopt;\n  }\n  \n\n  // Se trae el el arreglo de géneros del store.\n  //const genres = useSelector(state => state.genreopt);\n  \n  let [genreop, setGenreop] = useState([]);\n  \n  let [show, setShow] = useState(false);\n\n  // (2) Cuando cargó los géneros en (1) que cambie el estado \"show\" a true\n  useEffect(() => {\n    console.log('(2) En store cambió loading a '+store.getState().loading);\n    setGenreop(genres);\n    console.log(genreop);\n    setShow(true);\n  }, [store.getState().loading])\n\n\n  //console.log('(2)cambió show a true, loading='+store.getState().loading);\n\n  // const genres = useSelector(state => state.genreopt);\n  // console.log(genres);\n  \n\n  // useEffect(() => {\n  //   console.log(genreop);\n  //   setShow(true);\n  // }, [show,genreop])\n\n  console.log(show);\n  // Estado de géneros seleccionados\n  let [sgenres, setSgenres] = useState([]);// selected genres\n\n  function removeItem(item) {\n    let newItems = sgenres.filter(e => e !== item);\n    setSgenres(newItems);\n  }\n\n  async function handleChange(e) {\n    let itemP = e.target.value;\n    let hasItem = sgenres.includes(itemP);\n    if (!hasItem) {\n      setSgenres([...sgenres, itemP]);\n    } else {\n      removeItem(itemP);\n    }\n  }\n\n  function handleClick(e) {\n    let itm = e.target.value;\n    removeItem(itm);\n  }\n\n  useEffect(() => {\n  }, [sgenres]);\n\n  return (\n    <div className=\"selgenfom\">\n      {!show ? 'no muestra' :\n        <>\n          <select\n            name=\"genres\"\n            placeholder=\"Plataformas...\"\n            className=\"multselectgen\"\n            value={''}\n            onChange={handleChange}\n          >\n            <option defaultValue>Géneros:</option>\n            {genreop && genreop.map((item, index) => (\n              <option key={index} value={item.value}>{item.label}</option>\n            ))}\n          </select>\n          <div className=\"gencont\">\n            {sgenres.map((item, index) => (\n              <button className=\"selgenbtn\" value={item}\n                onClick={handleClick} key={index}>\n                {item}\n              </button>\n            ))}\n          </div>\n        </>\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}