{"ast":null,"code":"const genresopt = [];\n\nconst buildGenObjArr = async function () {\n  fetch(\"http://localhost:3001/genres\").then(response => response.json()).then(arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let obj = {\n        value: arr[i].name,\n        label: arr[i].name\n      };\n      genresopt.push(obj);\n    }\n  }).catch(error => console.log(error));\n};\n\nbuildGenObjArr();\nexport default genresopt; // function getPlatforms() {\n//   fetch(\"https://api.rawg.io/api/genres\") //url de api con plataformas\n//     .then(response => response.json()) //aplica json y retorna\n//     .then(json => {\n//       let data = json.results;\n//       for (let i = 0; i < data.length; i++) {\n//         //plataformas.push(data[i].name)\n//         let obj = { value: data[i].name, label: data[i].name };\n//         genres.push(obj);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//   return genres;\n// }\n// let genresopt = getPlatforms();\n// //console.log(genresopt);\n// export default genresopt;\n// export const genresopt = [\n//   { value: \"Action\", label: \"Action\" },\n//   { value: \"Indie\", label: \"Indie\" },\n//   { value: \"Adventure\", label: \"Adventure\" },\n//   { value: \"RPG\", label: \"RPG\" },\n//   { value: \"Strategy\", label: \"Strategy\" },\n//   { value: \"Shooter\", label: \"Shooter\" },\n//   { value: \"Casual\", label: \"Casual\" },\n//   { value: \"Simulation\", label: \"Simulation\" },\n//   { value: \"Puzzle\", label: \"Puzzle\" },\n//   { value: \"Arcade\", label: \"Arcade\" },\n//   { value: \"Platformer\", label: \"Platformer\" },\n//   { value: \"Racing\", label: \"Racing\" },\n//   { value: \"Sports\", label: \"Sports\" },\n//   { value: \"Massively Multiplayer\", label: \"Massively Multiplayer\" },\n//   { value: \"Fighting\", label: \"Fighting\" },\n//   { value: \"Family\", label: \"Family\" },\n//   { value: \"Board Games\", label: \"Board Games\" },\n//   { value: \"Educational\", label: \"Educational\" },\n//   { value: \"Card\", label: \"Card\" }\n// ]\n// export default genresopt;","map":{"version":3,"sources":["/home/edith/Desktop/PI/FT10-PI-Videogames/client/src/components/Genres/Genres.js"],"names":["genresopt","buildGenObjArr","fetch","then","response","json","arr","i","length","obj","value","name","label","push","catch","error","console","log"],"mappings":"AAAA,MAAMA,SAAS,GAAG,EAAlB;;AAEA,MAAMC,cAAc,GAAG,kBAAkB;AAEvCC,EAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,GAAG,IAAI;AACX,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIE,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAEJ,GAAG,CAACC,CAAD,CAAH,CAAOI,IAAhB;AAAsBC,QAAAA,KAAK,EAAEN,GAAG,CAACC,CAAD,CAAH,CAAOI;AAApC,OAAV;AACAX,MAAAA,SAAS,CAACa,IAAV,CAAeJ,GAAf;AACD;AACF,GAPH,EAQGK,KARH,CAQSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARlB;AASD,CAXD;;AAaAd,cAAc;AAEd,eAAeD,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["const genresopt = [];\n\nconst buildGenObjArr = async function () {\n\n  fetch(\"http://localhost:3001/genres\")\n    .then(response => response.json()) \n    .then(arr => {\n      for (let i = 0; i < arr.length; i++) {\n        let obj = { value: arr[i].name, label: arr[i].name };\n        genresopt.push(obj);\n      }\n    })\n    .catch(error => console.log(error))\n}\n\nbuildGenObjArr();\n\nexport default genresopt;\n\n// function getPlatforms() {\n//   fetch(\"https://api.rawg.io/api/genres\") //url de api con plataformas\n//     .then(response => response.json()) //aplica json y retorna\n//     .then(json => {\n//       let data = json.results;\n//       for (let i = 0; i < data.length; i++) {\n//         //plataformas.push(data[i].name)\n//         let obj = { value: data[i].name, label: data[i].name };\n//         genres.push(obj);\n//       }\n//     })\n//     .catch(error => console.log(error))\n//   return genres;\n// }\n\n// let genresopt = getPlatforms();\n// //console.log(genresopt);\n\n// export default genresopt;\n\n// export const genresopt = [\n//   { value: \"Action\", label: \"Action\" },\n//   { value: \"Indie\", label: \"Indie\" },\n//   { value: \"Adventure\", label: \"Adventure\" },\n//   { value: \"RPG\", label: \"RPG\" },\n//   { value: \"Strategy\", label: \"Strategy\" },\n//   { value: \"Shooter\", label: \"Shooter\" },\n//   { value: \"Casual\", label: \"Casual\" },\n//   { value: \"Simulation\", label: \"Simulation\" },\n//   { value: \"Puzzle\", label: \"Puzzle\" },\n//   { value: \"Arcade\", label: \"Arcade\" },\n//   { value: \"Platformer\", label: \"Platformer\" },\n//   { value: \"Racing\", label: \"Racing\" },\n//   { value: \"Sports\", label: \"Sports\" },\n//   { value: \"Massively Multiplayer\", label: \"Massively Multiplayer\" },\n//   { value: \"Fighting\", label: \"Fighting\" },\n//   { value: \"Family\", label: \"Family\" },\n//   { value: \"Board Games\", label: \"Board Games\" },\n//   { value: \"Educational\", label: \"Educational\" },\n//   { value: \"Card\", label: \"Card\" }\n// ]\n\n// export default genresopt;\n"]},"metadata":{},"sourceType":"module"}